

----QUIT----(13 October 2021 15:20:10) CuisUniversity-4913.image priorSource: 14638157!

----STARTUP---- (13 October 2021 15:20:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4913.image!


----QUIT----(13 October 2021 15:20:10) CuisUniversity-4913.image priorSource: 18661767!

----STARTUP---- (13 October 2021 15:21:02) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4913.image!


----QUIT----(13 October 2021 15:21:02) CuisUniversity-4913.image priorSource: 18661997!

----QUIT----(13 October 2021 15:26:07) CuisUniversity-4913.image priorSource: 14638157!

----STARTUP---- (13 October 2021 15:26:08) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4913.image!


----QUIT----(13 October 2021 15:26:08) CuisUniversity-4913.image priorSource: 18661767!

----STARTUP---- (4 November 2021 19:34:58) as /home/juli/Documentos/Facu/Inge1/cuis-university/CuisUniversity-4913.image!


----End fileIn of /home/juli/Documentos/Facu/Inge1/cuis-university/TusLibros-33.st----!

!classRemoval: #StoreTestObjectsFactory stamp: 'JD 11/4/2021 19:47:31'!
Object subclass: #StoreTestObjectsFactory
	instanceVariableNames: 'today'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Sale stamp: 'JD 11/4/2021 19:47:31'!
Object subclass: #Sale
	instanceVariableNames: 'total'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CreditCard stamp: 'JD 11/4/2021 19:47:31'!
Object subclass: #CreditCard
	instanceVariableNames: 'expiration'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cashier stamp: 'JD 11/4/2021 19:47:32'!
Object subclass: #Cashier
	instanceVariableNames: 'cart salesBook merchantProcessor creditCard total'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Cart stamp: 'JD 11/4/2021 19:47:32'!
Object subclass: #Cart
	instanceVariableNames: 'catalog items'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CashierTest stamp: 'JD 11/4/2021 19:47:32'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'testObjectsFactory debitBehavior'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CartTest stamp: 'JD 11/4/2021 19:47:33'!
TestCase subclass: #CartTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

----End fileIn of /home/juli/Documentos/Facu/Inge1/2021-2c/20-TusLibros/TusLibros-33.st----!

TestCase subclass: #InterfaceTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InterfaceTest category: 'TusLibros' stamp: 'JD 11/4/2021 19:57:49'!
TestCase subclass: #InterfaceTest
	instanceVariableNames: 'testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #XX category: 'TusLibros' stamp: 'JD 11/4/2021 20:06:47'!
Object subclass: #XX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #AuthenticationStub category: 'TusLibros' stamp: 'JD 11/4/2021 20:06:52'!
Object subclass: #AuthenticationStub
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InterfaceTest category: 'TusLibros' stamp: 'JD 11/4/2021 20:07:01'!
TestCase subclass: #InterfaceTest
	instanceVariableNames: 'testObjectsFactory storeTestObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InterfaceTest methodsFor: 'no messages' stamp: 'JD 11/4/2021 20:06:37'!
test01

	| xx |
	xx := XX authenticatingWith: AuthenticationStub.
	
	self
		should: [xx createCartFor: storeTestObjectsFactory invalidUser with: storeTestObjectsFactory password]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError errorMessage = xx invalidUserErrorMessage]! !

TestCase subclass: #InterfaceTest
	instanceVariableNames: 'storeTestObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #InterfaceTest category: 'TusLibros' stamp: 'JD 11/4/2021 20:07:16'!
TestCase subclass: #InterfaceTest
	instanceVariableNames: 'storeTestObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:07:43' overrides: 16927572!
setUp 

	storeTestObjectsFactory := StoreTestObjectsFactory new! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/4/2021 20:07:48'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/4/2021 20:07:48'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/4/2021 20:07:48'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/4/2021 20:07:48'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/4/2021 20:07:48'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/4/2021 20:07:48'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/4/2021 20:07:48'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/4/2021 20:07:48'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/4/2021 20:07:48'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/4/2021 20:07:48'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/4/2021 20:07:48'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/4/2021 20:07:48'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/4/2021 20:07:48'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/4/2021 20:07:48'!
PASSED!

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 20:07:48'!
ERROR!

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 20:07:48'!
ERROR!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:11:02' prior: 50916032!
test01

	| xx |
	xx := XX authenticatingWith: self authenticationPreparedForInvalidUserFailure.
	
	self
		should: [xx createCartFor: self invalidUser with: self password]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError errorMessage = xx invalidUserErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:11:45'!
authenticationPreparedForInvalidUserFailure
	
	| anAuthenticationStub |
	anAuthenticationStub := AuthenticationStub new.
	anAuthenticationStub prepareForInvalidUserFailure.
	
	^ anAuthenticationStub! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:11:51' prior: 50916124!
authenticationPreparedForInvalidUserFailure
	
	| anAuthenticationStub |

	anAuthenticationStub := AuthenticationStub new.
	anAuthenticationStub prepareForInvalidUserFailure.
	
	^ anAuthenticationStub! !

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 20:12:12'!
ERROR!
!AuthenticationStub methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:12:21'!
prepareForInvalidUserFailure
	self shouldBeImplemented.! !

!classDefinition: #AuthenticationStub category: 'TusLibros' stamp: 'JD 11/4/2021 20:13:15'!
Object subclass: #AuthenticationStub
	instanceVariableNames: 'authenticationResult'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!AuthenticationStub methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:13:13' prior: 50916146!
prepareForInvalidUserFailure
	
	authenticationResult := 'Invalid User'! !
!AuthenticationStub methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:13:54' prior: 50916159!
prepareForInvalidUserFailure
	
	authenticationResult := 'Invalid user or password'! !
!AuthenticationStub methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:14:05'!
prepareForInvalidUserOrPasswordFailure
	
	authenticationResult := 'Invalid user or password'! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:14:05' prior: 50916134!
authenticationPreparedForInvalidUserFailure
	
	| anAuthenticationStub |

	anAuthenticationStub := AuthenticationStub new.
	anAuthenticationStub prepareForInvalidUserOrPasswordFailure.
	
	^ anAuthenticationStub! !

!methodRemoval: AuthenticationStub #prepareForInvalidUserFailure stamp: 'JD 11/4/2021 20:14:05'!
prepareForInvalidUserFailure
	
	authenticationResult := 'Invalid user or password'!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:14:23'!
authenticationPreparedForInvalidUserOrPasswordFailure
	
	| anAuthenticationStub |

	anAuthenticationStub := AuthenticationStub new.
	anAuthenticationStub prepareForInvalidUserOrPasswordFailure.
	
	^ anAuthenticationStub! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:14:23' prior: 50916112!
test01

	| xx |
	xx := XX authenticatingWith: self authenticationPreparedForInvalidUserOrPasswordFailure.
	
	self
		should: [xx createCartFor: self invalidUser with: self password]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError errorMessage = xx invalidUserErrorMessage]! !

!methodRemoval: InterfaceTest #authenticationPreparedForInvalidUserFailure stamp: 'JD 11/4/2021 20:14:23'!
authenticationPreparedForInvalidUserFailure
	
	| anAuthenticationStub |

	anAuthenticationStub := AuthenticationStub new.
	anAuthenticationStub prepareForInvalidUserOrPasswordFailure.
	
	^ anAuthenticationStub!

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 20:15:19'!
ERROR!

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 20:15:36'!
ERROR!
!XX class methodsFor: 'instance creation' stamp: 'JD 11/4/2021 20:15:40'!
authenticatingWith: anAuthenticationStub 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeAuthenticatingWith: anAuthenticationStub ! !
!XX class methodsFor: 'instance creation' stamp: 'JD 11/4/2021 20:16:01' prior: 50916230!
authenticatingWith: anAuthenticationSystem

	^ self new initializeAuthenticatingWith: anAuthenticationSystem ! !

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 20:16:02'!
ERROR!

!classDefinition: #XX category: 'TusLibros' stamp: 'JD 11/4/2021 20:16:09'!
Object subclass: #XX
	instanceVariableNames: 'authenticationSystem'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!XX methodsFor: 'initialization' stamp: 'JD 11/4/2021 20:16:09'!
initializeAuthenticatingWith: anAuthenticationSystem 
	self shouldBeImplemented.
	authenticationSystem := anAuthenticationSystem.! !
!XX methodsFor: 'initialization' stamp: 'JD 11/4/2021 20:16:19' prior: 50916255!
initializeAuthenticatingWith: anAuthenticationSystem 

	authenticationSystem := anAuthenticationSystem! !

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 20:16:21'!
ERROR!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:16:27'!
invalidUser
	self shouldBeImplemented.! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:16:53' prior: 50916271!
invalidUser

	^ 'InvalidUser'! !

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 20:17:03'!
ERROR!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:17:10'!
password
	self shouldBeImplemented.! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:17:44' prior: 50916282!
password
	
	^ 'ValidPassword'! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:17:54'!
validPassword
	
	^ 'ValidPassword'! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:17:54' prior: 50916203!
test01

	| xx |
	xx := XX authenticatingWith: self authenticationPreparedForInvalidUserOrPasswordFailure.
	
	self
		should: [xx createCartFor: self invalidUser with: self validPassword]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError errorMessage = xx invalidUserErrorMessage]! !

!methodRemoval: InterfaceTest #password stamp: 'JD 11/4/2021 20:17:54'!
password
	
	^ 'ValidPassword'!

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 20:18:02'!
ERROR!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:18:10'!
createCartFor: aString with: aString2 
	self shouldBeImplemented.! !
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:18:59' prior: 50916314!
createCartFor: aUser with: aUserPassword 
	
	self error: XX invalidUserErrorMessage! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:19:05' prior: 50916296!
test01

	| xx |
	xx := XX authenticatingWith: self authenticationPreparedForInvalidUserOrPasswordFailure.
	
	self
		should: [xx createCartFor: self invalidUser with: self validPassword]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError errorMessage = XX invalidUserErrorMessage]! !

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 20:19:07'!
ERROR!
!XX class methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:19:16'!
invalidUserErrorMessage
	self shouldBeImplemented.! !
!XX class methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:19:39' prior: 50916340!
invalidUserErrorMessage
	
	^ 'Invalid User or Password'! !
!XX class methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:19:49'!
invalidUserOrPasswordErrorMessage
	
	^ 'Invalid User or Password'! !
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:19:49' prior: 50916319!
createCartFor: aUser with: aUserPassword 
	
	self error: XX invalidUserOrPasswordErrorMessage! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:19:49' prior: 50916325!
test01

	| xx |
	xx := XX authenticatingWith: self authenticationPreparedForInvalidUserOrPasswordFailure.
	
	self
		should: [xx createCartFor: self invalidUser with: self validPassword]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError errorMessage = XX invalidUserOrPasswordErrorMessage]! !

!methodRemoval: XX class #invalidUserErrorMessage stamp: 'JD 11/4/2021 20:19:49'!
invalidUserErrorMessage
	
	^ 'Invalid User or Password'!

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 20:19:55'!
ERROR!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:20:26' prior: 50916362!
test01

	| xx |
	xx := XX authenticatingWith: self authenticationPreparedForInvalidUserOrPasswordFailure.
	
	self
		should: [xx createCartFor: self invalidUser with: self validPassword]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidUserOrPasswordErrorMessage]! !

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 20:20:27'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/4/2021 20:20:27'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/4/2021 20:20:27'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/4/2021 20:20:27'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/4/2021 20:20:27'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/4/2021 20:20:27'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/4/2021 20:20:27'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/4/2021 20:20:27'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/4/2021 20:20:27'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/4/2021 20:20:27'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/4/2021 20:20:27'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/4/2021 20:20:27'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/4/2021 20:20:27'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/4/2021 20:20:27'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/4/2021 20:20:27'!
PASSED!

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 20:20:27'!
PASSED!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:22:15'!
authenticationSystemPreparedForInvalidUserOrPasswordFailure
	
	| anAuthenticationStub |

	anAuthenticationStub := AuthenticationStub new.
	anAuthenticationStub prepareForInvalidUserOrPasswordFailure.
	
	^ anAuthenticationStub! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:22:15' prior: 50916382!
test01

	| xx |
	xx := XX authenticatingWith: self authenticationSystemPreparedForInvalidUserOrPasswordFailure.
	
	self
		should: [xx createCartFor: self invalidUser with: self validPassword]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidUserOrPasswordErrorMessage]! !

!methodRemoval: InterfaceTest #authenticationPreparedForInvalidUserOrPasswordFailure stamp: 'JD 11/4/2021 20:22:15'!
authenticationPreparedForInvalidUserOrPasswordFailure
	
	| anAuthenticationStub |

	anAuthenticationStub := AuthenticationStub new.
	anAuthenticationStub prepareForInvalidUserOrPasswordFailure.
	
	^ anAuthenticationStub!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:24:40'!
test02

	| xx aCartId cartContents |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForInvalidUserOrPasswordFailure.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	cartContents := xx listCart: aCartId.
	self assert: cartContents isEmpty! !

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 20:25:00'!
ERROR!

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 20:25:01'!
ERROR!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:25:07'!
validUser
	self shouldBeImplemented.! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:25:15' prior: 50916497!
validUser
	
	^ 'ValidUser'! !

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 20:25:16'!
ERROR!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:30:21' prior: 50916355!
createCartFor: aUser with: aUserPassword 
	
	self assert: (authenticationSystem authenticate: aUser with: aUserPassword) description: [self error: XX invalidUserOrPasswordErrorMessage]! !

'' isEmpty.!

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 20:33:30'!
ERROR!
!AuthenticationStub methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:34:01'!
authenticate: aString with: aString2 
	self shouldBeImplemented.! !
!AuthenticationStub methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:34:30' prior: 50916520!
authenticate: aUser with: aUserPassword 
	
	^ authenticationResult ! !

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 20:34:33'!
ERROR!
!AuthenticationStub methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:35:10' overrides: 16896425!
initialize
	
	authenticationResult := 'Ok'! !
!AuthenticationStub methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:35:15' prior: 50916534 overrides: 16896425!
initialize
	
	authenticationResult := 'OK'! !
!AuthenticationStub methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:35:44' prior: 50916171!
prepareForInvalidUserOrPasswordFailure
	
	authenticationResult := false! !
!AuthenticationStub methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:35:54' prior: 50916540 overrides: 16896425!
initialize
	
	authenticationResult := true! !
!AuthenticationStub methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:37:32'!
prepareForAuthenticationSuccess
	
	authenticationResult := true! !

!methodRemoval: AuthenticationStub #initialize stamp: 'JD 11/4/2021 20:37:34'!
initialize
	
	authenticationResult := true!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:38:15' prior: 50916480!
test02

	| xx aCartId cartContents |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	cartContents := xx listCart: aCartId.
	self assert: cartContents isEmpty! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:38:36'!
authenticationSystemPreparedForAuthenticationSuccess
	
	| anAuthenticationStub |

	anAuthenticationStub := AuthenticationStub new.
	anAuthenticationStub prepareForAuthenticationSuccess.
	
	^ anAuthenticationStub! !

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 20:38:42'!
ERROR!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:38:46'!
listCart: aXX 
	self shouldBeImplemented.! !
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:39:00' prior: 50916590!
listCart: aCart 
	
	^ OrderedCollection new! !

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 20:39:02'!
PASSED!

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 20:39:02'!
PASSED!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:47:28' prior: 50916566!
test02

	| xx aCartId cartContents |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	cartContents := xx listCart: aCartId.
	self assert: (OrderedCollection with: 0) equals: cartContents! !
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:47:41' prior: 50916595!
listCart: aCart 
	
	^ OrderedCollection with: 0! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/4/2021 20:47:42'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/4/2021 20:47:42'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/4/2021 20:47:42'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/4/2021 20:47:42'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/4/2021 20:47:42'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/4/2021 20:47:42'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/4/2021 20:47:42'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/4/2021 20:47:42'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/4/2021 20:47:42'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/4/2021 20:47:42'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/4/2021 20:47:42'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/4/2021 20:47:42'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/4/2021 20:47:42'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/4/2021 20:47:42'!
PASSED!

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 20:47:42'!
PASSED!

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 20:47:42'!
PASSED!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:54:34'!
test03

	| xx aCartId cartContents |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.

	cartContents := xx listCart: aCartId.
	self assert: (OrderedCollection with: 0 with: storeTestObjectsFactory itemSellByTheStore with: 1) equals: cartContents! !

!testRun: #InterfaceTest #test03 stamp: 'JD 11/4/2021 20:54:40'!
ERROR!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:54:47'!
addToCart: aXX quantity: aSmallInteger of: aString 
	self shouldBeImplemented.! !

!classDefinition: #XX category: 'TusLibros' stamp: 'JD 11/4/2021 20:57:55'!
Object subclass: #XX
	instanceVariableNames: 'authenticationSystem carts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 20:57:50' prior: 50916738!
addToCart: aCartId quantity: aBookQuantity of: aBookISBN 
	
	(carts at: aCartId) add: aBookQuantity of: aBookISBN! !

!testRun: #InterfaceTest #test03 stamp: 'JD 11/4/2021 20:58:01'!
ERROR!

!classDefinition: #XX category: 'TusLibros' stamp: 'JD 11/4/2021 21:01:12'!
Object subclass: #XX
	instanceVariableNames: 'authenticationSystem carts catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 21:01:09' prior: 50916508!
createCartFor: aUser with: aUserPassword 
	
	self assert: (authenticationSystem authenticate: aUser with: aUserPassword) description: [self error: XX invalidUserOrPasswordErrorMessage].
	
	carts add: (Cart acceptingItemsOf: catalog).

	^ 0! !
!XX methodsFor: 'initialization' stamp: 'JD 11/4/2021 21:04:45'!
initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog  

	authenticationSystem := anAuthenticationSystem! !
!XX class methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 21:04:45' prior: 50916240!
authenticatingWith: anAuthenticationSystem

	^ self new initializeAuthenticatingWith: anAuthenticationSystem withCatalog: storeTestObjectsFactory defaultCatalog ! !

!methodRemoval: XX #initializeAuthenticatingWith: stamp: 'JD 11/4/2021 21:04:45'!
initializeAuthenticatingWith: anAuthenticationSystem 

	authenticationSystem := anAuthenticationSystem!

----SNAPSHOT----(4 November 2021 21:09:18) CuisUniversity-4913.image priorSource: 18661997!

----SNAPSHOT----(4 November 2021 21:21:19) CuisUniversity-4913.image priorSource: 18724703!
!XX class methodsFor: 'instance creation' stamp: 'JD 11/4/2021 21:22:55'!
authenticatingWith: anAuthenticationSystem withCatalog: aCatalog 

	^ self new initializeAuthenticatingWith: anAuthenticationSystem withCatalog: storeTestObjectsFactory defaultCatalog ! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 21:22:56' prior: 50916719!
test03

	| xx aCartId cartContents |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.

	cartContents := xx listCart: aCartId.
	self assert: (OrderedCollection with: 0 with: storeTestObjectsFactory itemSellByTheStore with: 1) equals: cartContents! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 21:22:56' prior: 50916652!
test02

	| xx aCartId cartContents |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	cartContents := xx listCart: aCartId.
	self assert: (OrderedCollection with: 0) equals: cartContents! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 21:22:56' prior: 50916456!
test01

	| xx |
	xx := XX authenticatingWith: self authenticationSystemPreparedForInvalidUserOrPasswordFailure withCatalog: storeTestObjectsFactory defaultCatalog.
	
	self
		should: [xx createCartFor: self invalidUser with: self validPassword]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidUserOrPasswordErrorMessage]! !

!methodRemoval: XX class #authenticatingWith: stamp: 'JD 11/4/2021 21:22:56'!
authenticatingWith: anAuthenticationSystem

	^ self new initializeAuthenticatingWith: anAuthenticationSystem withCatalog: storeTestObjectsFactory defaultCatalog !
!XX class methodsFor: 'instance creation' stamp: 'JD 11/4/2021 21:23:04' prior: 50916804!
authenticatingWith: anAuthenticationSystem withCatalog: aCatalog 

	^ self new initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog! !
!XX methodsFor: 'initialization' stamp: 'JD 11/4/2021 21:23:19' prior: 50916777!
initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog  

	authenticationSystem := anAuthenticationSystem.
	catalog := aCatalog! !

!testRun: #InterfaceTest #test03 stamp: 'JD 11/4/2021 21:23:33'!
ERROR!
!XX methodsFor: 'initialization' stamp: 'JD 11/4/2021 21:24:02' prior: 50916878!
initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog  

	authenticationSystem := anAuthenticationSystem.
	catalog := aCatalog.
	carts := OrderedCollection new! !
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 21:30:42' prior: 50916665!
listCart: aCart 
	
	| cartList |
	cartList := OrderedCollection with: 0.
	aCart items do: [:anItem | 
		cartList add: anItem.
		cartList add: (aCart occurrencesOf: anItem)
	].
	
	^ cartList! !
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 21:30:51' prior: 50916897!
listCart: aCart 
	
	| cartList |

	cartList := OrderedCollection with: 0.
	aCart items do: [:anItem | 
		cartList add: anItem.
		cartList add: (aCart occurrencesOf: anItem)
	].
	
	^ cartList! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/4/2021 21:30:59'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/4/2021 21:30:59'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/4/2021 21:30:59'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/4/2021 21:30:59'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/4/2021 21:30:59'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/4/2021 21:30:59'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/4/2021 21:30:59'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/4/2021 21:30:59'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/4/2021 21:30:59'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/4/2021 21:30:59'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/4/2021 21:30:59'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/4/2021 21:30:59'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/4/2021 21:30:59'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/4/2021 21:30:59'!
PASSED!

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 21:30:59'!
PASSED!

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 21:30:59'!
ERROR!

!testRun: #InterfaceTest #test03 stamp: 'JD 11/4/2021 21:30:59'!
ERROR!

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 21:31:03'!
ERROR!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 21:32:19' prior: 50916906!
listCart: aCartId
	
	| cartList cartForId |
	
	cartForId := carts at: aCartId.
	cartList := OrderedCollection with: 0.
	cartForId items do: [:anItem | 
		cartList add: anItem.
		cartList add: (cartForId occurrencesOf: anItem)
	].
	
	^ cartList! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/4/2021 21:32:27'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/4/2021 21:32:27'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/4/2021 21:32:27'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/4/2021 21:32:27'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/4/2021 21:32:27'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/4/2021 21:32:27'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/4/2021 21:32:27'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/4/2021 21:32:27'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/4/2021 21:32:27'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/4/2021 21:32:27'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/4/2021 21:32:27'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/4/2021 21:32:27'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/4/2021 21:32:27'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/4/2021 21:32:27'!
PASSED!

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 21:32:27'!
PASSED!

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 21:32:27'!
ERROR!

!testRun: #InterfaceTest #test03 stamp: 'JD 11/4/2021 21:32:27'!
ERROR!

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 21:32:29'!
ERROR!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/4/2021 21:32:46' prior: 50916767!
createCartFor: aUser with: aUserPassword 
	
	self assert: (authenticationSystem authenticate: aUser with: aUserPassword) description: [self error: XX invalidUserOrPasswordErrorMessage].
	
	carts add: (Cart acceptingItemsOf: catalog).

	^ 1! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/4/2021 21:32:48'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/4/2021 21:32:48'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/4/2021 21:32:48'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/4/2021 21:32:48'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/4/2021 21:32:48'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/4/2021 21:32:48'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/4/2021 21:32:48'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/4/2021 21:32:48'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/4/2021 21:32:48'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/4/2021 21:32:48'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/4/2021 21:32:48'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/4/2021 21:32:48'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/4/2021 21:32:48'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/4/2021 21:32:48'!
PASSED!

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 21:32:48'!
PASSED!

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 21:32:48'!
ERROR!

!testRun: #InterfaceTest #test03 stamp: 'JD 11/4/2021 21:32:48'!
ERROR!

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 21:32:49'!
ERROR!
!Cart methodsFor: 'nil' stamp: 'JD 11/4/2021 21:34:34'!
items
	
	^ items! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #InterfaceTest #test01 stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #InterfaceTest #test02 stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

!testRun: #InterfaceTest #test03 stamp: 'JD 11/4/2021 21:34:37'!
PASSED!

----SNAPSHOT----(4 November 2021 21:34:46) CuisUniversity-4913.image priorSource: 18724796!

----STARTUP---- (7 November 2021 15:06:57) as /home/juli/Documentos/Facu/Inge1/cuis-university/CuisUniversity-4913.image!

!Cart methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 15:18:55' prior: 50917098!
items
	
	^ items copy! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #InterfaceTest #test01 stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #InterfaceTest #test02 stamp: 'JD 11/7/2021 15:20:38'!
PASSED!

!testRun: #InterfaceTest #test03 stamp: 'JD 11/7/2021 15:20:38'!
PASSED!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 15:25:22'!
listItemsWithOccurrencesOf: aCartToList

	| aCartList |

	aCartList := OrderedCollection with: 0.
	aCartToList items do: [:anItem | 
		aCartList add: anItem.
		aCartList add: (aCartList occurrencesOf: anItem)
	].
	
	^ aCartList! !
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 15:25:44' prior: 50916969!
listCart: aCartId
	
	| cartForId |
	
	cartForId := carts at: aCartId.
	
	^ self listItemsWithOccurrencesOf: cartForId 
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #InterfaceTest #test01 stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #InterfaceTest #test02 stamp: 'JD 11/7/2021 15:25:47'!
PASSED!

!testRun: #InterfaceTest #test03 stamp: 'JD 11/7/2021 15:25:47'!
PASSED!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 15:26:33'!
test01CannotCreateACartWithAnInvalidUser

	| xx |
	xx := XX authenticatingWith: self authenticationSystemPreparedForInvalidUserOrPasswordFailure withCatalog: storeTestObjectsFactory defaultCatalog.
	
	self
		should: [xx createCartFor: self invalidUser with: self validPassword]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidUserOrPasswordErrorMessage]! !

!methodRemoval: InterfaceTest #test01 stamp: 'JD 11/7/2021 15:26:33'!
test01

	| xx |
	xx := XX authenticatingWith: self authenticationSystemPreparedForInvalidUserOrPasswordFailure withCatalog: storeTestObjectsFactory defaultCatalog.
	
	self
		should: [xx createCartFor: self invalidUser with: self validPassword]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidUserOrPasswordErrorMessage]!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 15:26:49'!
test02CanCreateACart

	| xx aCartId cartContents |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	cartContents := xx listCart: aCartId.
	self assert: (OrderedCollection with: 0) equals: cartContents! !

!methodRemoval: InterfaceTest #test02 stamp: 'JD 11/7/2021 15:26:49'!
test02

	| xx aCartId cartContents |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	cartContents := xx listCart: aCartId.
	self assert: (OrderedCollection with: 0) equals: cartContents!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 15:27:07'!
test03CanAddAnItemToCart

	| xx aCartId cartContents |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.

	cartContents := xx listCart: aCartId.
	self assert: (OrderedCollection with: 0 with: storeTestObjectsFactory itemSellByTheStore with: 1) equals: cartContents! !

!methodRemoval: InterfaceTest #test03 stamp: 'JD 11/7/2021 15:27:07'!
test03

	| xx aCartId cartContents |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.

	cartContents := xx listCart: aCartId.
	self assert: (OrderedCollection with: 0 with: storeTestObjectsFactory itemSellByTheStore with: 1) equals: cartContents!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 15:39:22'!
test04

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anInvalidCartId := 0.
	self
		should: [xx addToCart: anInvalidCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidCartIdErrorMessage]! !

!testRun: #InterfaceTest #test04 stamp: 'JD 11/7/2021 15:39:36'!
ERROR!
!XX class methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 15:39:42'!
invalidCartIdErrorMessage
	self shouldBeImplemented.! !
!XX class methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 15:40:07' prior: 50917399!
invalidCartIdErrorMessage
	
	^ 'Invalid cart ID'! !

!testRun: #InterfaceTest #test04 stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #InterfaceTest #test04 stamp: 'JD 11/7/2021 15:40:09'!
PASSED!

!testRun: #InterfaceTest #test04 stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #InterfaceTest #test04 stamp: 'JD 11/7/2021 15:40:24'!
PASSED!

!testRun: #InterfaceTest #test04 stamp: 'JD 11/7/2021 15:41:02'!
PASSED!

!testRun: #InterfaceTest #test04 stamp: 'JD 11/7/2021 15:43:01'!
PASSED!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 15:46:31' prior: 50917380!
test04

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anInvalidCartId := 0.
	self
		should: [xx addToCart: anInvalidCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError = XX invalidCartIdErrorMessage]! !

!testRun: #InterfaceTest #test04 stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/7/2021 15:46:32'!
PASSED!

!testRun: #InterfaceTest #test04 stamp: 'JD 11/7/2021 15:46:32'!
PASSED!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 15:46:35' prior: 50917531!
test04

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anInvalidCartId := 0.
	self
		should: [xx addToCart: anInvalidCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidCartIdErrorMessage]! !

!testRun: #InterfaceTest #test04 stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

!testRun: #InterfaceTest #test04 stamp: 'JD 11/7/2021 15:46:36'!
PASSED!

carts at: aCartId!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:00:34' prior: 50916751!
addToCart: aCartId quantity: aBookQuantity of: aBookISBN 
	
	self assert: (carts isInBounds: aCartId) description: [self error: XX invalidCartIdErrorMessage].
	(carts at: aCartId) add: aBookQuantity of: aBookISBN! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/7/2021 16:00:36'!
PASSED!

!testRun: #InterfaceTest #test04 stamp: 'JD 11/7/2021 16:00:36'!
PASSED!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:01:27'!
isCartIdValid: aCartId

	^ carts isInBounds: aCartId! !
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:01:27' prior: 50917682!
addToCart: aCartId quantity: aBookQuantity of: aBookISBN 
	
	self assert: (self isCartIdValid: aCartId) description: [self error: XX invalidCartIdErrorMessage].
	(carts at: aCartId) add: aBookQuantity of: aBookISBN! !
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:01:44'!
assertThatCartIdIsValid: aCartId

	^ self assert: (self isCartIdValid: aCartId) description: [self error: XX invalidCartIdErrorMessage]! !
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:01:44' prior: 50917753!
addToCart: aCartId quantity: aBookQuantity of: aBookISBN 
	
	self assertThatCartIdIsValid: aCartId.
	(carts at: aCartId) add: aBookQuantity of: aBookISBN! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/7/2021 16:01:47'!
PASSED!

!testRun: #InterfaceTest #test04 stamp: 'JD 11/7/2021 16:01:47'!
PASSED!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:02:46'!
test05

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anInvalidCartId := 0.
	self
		should: [xx addToCart: anInvalidCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidCartIdErrorMessage]! !

!methodRemoval: InterfaceTest #test04 stamp: 'JD 11/7/2021 16:02:46'!
test04

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anInvalidCartId := 0.
	self
		should: [xx addToCart: anInvalidCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidCartIdErrorMessage]!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:05:05'!
test03CanCreateManyCarts

	| xx aCartId cartContents anotherCartContents anotherCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	anotherCartId := 	xx createCartFor: self validUser with: self validPassword.

	cartContents := xx listCart: aCartId.
	anotherCartContents := xx listCart: anotherCartId.
	self assert: (OrderedCollection with: 0) equals: cartContents.
	self assert: (OrderedCollection with: 0) equals: anotherCartContents! !

!testRun: #InterfaceTest #test03CanCreateManyCarts stamp: 'JD 11/7/2021 16:05:13'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #InterfaceTest #test03CanCreateManyCarts stamp: 'JD 11/7/2021 16:05:14'!
PASSED!

!testRun: #InterfaceTest #test05 stamp: 'JD 11/7/2021 16:05:14'!
PASSED!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:09:27'!
test04CanCreateManyCarts

	| xx aCartId cartContents anotherCartContents anotherCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	anotherCartId := 	xx createCartFor: self validUser with: self validPassword.

	cartContents := xx listCart: aCartId.
	anotherCartContents := xx listCart: anotherCartId.
	self assert: (OrderedCollection with: 0) equals: cartContents.
	self assert: (OrderedCollection with: 0) equals: anotherCartContents! !

!methodRemoval: InterfaceTest #test03CanCreateManyCarts stamp: 'JD 11/7/2021 16:09:27'!
test03CanCreateManyCarts

	| xx aCartId cartContents anotherCartContents anotherCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	anotherCartId := 	xx createCartFor: self validUser with: self validPassword.

	cartContents := xx listCart: aCartId.
	anotherCartContents := xx listCart: anotherCartId.
	self assert: (OrderedCollection with: 0) equals: cartContents.
	self assert: (OrderedCollection with: 0) equals: anotherCartContents!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:11:06' prior: 50917950!
test04CanCreateManyCarts

	| xx aCartId cartContents anotherCartContents anotherCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	anotherCartId := 	xx createCartFor: self validUser with: self validPassword.

	cartContents := xx listCart: aCartId.
	anotherCartContents := xx listCart: anotherCartId.
	self assert: (OrderedCollection with: 0 with: storeTestObjectsFactory itemSellByTheStore with: 1) equals: cartContents.
	self assert: (OrderedCollection with: 0) equals: anotherCartContents! !

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/7/2021 16:11:07'!
FAILURE!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:14:54' prior: 50917034!
createCartFor: aUser with: aUserPassword 
	
	| aNewCart |
	self assert: (authenticationSystem authenticate: aUser with: aUserPassword) description: [self error: XX invalidUserOrPasswordErrorMessage].
	
	aNewCart := Cart acceptingItemsOf: catalog.
	carts add: aNewCart.

	^ carts indexOf: aNewCart! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/7/2021 16:14:57'!
PASSED!

!testRun: #InterfaceTest #test05 stamp: 'JD 11/7/2021 16:14:57'!
PASSED!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:15:16'!
idFor: aNewCart

	^ carts indexOf: aNewCart! !
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:15:16' prior: 50918024!
createCartFor: aUser with: aUserPassword 
	
	| aNewCart |
	self assert: (authenticationSystem authenticate: aUser with: aUserPassword) description: [self error: XX invalidUserOrPasswordErrorMessage].
	
	aNewCart := Cart acceptingItemsOf: catalog.
	carts add: aNewCart.

	^ self idFor: aNewCart! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/7/2021 16:15:19'!
PASSED!

!testRun: #InterfaceTest #test05 stamp: 'JD 11/7/2021 16:15:19'!
PASSED!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:16:29'!
test05CannotAddAnItemWithAnInvalidCartId

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anInvalidCartId := 0.
	self
		should: [xx addToCart: anInvalidCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidCartIdErrorMessage]! !

!methodRemoval: InterfaceTest #test05 stamp: 'JD 11/7/2021 16:16:29'!
test05

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anInvalidCartId := 0.
	self
		should: [xx addToCart: anInvalidCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidCartIdErrorMessage]!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:17:12'!
test06CannotListAnItemWithAnInvalidCartId

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anInvalidCartId := 0.
	self
		should: [xx listCart: anInvalidCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidCartIdErrorMessage]! !

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/7/2021 16:17:14'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/7/2021 16:17:14'!
PASSED!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:17:49' prior: 50918205!
test06CannotListAnItemWithAnInvalidCartId

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anInvalidCartId := 0.
	self
		should: [xx listCart: anInvalidCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError = XX invalidCartIdErrorMessage]! !

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/7/2021 16:17:49'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/7/2021 16:17:49'!
PASSED!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:17:52' prior: 50918288!
test06CannotListAnItemWithAnInvalidCartId

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anInvalidCartId := 0.
	self
		should: [xx listCart: anInvalidCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidCartIdErrorMessage]! !
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:18:28' prior: 50917226!
listCart: aCartId
	
	| cartForId |
	
	self assertThatCartIdIsValid: aCartId.

	cartForId := carts at: aCartId.
	
	^ self listItemsWithOccurrencesOf: cartForId 
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/7/2021 16:18:29'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/7/2021 16:18:29'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/7/2021 16:18:30'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/7/2021 16:18:30'!
PASSED!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:20:11' prior: 50917216!
listItemsWithOccurrencesOf: aCartToList

	| aCartList |

	aCartList := OrderedCollection new.
	aCartToList items do: [:anItem | 
		aCartList add: anItem.
		aCartList add: (aCartList occurrencesOf: anItem)
	].
	
	^ aCartList! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:20:23' prior: 50917315!
test02CanCreateACart

	| xx aCartId cartContents |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	cartContents := xx listCart: aCartId.
	self assert: (OrderedCollection new) equals: cartContents! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:20:30' prior: 50917343!
test03CanAddAnItemToCart

	| xx aCartId cartContents |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.

	cartContents := xx listCart: aCartId.
	self assert: (OrderedCollection with: storeTestObjectsFactory itemSellByTheStore with: 1) equals: cartContents! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:20:39' prior: 50917994!
test04CanCreateManyCarts

	| xx aCartId cartContents anotherCartContents anotherCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	anotherCartId := 	xx createCartFor: self validUser with: self validPassword.

	cartContents := xx listCart: aCartId.
	anotherCartContents := xx listCart: anotherCartId.
	self assert: (OrderedCollection with: storeTestObjectsFactory itemSellByTheStore with: 1) equals: cartContents.
	self assert: (OrderedCollection with: 0) equals: anotherCartContents! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/7/2021 16:20:42' prior: 50918504!
test04CanCreateManyCarts

	| xx aCartId cartContents anotherCartContents anotherCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	anotherCartId := 	xx createCartFor: self validUser with: self validPassword.

	cartContents := xx listCart: aCartId.
	anotherCartContents := xx listCart: anotherCartId.
	self assert: (OrderedCollection with: storeTestObjectsFactory itemSellByTheStore with: 1) equals: cartContents.
	self assert: (OrderedCollection new) equals: anotherCartContents! !

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/7/2021 16:20:50'!
PASSED!

----SNAPSHOT----(7 November 2021 16:42:45) CuisUniversity-4913.image priorSource: 18736084!

----SNAPSHOT----(7 November 2021 16:44:42) CuisUniversity-4913.image priorSource: 18783143!

----SNAPSHOT----(7 November 2021 16:44:59) CuisUniversity-4913.image priorSource: 18783236!

----SNAPSHOT----(7 November 2021 17:49:06) CuisUniversity-4913.image priorSource: 18783329!

----STARTUP---- (8 November 2021 18:00:37) as /home/juli/Documentos/Facu/Inge1/cuis-university/CuisUniversity-4913.image!

!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:00:09'!
test07

	| xx anExpiredCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anExpiredCartId := 0.
	self
		should: [xx listCart: anExpiredCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX expiredCartErrorMessage]! !

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:01:59'!
ERROR!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:02:00'!
ERROR!
!XX class methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:02:05'!
expiredCartErrorMessage
	self shouldBeImplemented.! !
!XX class methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:03:04' prior: 50918659!
expiredCartErrorMessage
	
	^ 'Cart has reached the expiration time'! !

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:03:06'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 20:03:06'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 20:03:06'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 20:03:06'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 20:03:06'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:03:06'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:03:06'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:03:06'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:03:10'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:03:10'!
PASSED!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:04:37' prior: 50918640!
test07

	| xx anExpiredCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anExpiredCartId := 0.
	self
		should: [xx listCart: anExpiredCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX expiredCartErrorMessage]! !

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:04:39'!
ERROR!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:04:56' prior: 50918371!
test06CannotListAnItemWithAnInvalidCartId

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anInvalidCartId := 0.
	self
		should: [xx listCart: anInvalidCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidCartIdErrorMessage]! !

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:04:57'!
ERROR!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:05:19' prior: 50918172!
test05CannotAddAnItemWithAnInvalidCartId

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anInvalidCartId := 0.
	self
		should: [xx addToCart: anInvalidCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidCartIdErrorMessage]! !

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:05:21'!
ERROR!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:05:31' prior: 50917285!
test01CannotCreateACartWithAnInvalidUser

	| xx |
	xx := XX authenticatingWith: self authenticationSystemPreparedForInvalidUserOrPasswordFailure withCatalog: storeTestObjectsFactory defaultCatalog.
	
	self
		should: [xx createCartFor: self invalidUser with: self validPassword]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidUserOrPasswordErrorMessage]! !

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 20:05:32'!
ERROR!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 20:07:27'!
ERROR!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:07:58' prior: 50918100!
createCartFor: aUser with: aUserPassword 
	
	| aNewCart |
	self assert: (authenticationSystem authenticate: aUser with: aUserPassword) description: [^ self error: XX invalidUserOrPasswordErrorMessage].
	
	aNewCart := Cart acceptingItemsOf: catalog.
	carts add: aNewCart.

	^ self idFor: aNewCart! !

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 20:08:00'!
ERROR!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:08:18' prior: 50918844!
createCartFor: aUser with: aUserPassword 
	
	| aNewCart |
	self assert: (authenticationSystem authenticate: aUser with: aUserPassword) description: [self error: XX invalidUserOrPasswordErrorMessage].
	
	aNewCart := Cart acceptingItemsOf: catalog.
	carts add: aNewCart.

	^ self idFor: aNewCart! !

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 20:08:20'!
ERROR!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:08:45' prior: 50918821!
test01CannotCreateACartWithAnInvalidUser

	| xx |
	xx := XX authenticatingWith: self authenticationSystemPreparedForInvalidUserOrPasswordFailure withCatalog: storeTestObjectsFactory defaultCatalog.
	
	self
		should: [xx createCartFor: self invalidUser with: self validPassword]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | anError = XX invalidUserOrPasswordErrorMessage]! !

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 20:08:46'!
ERROR!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:08:55' prior: 50918876!
test01CannotCreateACartWithAnInvalidUser

	| xx |
	xx := XX authenticatingWith: self authenticationSystemPreparedForInvalidUserOrPasswordFailure withCatalog: storeTestObjectsFactory defaultCatalog.
	
	self
		should: [xx createCartFor: self invalidUser with: self validPassword]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | anError messageText = XX invalidUserOrPasswordErrorMessage]! !

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 20:09:37'!
ERROR!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:09:57' prior: 50918860!
createCartFor: aUser with: aUserPassword 
	
	| aNewCart |
	self assert: (authenticationSystem authenticate: aUser with: aUserPassword) description: [XX invalidUserOrPasswordErrorMessage].
	
	aNewCart := Cart acceptingItemsOf: catalog.
	carts add: aNewCart.

	^ self idFor: aNewCart! !

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 20:09:58'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:09:58'!
ERROR!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:09:58'!
ERROR!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:09:58'!
ERROR!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:11:53' prior: 50917762!
assertThatCartIdIsValid: aCartId

	^ self assert: (self isCartIdValid: aCartId) description: [XX invalidCartIdErrorMessage]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:11:54'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:11:54'!
PASSED!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:15:42' prior: 50918761!
test07

	| xx anExpiredCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anExpiredCartId := 0.
	self
		should: [xx listCart: anExpiredCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]! !

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:15:51'!
FAILURE!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:16:12' prior: 50918779!
test06CannotListAnItemWithAnInvalidCartId

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anInvalidCartId := 0.
	self
		should: [xx listCart: anInvalidCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX invalidCartIdErrorMessage]! !

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:16:13'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:16:13'!
FAILURE!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:16:13'!
FAILURE!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:16:55' prior: 50918799!
test05CannotAddAnItemWithAnInvalidCartId

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog.
	
	anInvalidCartId := 0.
	self
		should: [xx addToCart: anInvalidCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX invalidCartIdErrorMessage]! !

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:16:56'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:16:56'!
FAILURE!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:16:56'!
FAILURE!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 20:17:15' prior: 50918896!
test01CannotCreateACartWithAnInvalidUser

	| xx |
	xx := XX authenticatingWith: self authenticationSystemPreparedForInvalidUserOrPasswordFailure withCatalog: storeTestObjectsFactory defaultCatalog.
	
	self
		should: [xx createCartFor: self invalidUser with: self validPassword]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX invalidUserOrPasswordErrorMessage]! !

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 20:17:17'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:17:17'!
FAILURE!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 20:17:17'!
FAILURE!

!classDefinition: #Clock category: 'TusLibros' stamp: 'JD 11/8/2021 20:30:21'!
Object subclass: #Clock
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreTestObjectsFactory methodsFor: 'date' stamp: 'JD 11/8/2021 20:30:18'!
clock
	
	^ Clock new! !
!StoreTestObjectsFactory methodsFor: 'date' stamp: 'JD 11/8/2021 20:30:54' prior: 50919364!
clock
	
	^ Clock for: self today! !

!classDefinition: 'Clock class' category: 'TusLibros' stamp: 'JD 11/8/2021 21:08:15'!
Clock class
	instanceVariableNames: 'today'!
!Clock class methodsFor: 'no messages' stamp: 'JD 11/8/2021 21:08:13'!
for: aTodayDate
	
	today := aTodayDate! !
!XX class methodsFor: 'instance creation' stamp: 'JD 11/8/2021 21:10:30'!
authenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock  

	^ self new initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:10:30' prior: 50919269!
test01CannotCreateACartWithAnInvalidUser

	| xx |
	xx := XX authenticatingWith: self authenticationSystemPreparedForInvalidUserOrPasswordFailure withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	
	self
		should: [xx createCartFor: self invalidUser with: self validPassword]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX invalidUserOrPasswordErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:10:30' prior: 50918470!
test02CanCreateACart

	| xx aCartId cartContents |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	cartContents := xx listCart: aCartId.
	self assert: (OrderedCollection new) equals: cartContents! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:10:30' prior: 50919178!
test05CannotAddAnItemWithAnInvalidCartId

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	
	anInvalidCartId := 0.
	self
		should: [xx addToCart: anInvalidCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX invalidCartIdErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:10:30' prior: 50919089!
test06CannotListAnItemWithAnInvalidCartId

	| xx anInvalidCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	
	anInvalidCartId := 0.
	self
		should: [xx listCart: anInvalidCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX invalidCartIdErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:10:30' prior: 50919071!
test07

	| xx anExpiredCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	
	anExpiredCartId := 0.
	self
		should: [xx listCart: anExpiredCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:10:30' prior: 50918485!
test03CanAddAnItemToCart

	| xx aCartId cartContents |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.

	cartContents := xx listCart: aCartId.
	self assert: (OrderedCollection with: storeTestObjectsFactory itemSellByTheStore with: 1) equals: cartContents! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:10:30' prior: 50918531!
test04CanCreateManyCarts

	| xx aCartId cartContents anotherCartContents anotherCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	anotherCartId := 	xx createCartFor: self validUser with: self validPassword.

	cartContents := xx listCart: aCartId.
	anotherCartContents := xx listCart: anotherCartId.
	self assert: (OrderedCollection with: storeTestObjectsFactory itemSellByTheStore with: 1) equals: cartContents.
	self assert: (OrderedCollection new) equals: anotherCartContents! !

!methodRemoval: XX class #authenticatingWith:withCatalog: stamp: 'JD 11/8/2021 21:10:30'!
authenticatingWith: anAuthenticationSystem withCatalog: aCatalog 

	^ self new initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog!
!XX methodsFor: 'initialization' stamp: 'JD 11/8/2021 21:11:27'!
initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock   

	authenticationSystem := anAuthenticationSystem.
	catalog := aCatalog.
	carts := OrderedCollection new! !
!XX class methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:11:27' prior: 50919380!
authenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock  

	^ self new initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock! !

!methodRemoval: XX #initializeAuthenticatingWith:withCatalog: stamp: 'JD 11/8/2021 21:11:27'!
initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog  

	authenticationSystem := anAuthenticationSystem.
	catalog := aCatalog.
	carts := OrderedCollection new!

!classDefinition: #XX category: 'TusLibros' stamp: 'JD 11/8/2021 21:12:17'!
Object subclass: #XX
	instanceVariableNames: 'authenticationSystem carts catalog clock'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!XX methodsFor: 'initialization' stamp: 'JD 11/8/2021 21:12:15' prior: 50919534!
initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock   

	authenticationSystem := anAuthenticationSystem.
	catalog := aCatalog.
	carts := OrderedCollection new.
	clock := aClock! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:17:31' prior: 50919461!
test07

	| xx anExpiredCartId aCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	storeTestObjectsFactory clock now: (self today + (31*minute)).
	self
		should: [xx listCart: anExpiredCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:17:44' prior: 50919579!
test07

	| xx aCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	storeTestObjectsFactory clock now: (self today + (31*minute)).
	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]! !
!Clock class methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:18:39' prior: 50919376!
for: aTodayDate
	
	^ self initializeFor: aTodayDate! !

!classDefinition: #Clock category: 'TusLibros' stamp: 'JD 11/8/2021 21:19:01'!
Object subclass: #Clock
	instanceVariableNames: 'now'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Clock methodsFor: 'no messages' stamp: 'JD 11/8/2021 21:19:00'!
initializeFor: aTodayDate
	
	now := aTodayDate! !

Clock class
	instanceVariableNames: ''!

!classDefinition: 'Clock class' category: 'TusLibros' stamp: 'JD 11/8/2021 21:19:11'!
Clock class
	instanceVariableNames: ''!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:19:24'!
ERROR!
!Clock class methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:19:35' prior: 50919620!
for: aTodayDate
	
	^ self new initializeFor: aTodayDate! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:19:37'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:19:37'!
ERROR!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:19:37'!
ERROR!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:19:51' prior: 50919600!
test07

	| xx aCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	storeTestObjectsFactory clock now: (storeTestObjectsFactory today + (31*minute)).
	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]! !
!StoreTestObjectsFactory methodsFor: 'initialization' stamp: 'JD 11/8/2021 21:22:07' prior: 50915988 overrides: 16896425!
initialize

	today := GregorianDateTime now! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 21:22:08'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 21:22:08'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 21:22:08'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 21:22:08'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 21:22:08'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 21:22:08'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 21:22:08'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 21:22:08'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 21:22:08'!
ERROR!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 21:22:08'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 21:22:08'!
ERROR!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 21:22:08'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 21:22:08'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 21:22:08'!
ERROR!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 21:22:08'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:22:08'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:22:08'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 21:22:08'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:22:08'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:22:08'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:22:08'!
ERROR!
!StoreTestObjectsFactory methodsFor: 'initialization' stamp: 'JD 11/8/2021 21:22:14' prior: 50919739 overrides: 16896425!
initialize

	today := DateAndTime now! !
!StoreTestObjectsFactory methodsFor: 'initialization' stamp: 'JD 11/8/2021 21:23:03' prior: 50919811 overrides: 16896425!
initialize

	today := GregorianDateTime now! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 21:23:04'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 21:23:04'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 21:23:04'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 21:23:04'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 21:23:04'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 21:23:04'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 21:23:04'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 21:23:04'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 21:23:04'!
ERROR!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 21:23:04'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 21:23:04'!
ERROR!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 21:23:04'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 21:23:04'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 21:23:04'!
ERROR!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 21:23:04'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:23:04'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:23:04'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 21:23:04'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:23:04'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:23:04'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:23:04'!
ERROR!
!StoreTestObjectsFactory methodsFor: 'initialization' stamp: 'JD 11/8/2021 21:23:14' prior: 50919817 overrides: 16896425!
initialize

	today := FixedGregorianDate today! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 21:23:15'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 21:23:15'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 21:23:15'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 21:23:15'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 21:23:15'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 21:23:15'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 21:23:15'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 21:23:15'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 21:23:15'!
ERROR!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 21:23:15'!
ERROR!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 21:23:15'!
ERROR!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 21:23:15'!
ERROR!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 21:23:15'!
ERROR!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 21:23:15'!
ERROR!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 21:23:15'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:23:15'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:23:15'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 21:23:15'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:23:15'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:23:15'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:23:15'!
ERROR!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 21:23:25'!
ERROR!
!StoreTestObjectsFactory methodsFor: 'initialization' stamp: 'JD 11/8/2021 21:23:48' prior: 50919889 overrides: 16896425!
initialize

	today := DateAndTime now! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:23:50'!
PASSED!

Duration!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:25:38' prior: 50919718!
test07

	| xx aCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	storeTestObjectsFactory clock now: (storeTestObjectsFactory today + Duration minutes: 31).
	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:25:55' prior: 50920033!
test07

	| xx aCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	storeTestObjectsFactory clock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]! !

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:25:56'!
ERROR!
!Clock methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:26:11'!
now: aDateAndTime 
	self shouldBeImplemented.
	now _ aDateAndTime! !
!Clock methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:26:27' prior: 50920077!
now: aTodayDate
	
	now := aTodayDate! !

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:26:30'!
FAILURE!

!classDefinition: #XX category: 'TusLibros' stamp: 'JD 11/8/2021 21:31:34'!
Object subclass: #XX
	instanceVariableNames: 'authenticationSystem carts catalog clock cartsLastUsage'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:31:33' prior: 50918387!
listCart: aCartId
	
	| cartForId |
	
	self assertThatCartIdIsValid: aCartId.
	self assert: (clock now - (cartsLastUsage at: aCartId)) minutes <= 30 description: [XX expiredCartErrorMessage].

	cartForId := carts at: aCartId.
	
	^ self listItemsWithOccurrencesOf: cartForId 
! !
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:32:46' prior: 50918916!
createCartFor: aUser with: aUserPassword 
	
	| aNewCart newCartId |
	self assert: (authenticationSystem authenticate: aUser with: aUserPassword) description: [XX invalidUserOrPasswordErrorMessage].
	
	aNewCart := Cart acceptingItemsOf: catalog.
	carts add: aNewCart.
	
	newCartId := self idFor: aNewCart.
	cartsLastUsage at: newCartId put: clock now.

	^ newCartId! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:32:53'!
ERROR!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:32:53'!
ERROR!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 21:32:53'!
ERROR!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:32:53'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:32:53'!
ERROR!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:33:14'!
ERROR!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:33:14'!
ERROR!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 21:33:14'!
ERROR!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:33:14'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:33:14'!
ERROR!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:33:16'!
ERROR!
!Clock methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:33:28'!
now
	
	^ now! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:33:29'!
ERROR!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:33:29'!
ERROR!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 21:33:29'!
ERROR!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:33:29'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:33:29'!
ERROR!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:33:31'!
ERROR!
!XX methodsFor: 'initialization' stamp: 'JD 11/8/2021 21:34:03' prior: 50919569!
initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock   

	authenticationSystem := anAuthenticationSystem.
	catalog := aCatalog.
	carts := OrderedCollection new.
	clock := aClock.
	cartsLastUsage := Dictionary new! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:34:04'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:34:04'!
FAILURE!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:34:04'!
FAILURE!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:34:49' prior: 50920054!
test07

	| xx aCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	storeTestObjectsFactory clock now: (storeTestObjectsFactory today + (Duration minutes: 40)).
	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]! !

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:34:50'!
FAILURE!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:34:53' prior: 50920410!
test07

	| xx aCartId |
	
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	storeTestObjectsFactory clock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]! !

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:34:54'!
FAILURE!

storeTestObjectsFactory clock now.!

			storeTestObjectsFactory clock now.!

		storeTestObjectsFactory clock now. !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:37:48' prior: 50920433!
test07

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]! !

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!testRun: #InterfaceTest #test07 stamp: 'JD 11/8/2021 21:37:51'!
PASSED!

!classRenamed: #Clock as: #SimulatedClock stamp: 'JD 11/8/2021 21:39:14'!
Smalltalk renameClassNamed: #Clock as: #SimulatedClock!
!StoreTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:39:14' prior: 50919368!
clock
	
	^ SimulatedClock for: self today! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:39:38'!
test07CannotListAnExpiredCart

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]! !

!methodRemoval: InterfaceTest #test07 stamp: 'JD 11/8/2021 21:39:38'!
test07

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]!

----SNAPSHOT----(8 November 2021 21:43:38) CuisUniversity-4913.image priorSource: 18783422!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:51:36'!
test08

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX expiredCartErrorMessage].

	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX invalidCartIdErrorMessage]! !

!testRun: #InterfaceTest #test08 stamp: 'JD 11/8/2021 21:51:37'!
FAILURE!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:54:50' prior: 50920097!
listCart: aCartId
	
	| cartForId |
	
	self assertThatCartIdIsValid: aCartId.
	(clock now - (cartsLastUsage at: aCartId)) minutes <= 30 ifTrue: [
		cartsLastUsage remove: aCartId.
		carts remove: aCartId.
		self error: [XX expiredCartErrorMessage]
	].
	cartForId := carts at: aCartId.
	
	^ self listItemsWithOccurrencesOf: cartForId 
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:54:51'!
ERROR!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:54:51'!
ERROR!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 21:54:51'!
ERROR!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:54:51'!
PASSED!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 21:54:51'!
FAILURE!

!testRun: #InterfaceTest #test08 stamp: 'JD 11/8/2021 21:54:51'!
FAILURE!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:54:56'!
ERROR!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:55:31' prior: 50920631!
listCart: aCartId
	
	| cartForId |
	
	self assertThatCartIdIsValid: aCartId.
	(clock now - (cartsLastUsage at: aCartId)) minutes <= 30 ifTrue: [
		cartsLastUsage removeKey: aCartId.
		carts remove: aCartId.
		self error: [XX expiredCartErrorMessage]
	].
	cartForId := carts at: aCartId.
	
	^ self listItemsWithOccurrencesOf: cartForId 
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:55:32'!
ERROR!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:55:32'!
ERROR!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 21:55:32'!
ERROR!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:55:32'!
PASSED!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 21:55:32'!
FAILURE!

!testRun: #InterfaceTest #test08 stamp: 'JD 11/8/2021 21:55:32'!
FAILURE!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:55:34'!
ERROR!

!testRun: #InterfaceTest #test08 stamp: 'JD 11/8/2021 21:56:45'!
FAILURE!

!testRun: #InterfaceTest #test08 stamp: 'JD 11/8/2021 21:56:49'!
FAILURE!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:57:57' prior: 50920716!
listCart: aCartId
	
	| cartForId |
	
	self assertThatCartIdIsValid: aCartId.
	cartForId := carts at: aCartId.
	(clock now - (cartsLastUsage at: aCartId)) minutes <= 30 ifTrue: [
		cartsLastUsage removeKey: aCartId.
		carts remove: cartForId.
		self error: [XX expiredCartErrorMessage]
	].
	
	^ self listItemsWithOccurrencesOf: cartForId 
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:57:58'!
ERROR!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:57:58'!
ERROR!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 21:57:58'!
ERROR!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:57:58'!
PASSED!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 21:57:58'!
FAILURE!

!testRun: #InterfaceTest #test08 stamp: 'JD 11/8/2021 21:57:58'!
FAILURE!

!testRun: #InterfaceTest #test08 stamp: 'JD 11/8/2021 21:58:12'!
FAILURE!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 21:58:28'!
FAILURE!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 21:58:28'!
FAILURE!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:58:32'!
ERROR!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:58:32'!
ERROR!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:59:15' prior: 50920806!
listCart: aCartId
	
	| cartForId |
	
	self assertThatCartIdIsValid: aCartId.
	cartForId := carts at: aCartId.
	(clock now - (cartsLastUsage at: aCartId)) minutes <= 30 ifFalse: [
		cartsLastUsage removeKey: aCartId.
		carts remove: cartForId.
		self error: [XX expiredCartErrorMessage]
	].
	
	^ self listItemsWithOccurrencesOf: cartForId 
! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:59:16'!
PASSED!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 21:59:16'!
ERROR!

!testRun: #InterfaceTest #test08 stamp: 'JD 11/8/2021 21:59:16'!
ERROR!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:59:22' prior: 50920558!
test07CannotListAnExpiredCart

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 21:59:29' prior: 50920602!
test08

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX expiredCartErrorMessage].

	self
		should: [xx listCart: aCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX invalidCartIdErrorMessage]! !

!testRun: #InterfaceTest #test08 stamp: 'JD 11/8/2021 21:59:30'!
FAILURE!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 21:59:40'!
FAILURE!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 21:59:46'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 21:59:46'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 21:59:46'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 21:59:46'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:59:46'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 21:59:46'!
PASSED!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 21:59:46'!
FAILURE!

!testRun: #InterfaceTest #test08 stamp: 'JD 11/8/2021 21:59:46'!
FAILURE!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 21:59:48'!
FAILURE!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 22:00:27'!
FAILURE!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 22:01:38'!
FAILURE!

self isCartIdValid: aCartId!

carts isInBounds: aCartId!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 22:02:22'!
FAILURE!

self size!

anIndex between: 1 and: self size!

carts isInBounds: aCartId!

(clock now - (cartsLastUsage at: aCartId)) minutes <= 30!

(clock now - (cartsLastUsage at: aCartId)) minutes!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 22:06:46'!
FAILURE!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 22:07:18' prior: 50920986!
test07CannotListAnExpiredCart

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]! !

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 22:07:19'!
ERROR!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 22:07:19'!
ERROR!
!XX methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 22:09:28' prior: 50920903!
listCart: aCartId
	
	| cartForId |
	
	self assertThatCartIdIsValid: aCartId.
	cartForId := carts at: aCartId.
	(clock now - (cartsLastUsage at: aCartId)) minutes <= 30 ifFalse: [
		cartsLastUsage removeKey: aCartId.
		carts remove: cartForId.
		self error: XX expiredCartErrorMessage
	].
	
	^ self listItemsWithOccurrencesOf: cartForId 
! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 22:09:31' prior: 50921087!
test07CannotListAnExpiredCart

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]! !

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 22:09:32'!
PASSED!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 22:09:32'!
PASSED!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 22:09:49' prior: 50921008!
test08

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX expiredCartErrorMessage].

	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX invalidCartIdErrorMessage]! !

!testRun: #InterfaceTest #test08 stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

!testRun: #InterfaceTest #test08 stamp: 'JD 11/8/2021 22:09:50'!
PASSED!

----SNAPSHOT----(8 November 2021 22:09:59) CuisUniversity-4913.image priorSource: 18846339!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'JD 11/8/2021 22:15:44'!
test08AnExpiredCartIsErasedWhenUsed

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX expiredCartErrorMessage].

	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX invalidCartIdErrorMessage]! !

!methodRemoval: InterfaceTest #test08 stamp: 'JD 11/8/2021 22:15:44'!
test08

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX expiredCartErrorMessage].

	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX invalidCartIdErrorMessage]!

----SNAPSHOT----(8 November 2021 22:15:53) CuisUniversity-4913.image priorSource: 18869335!

----STARTUP---- (9 November 2021 16:52:57) as /home/gonzalo/Documents/facultad/isw1/tusLibrosVer/CuisUniversity-4913.image!

!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 16:56:40'!
test09CannotAddAnItemToAnExpiredCart

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 16:58:09' prior: 50921381!
test09CannotAddAnItemToAnExpiredCart

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage].
		
	self
		should: [xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX invalidCartIdErrorMessage]! !

!testRun: #InterfaceTest #test09CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 16:59:56'!
FAILURE!
!XX methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:01:02' prior: 50917770!
addToCart: aCartId quantity: aBookQuantity of: aBookISBN 
	
	| cartForId |
	
	self assertThatCartIdIsValid: aCartId.
	cartForId := carts at: aCartId.
	(clock now - (cartsLastUsage at: aCartId)) minutes <= 30 ifFalse: [
		cartsLastUsage removeKey: aCartId.
		carts remove: cartForId.
		self error: XX expiredCartErrorMessage
	].
	(carts at: aCartId) add: aBookQuantity of: aBookISBN.
	! !
!XX methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:01:37' prior: 50921439!
addToCart: aCartId quantity: aBookQuantity of: aBookISBN 
	
	| cartForId |
	
	self assertThatCartIdIsValid: aCartId.
	cartForId := carts at: aCartId.
	(clock now - (cartsLastUsage at: aCartId)) minutes <= 30 ifFalse: [
		cartsLastUsage removeKey: aCartId.
		carts remove: cartForId.
		self error: XX expiredCartErrorMessage
	].
	cartForId add: aBookQuantity of: aBookISBN.
	! !

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 17:01:38'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 17:01:38'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 17:01:38'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 17:01:38'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:01:38'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:01:38'!
PASSED!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 17:01:38'!
PASSED!

!testRun: #InterfaceTest #test08AnExpiredCartIsErasedWhenUsed stamp: 'gq 11/9/2021 17:01:38'!
PASSED!

!testRun: #InterfaceTest #test09CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 17:01:38'!
PASSED!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:02:19' prior: 50921129!
test07CannotListAnExpiredCart

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage].
		
	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX invalidCartIdErrorMessage]! !

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 17:02:20'!
PASSED!

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 17:02:20'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 17:02:20'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 17:02:20'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 17:02:20'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:02:20'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:02:20'!
PASSED!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 17:02:20'!
PASSED!

!testRun: #InterfaceTest #test08AnExpiredCartIsErasedWhenUsed stamp: 'gq 11/9/2021 17:02:20'!
PASSED!

!testRun: #InterfaceTest #test09CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 17:02:20'!
PASSED!

!methodRemoval: InterfaceTest #test08AnExpiredCartIsErasedWhenUsed stamp: 'gq 11/9/2021 17:02:33'!
test08AnExpiredCartIsErasedWhenUsed

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX expiredCartErrorMessage].

	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX invalidCartIdErrorMessage]!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:02:59'!
test08CannotAddAnItemToAnExpiredCart

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage].
		
	self
		should: [xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX invalidCartIdErrorMessage]! !

!methodRemoval: InterfaceTest #test09CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 17:02:59'!
test09CannotAddAnItemToAnExpiredCart

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := XX authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = XX expiredCartErrorMessage].
		
	self
		should: [xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = XX invalidCartIdErrorMessage]!

!classRenamed: #XX as: #RestInterface stamp: 'gq 11/9/2021 17:03:37'!
Smalltalk renameClassNamed: #XX as: #RestInterface!
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:03:37' prior: 50919389!
test01CannotCreateACartWithAnInvalidUser

	| xx |
	xx := RestInterface authenticatingWith: self authenticationSystemPreparedForInvalidUserOrPasswordFailure withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	
	self
		should: [xx createCartFor: self invalidUser with: self validPassword]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidUserOrPasswordErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:03:37' prior: 50919407!
test02CanCreateACart

	| xx aCartId cartContents |
	
	xx := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	cartContents := xx listCart: aCartId.
	self assert: (OrderedCollection new) equals: cartContents! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:03:37' prior: 50921583!
test08CannotAddAnItemToAnExpiredCart

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage].
		
	self
		should: [xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:03:37' prior: 50919423!
test05CannotAddAnItemWithAnInvalidCartId

	| xx anInvalidCartId |
	
	xx := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	
	anInvalidCartId := 0.
	self
		should: [xx addToCart: anInvalidCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:03:37' prior: 50921115!
listCart: aCartId
	
	| cartForId |
	
	self assertThatCartIdIsValid: aCartId.
	cartForId := carts at: aCartId.
	(clock now - (cartsLastUsage at: aCartId)) minutes <= 30 ifFalse: [
		cartsLastUsage removeKey: aCartId.
		carts remove: cartForId.
		self error: RestInterface expiredCartErrorMessage
	].
	
	^ self listItemsWithOccurrencesOf: cartForId 
! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:03:37' prior: 50921454!
addToCart: aCartId quantity: aBookQuantity of: aBookISBN 
	
	| cartForId |
	
	self assertThatCartIdIsValid: aCartId.
	cartForId := carts at: aCartId.
	(clock now - (cartsLastUsage at: aCartId)) minutes <= 30 ifFalse: [
		cartsLastUsage removeKey: aCartId.
		carts remove: cartForId.
		self error: RestInterface expiredCartErrorMessage
	].
	cartForId add: aBookQuantity of: aBookISBN.
	! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:03:37' prior: 50918997!
assertThatCartIdIsValid: aCartId

	^ self assert: (self isCartIdValid: aCartId) description: [RestInterface invalidCartIdErrorMessage]! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:03:37' prior: 50920109!
createCartFor: aUser with: aUserPassword 
	
	| aNewCart newCartId |
	self assert: (authenticationSystem authenticate: aUser with: aUserPassword) description: [RestInterface invalidUserOrPasswordErrorMessage].
	
	aNewCart := Cart acceptingItemsOf: catalog.
	carts add: aNewCart.
	
	newCartId := self idFor: aNewCart.
	cartsLastUsage at: newCartId put: clock now.

	^ newCartId! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:03:37' prior: 50919478!
test03CanAddAnItemToCart

	| xx aCartId cartContents |
	
	xx := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.

	cartContents := xx listCart: aCartId.
	self assert: (OrderedCollection with: storeTestObjectsFactory itemSellByTheStore with: 1) equals: cartContents! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:03:37' prior: 50921497!
test07CannotListAnExpiredCart

	| xx aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	xx := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [xx listCart: aCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage].
		
	self
		should: [xx listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:03:37' prior: 50919499!
test04CanCreateManyCarts

	| xx aCartId cartContents anotherCartContents anotherCartId |
	
	xx := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	xx createCartFor: self validUser with: self validPassword.
	xx addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	anotherCartId := 	xx createCartFor: self validUser with: self validPassword.

	cartContents := xx listCart: aCartId.
	anotherCartContents := xx listCart: anotherCartId.
	self assert: (OrderedCollection with: storeTestObjectsFactory itemSellByTheStore with: 1) equals: cartContents.
	self assert: (OrderedCollection new) equals: anotherCartContents! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:03:37' prior: 50919443!
test06CannotListAnItemWithAnInvalidCartId

	| xx anInvalidCartId |
	
	xx := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	
	anInvalidCartId := 0.
	self
		should: [xx listCart: anInvalidCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:04:35' prior: 50921650!
test01CannotCreateACartWithAnInvalidUser

	| aRestInterface |
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForInvalidUserOrPasswordFailure withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	
	self
		should: [aRestInterface createCartFor: self invalidUser with: self validPassword]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidUserOrPasswordErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:04:46' prior: 50921669!
test02CanCreateACart

	| aRestInterface aCartId cartContents |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	cartContents := aRestInterface listCart: aCartId.
	self assert: (OrderedCollection new) equals: cartContents! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:04:55' prior: 50921794!
test03CanAddAnItemToCart

	| aRestInterface aCartId cartContents |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.

	cartContents := aRestInterface listCart: aCartId.
	self assert: (OrderedCollection with: storeTestObjectsFactory itemSellByTheStore with: 1) equals: cartContents! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:05:00' prior: 50921844!
test04CanCreateManyCarts

	| aRestInterface aCartId cartContents anotherCartContents anotherCartId |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	anotherCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.

	cartContents := aRestInterface listCart: aCartId.
	anotherCartContents := aRestInterface listCart: anotherCartId.
	self assert: (OrderedCollection with: storeTestObjectsFactory itemSellByTheStore with: 1) equals: cartContents.
	self assert: (OrderedCollection new) equals: anotherCartContents! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:05:08' prior: 50921719!
test05CannotAddAnItemWithAnInvalidCartId

	| aRestInterface anInvalidCartId |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	
	anInvalidCartId := 0.
	self
		should: [aRestInterface addToCart: anInvalidCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:05:17' prior: 50921872!
test06CannotListAnItemWithAnInvalidCartId

	| aRestInterface anInvalidCartId |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	
	anInvalidCartId := 0.
	self
		should: [aRestInterface listCart: anInvalidCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:05:27' prior: 50921815!
test07CannotListAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [aRestInterface listCart: aCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage].
		
	self
		should: [aRestInterface listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!InterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:05:34' prior: 50921686!
test08CannotAddAnItemToAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage].
		
	self
		should: [aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:10:44'!
validateThatIsNotExpired: aCartId
	
	| cartForId |
	
	cartForId := carts at: aCartId.
	(clock now - (cartsLastUsage at: aCartId)) minutes <= 30 ifFalse: [
		cartsLastUsage removeKey: aCartId.
		carts remove: cartForId.
		self error: RestInterface expiredCartErrorMessage
	].
! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:12:52' prior: 50921740!
listCart: aCartId
	
	self assertThatCartIdIsValid: aCartId.
	self validateThatIsNotExpired: aCartId.
	
	^ self listItemsWithOccurrencesOf: (carts at: aCartId)
! !

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 17:12:53'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 17:12:53'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 17:12:53'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 17:12:53'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:12:53'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:12:53'!
PASSED!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 17:12:53'!
PASSED!

!testRun: #InterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 17:12:53'!
PASSED!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:13:49' prior: 50921755!
addToCart: aCartId quantity: aBookQuantity of: aBookISBN 
	
	self assertThatCartIdIsValid: aCartId.
	self validateThatIsNotExpired: aCartId.
	
	(carts at: aCartId) add: aBookQuantity of: aBookISBN.
	! !

!testRun: #InterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 17:13:50'!
PASSED!

!testRun: #InterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 17:13:50'!
PASSED!

!testRun: #InterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 17:13:50'!
PASSED!

!testRun: #InterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 17:13:50'!
PASSED!

!testRun: #InterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:13:50'!
PASSED!

!testRun: #InterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:13:50'!
PASSED!

!testRun: #InterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 17:13:50'!
PASSED!

!testRun: #InterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 17:13:50'!
PASSED!

!classRenamed: #InterfaceTest as: #RestInterfaceTest stamp: 'gq 11/9/2021 17:21:51'!
Smalltalk renameClassNamed: #InterfaceTest as: #RestInterfaceTest!

Object subclass: #CartLastAccess
	instanceVariableNames: 'cart time'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartLastAccess category: 'TusLibros' stamp: 'gq 11/9/2021 17:34:39'!
Object subclass: #CartLastAccess
	instanceVariableNames: 'cart time'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #CartLastAccess stamp: 'gq 11/9/2021 17:42:12'!
Object subclass: #CartLastAccess
	instanceVariableNames: 'cart time'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'initialization' stamp: 'gq 11/9/2021 17:42:55' prior: 50920330!
initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock   

	authenticationSystem := anAuthenticationSystem.
	catalog := aCatalog.
	carts :=  Dictionary new.
	clock := aClock.
	cartsLastUsage := Dictionary new! !

!testRun: #RestInterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 17:42:56'!
PASSED!

!testRun: #RestInterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 17:42:56'!
ERROR!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 17:42:56'!
ERROR!

!testRun: #RestInterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 17:42:56'!
ERROR!

!testRun: #RestInterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:42:56'!
ERROR!

!testRun: #RestInterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:42:56'!
ERROR!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 17:42:56'!
ERROR!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 17:42:56'!
ERROR!
!RestInterface methodsFor: 'accessing - private' stamp: 'gq 11/9/2021 17:47:18' prior: 50918095!
idFor: aNewCart

	^ aNewCart identityHash ! !
!RestInterface methodsFor: 'interface operations' stamp: 'gq 11/9/2021 17:48:26' prior: 50921779!
createCartFor: aUser with: aUserPassword 
	
	| aNewCart aNewCartId |
	self assert: (authenticationSystem authenticate: aUser with: aUserPassword) description: [RestInterface invalidUserOrPasswordErrorMessage].
	
	aNewCart := Cart acceptingItemsOf: catalog.
	aNewCartId := self idFor: aNewCart.
	carts at: aNewCartId put: aNewCart.
	cartsLastUsage at: aNewCartId put: clock now.

	^ aNewCartId! !
!RestInterface methodsFor: 'testing' stamp: 'gq 11/9/2021 17:49:56' prior: 50917748!
isCartIdValid: aCartId

	^ carts includesKey: aCartId ! !
!RestInterface methodsFor: 'assertions' stamp: 'gq 11/9/2021 17:50:48' prior: 50922089!
validateThatIsNotExpired: aCartId
	
	| cartForId |
	
	cartForId := carts at: aCartId.
	(clock now - (cartsLastUsage at: aCartId)) minutes <= 30 ifFalse: [
		cartsLastUsage removeKey: aCartId.
		carts removeKey: cartForId.
		self error: RestInterface expiredCartErrorMessage
	].
! !

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 17:50:59'!
PASSED!

!testRun: #RestInterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:50:59'!
PASSED!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 17:50:59'!
FAILURE!

!testRun: #RestInterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 17:50:59'!
PASSED!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 17:50:59'!
FAILURE!

!testRun: #RestInterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 17:51:12'!
PASSED!

!testRun: #RestInterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 17:51:12'!
PASSED!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 17:51:12'!
PASSED!

!testRun: #RestInterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 17:51:12'!
PASSED!

!testRun: #RestInterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:51:12'!
PASSED!

!testRun: #RestInterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:51:12'!
PASSED!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 17:51:12'!
FAILURE!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 17:51:12'!
FAILURE!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 17:51:19'!
FAILURE!

!testRun: #RestInterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 17:54:25'!
PASSED!

!testRun: #RestInterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 17:54:25'!
PASSED!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 17:54:25'!
PASSED!

!testRun: #RestInterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 17:54:25'!
PASSED!

!testRun: #RestInterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:54:25'!
PASSED!

!testRun: #RestInterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:54:25'!
PASSED!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 17:54:25'!
FAILURE!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 17:54:25'!
FAILURE!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 17:54:29'!
FAILURE!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 17:55:24'!
FAILURE!

!testRun: #RestInterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 17:55:41'!
PASSED!

!testRun: #RestInterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 17:55:41'!
PASSED!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 17:55:41'!
PASSED!

!testRun: #RestInterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 17:55:41'!
PASSED!

!testRun: #RestInterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:55:41'!
PASSED!

!testRun: #RestInterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:55:41'!
PASSED!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 17:55:41'!
FAILURE!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 17:55:41'!
FAILURE!
!RestInterface methodsFor: 'assertions' stamp: 'gq 11/9/2021 17:56:13' prior: 50922255!
validateThatIsNotExpired: aCartId
	
	| cartForId |
	
	cartForId := carts at: aCartId.
	(clock now - (cartsLastUsage at: aCartId)) minutes <= 30 ifFalse: [
		cartsLastUsage removeKey: aCartId.
		carts removeKey: aCartId.
		self error: RestInterface expiredCartErrorMessage
	].
! !
!RestInterface methodsFor: 'assertions' stamp: 'gq 11/9/2021 17:56:25' prior: 50922371!
validateThatIsNotExpired: aCartId
	
	(clock now - (cartsLastUsage at: aCartId)) minutes <= 30 ifFalse: [
		cartsLastUsage removeKey: aCartId.
		carts removeKey: aCartId.
		self error: RestInterface expiredCartErrorMessage
	].
! !

!testRun: #RestInterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 17:56:26'!
PASSED!

!testRun: #RestInterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 17:56:26'!
PASSED!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 17:56:26'!
PASSED!

!testRun: #RestInterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 17:56:26'!
PASSED!

!testRun: #RestInterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:56:26'!
PASSED!

!testRun: #RestInterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 17:56:26'!
PASSED!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 17:56:26'!
PASSED!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 17:56:26'!
PASSED!

----SNAPSHOT----(9 November 2021 17:56:40) CuisUniversity-4913.image priorSource: 18871127!
!RestInterface methodsFor: 'accessing - private' stamp: 'gq 11/9/2021 17:58:01' prior: 50918459!
listItemsWithOccurrencesOf: aCartToList

	| aCartList |

	aCartList := Dictionary new.
	aCartToList items do: [:anItem | 
		aCartList at: anItem put: (aCartList occurrencesOf: anItem)
	].
	
	^ aCartList! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 17:59:27' prior: 50921911!
test02CanCreateACart

	| aRestInterface aCartId cartContents |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	cartContents := aRestInterface listCart: aCartId.
	self assert: (Dictionary new) equals: cartContents! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:03:04' prior: 50921929!
test03CanAddAnItemToCart

	| aRestInterface aCartId cartContents anExpectedCartList |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.

	cartContents := aRestInterface listCart: aCartId.
	anExpectedCartList := Dictionary new.
	anExpectedCartList at: storeTestObjectsFactory itemSellByTheStore put: 1.
	self assert: anExpectedCartList equals: cartContents! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:03:54' prior: 50921952!
test04CanCreateManyCarts

	| aRestInterface aCartId cartContents anotherCartContents anotherCartId anExpectedCartList |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	anotherCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.

	cartContents := aRestInterface listCart: aCartId.
	anotherCartContents := aRestInterface listCart: anotherCartId.
	anExpectedCartList := Dictionary new.
	anExpectedCartList at: storeTestObjectsFactory itemSellByTheStore put: 1.
	self assert: anExpectedCartList equals: cartContents.
	self assert: anotherCartContents isEmpty! !

!testRun: #RestInterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 18:04:13'!
PASSED!

!testRun: #RestInterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 18:04:13'!
PASSED!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 18:04:13'!
FAILURE!

!testRun: #RestInterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 18:04:13'!
FAILURE!

!testRun: #RestInterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 18:04:13'!
PASSED!

!testRun: #RestInterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 18:04:13'!
PASSED!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 18:04:13'!
PASSED!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 18:04:13'!
PASSED!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 18:04:17'!
FAILURE!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 18:05:14'!
FAILURE!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 18:07:35'!
FAILURE!

carts at: aCartId!
!RestInterface methodsFor: 'accessing - private' stamp: 'gq 11/9/2021 18:09:31' prior: 50922423!
listItemsWithOccurrencesOf: aCartToList

	| aCartList |

	aCartList := Dictionary new.
	aCartToList items do: [:anItem | 
		aCartList at: anItem put: (aCartToList occurrencesOf: anItem)
	].
	
	^ aCartList! !

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 18:09:32'!
PASSED!

!testRun: #RestInterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 18:09:32'!
PASSED!

!testRun: #RestInterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 18:09:32'!
PASSED!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 18:09:32'!
PASSED!

!testRun: #RestInterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 18:09:32'!
PASSED!

!testRun: #RestInterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 18:09:32'!
PASSED!

!testRun: #RestInterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 18:09:32'!
PASSED!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 18:09:32'!
PASSED!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 18:09:32'!
PASSED!

----SNAPSHOT----(9 November 2021 18:09:47) CuisUniversity-4913.image priorSource: 18904579!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:17:56' prior: 50922433!
test02CanCreateACart

	| aRestInterface aCartId cartContents |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	cartContents := aRestInterface listCart: aCartId.
	self assert: cartContents isEmpty ! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:20:18'!
test09CannotCheckoutACartWithAnInvalidId

	| aRestInterface anInvalidCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	anInvalidCartId := 	0.
	
	self
		should: [aRestInterface checkoutCart: anInvalidCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage ].
! !

!testRun: #RestInterfaceTest #test09CannotCheckoutACartWithAnInvalidId stamp: 'gq 11/9/2021 18:20:21'!
ERROR!

!testRun: #RestInterfaceTest #test09CannotCheckoutACartWithAnInvalidId stamp: 'gq 11/9/2021 18:20:31'!
ERROR!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:20:39'!
checkoutCart: aSmallInteger 
	self shouldBeImplemented.! !
!RestInterface methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:22:55' prior: 50922631!
checkoutCart: aCartIdToCheckout 
	
	self assertThatCartIdIsValid: aCartIdToCheckout! !

!testRun: #RestInterfaceTest #test09CannotCheckoutACartWithAnInvalidId stamp: 'gq 11/9/2021 18:22:56'!
PASSED!

!testRun: #RestInterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 18:22:56'!
PASSED!

!testRun: #RestInterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 18:22:56'!
PASSED!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 18:22:56'!
PASSED!

!testRun: #RestInterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 18:22:56'!
PASSED!

!testRun: #RestInterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 18:22:56'!
PASSED!

!testRun: #RestInterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 18:22:56'!
PASSED!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 18:22:56'!
PASSED!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 18:22:56'!
PASSED!

!testRun: #RestInterfaceTest #test09CannotCheckoutACartWithAnInvalidId stamp: 'gq 11/9/2021 18:22:56'!
PASSED!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:25:40'!
test10CannotCheckoutAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	
	self
		should: [aRestInterface checkoutCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage ].
! !

!testRun: #RestInterfaceTest #test10CannotCheckoutAnExpiredCart stamp: 'gq 11/9/2021 18:25:41'!
FAILURE!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:26:55' prior: 50922636!
checkoutCart: aCartIdToCheckout 
	
	self assertThatCartIdIsValid: aCartIdToCheckout.
	self validateThatIsNotExpired: aCartIdToCheckout ! !

!testRun: #RestInterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 18:26:55'!
PASSED!

!testRun: #RestInterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 18:26:55'!
PASSED!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 18:26:55'!
PASSED!

!testRun: #RestInterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 18:26:55'!
PASSED!

!testRun: #RestInterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 18:26:55'!
PASSED!

!testRun: #RestInterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 18:26:55'!
PASSED!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 18:26:55'!
PASSED!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 18:26:55'!
PASSED!

!testRun: #RestInterfaceTest #test09CannotCheckoutACartWithAnInvalidId stamp: 'gq 11/9/2021 18:26:55'!
PASSED!

!testRun: #RestInterfaceTest #test10CannotCheckoutAnExpiredCart stamp: 'gq 11/9/2021 18:26:55'!
ERROR!

!testRun: #RestInterfaceTest #test10CannotCheckoutAnExpiredCart stamp: 'gq 11/9/2021 18:26:55'!
ERROR!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:27:28' prior: 50922675!
test10CannotCheckoutAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	
	self
		should: [aRestInterface checkoutCart: aCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage ].
! !

!testRun: #RestInterfaceTest #test10CannotCheckoutAnExpiredCart stamp: 'gq 11/9/2021 18:27:29'!
PASSED!

!testRun: #RestInterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 18:27:29'!
PASSED!

!testRun: #RestInterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 18:27:29'!
PASSED!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 18:27:29'!
PASSED!

!testRun: #RestInterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 18:27:29'!
PASSED!

!testRun: #RestInterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 18:27:29'!
PASSED!

!testRun: #RestInterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 18:27:29'!
PASSED!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 18:27:29'!
PASSED!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 18:27:29'!
PASSED!

!testRun: #RestInterfaceTest #test09CannotCheckoutACartWithAnInvalidId stamp: 'gq 11/9/2021 18:27:29'!
PASSED!

!testRun: #RestInterfaceTest #test10CannotCheckoutAnExpiredCart stamp: 'gq 11/9/2021 18:27:29'!
PASSED!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:28:55'!
test11CannotCheckoutAnEmptyCart

	| aRestInterface anEmptyCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	anEmptyCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	self
		should: [aRestInterface checkoutCart: anEmptyCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface emptyCartErrorMessage ].
! !

!testRun: #RestInterfaceTest #test11CannotCheckoutAnEmptyCart stamp: 'gq 11/9/2021 18:28:57'!
FAILURE!
!RestInterface methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:32:34' prior: 50922703!
checkoutCart: aCartIdToCheckout 
	
	self assertThatCartIdIsValid: aCartIdToCheckout.
	self validateThatIsNotExpired: aCartIdToCheckout.
	self assert: (carts at: aCartIdToCheckout) isEmpty not description: RestInterface emptyCartErrorMessage.! !

!testRun: #RestInterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 18:32:39'!
PASSED!

!testRun: #RestInterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 18:32:39'!
PASSED!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 18:32:39'!
PASSED!

!testRun: #RestInterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 18:32:39'!
PASSED!

!testRun: #RestInterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 18:32:39'!
PASSED!

!testRun: #RestInterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 18:32:39'!
PASSED!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 18:32:39'!
PASSED!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 18:32:39'!
PASSED!

!testRun: #RestInterfaceTest #test09CannotCheckoutACartWithAnInvalidId stamp: 'gq 11/9/2021 18:32:39'!
PASSED!

!testRun: #RestInterfaceTest #test10CannotCheckoutAnExpiredCart stamp: 'gq 11/9/2021 18:32:39'!
PASSED!

!testRun: #RestInterfaceTest #test11CannotCheckoutAnEmptyCart stamp: 'gq 11/9/2021 18:32:39'!
ERROR!

!testRun: #RestInterfaceTest #test11CannotCheckoutAnEmptyCart stamp: 'gq 11/9/2021 18:32:39'!
ERROR!
!RestInterface class methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:32:45'!
emptyCartErrorMessage
	self shouldBeImplemented.! !
!RestInterface class methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:33:23' prior: 50922883!
emptyCartErrorMessage
	
	^ 'Cart cannot be empty'! !

!testRun: #RestInterfaceTest #test11CannotCheckoutAnEmptyCart stamp: 'gq 11/9/2021 18:33:24'!
PASSED!

!testRun: #RestInterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 18:33:27'!
PASSED!

!testRun: #RestInterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 18:33:27'!
PASSED!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 18:33:27'!
PASSED!

!testRun: #RestInterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 18:33:27'!
PASSED!

!testRun: #RestInterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 18:33:27'!
PASSED!

!testRun: #RestInterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 18:33:27'!
PASSED!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 18:33:27'!
PASSED!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 18:33:27'!
PASSED!

!testRun: #RestInterfaceTest #test09CannotCheckoutACartWithAnInvalidId stamp: 'gq 11/9/2021 18:33:27'!
PASSED!

!testRun: #RestInterfaceTest #test10CannotCheckoutAnExpiredCart stamp: 'gq 11/9/2021 18:33:27'!
PASSED!

!testRun: #RestInterfaceTest #test11CannotCheckoutAnEmptyCart stamp: 'gq 11/9/2021 18:33:27'!
PASSED!

----SNAPSHOT----(9 November 2021 18:38:36) CuisUniversity-4913.image priorSource: 18909805!
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:55:49'!
test12CanCheckoutACart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	
	aRestInterface checkoutCart: aCartId.
	
	self assert: (aRestInterface listCart: aCartId) isEmpty 
	
! !

!testRun: #RestInterfaceTest #test12CanCheckoutACart stamp: 'gq 11/9/2021 18:55:50'!
FAILURE!
!RestInterface methodsFor: 'interface operations' stamp: 'gq 11/9/2021 18:59:33'!
checkoutCart: aCartIdToCheckout withCreditCardNumber: aCreditCardNumber  
	
	self assertThatCartIdIsValid: aCartIdToCheckout.
	self validateThatIsNotExpired: aCartIdToCheckout.
	self assert: (carts at: aCartIdToCheckout) isEmpty not description: RestInterface emptyCartErrorMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:59:33' prior: 50922747!
test10CannotCheckoutAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	
	self
		should: [aRestInterface checkoutCart: aCartId withCreditCardNumber: '1234567890123456']
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage ].
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:59:33' prior: 50922807!
test11CannotCheckoutAnEmptyCart

	| aRestInterface anEmptyCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	anEmptyCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	self
		should: [aRestInterface checkoutCart: anEmptyCartId withCreditCardNumber: '1234567890123456']
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface emptyCartErrorMessage ].
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:59:33' prior: 50922935!
test12CanCheckoutACart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	
	aRestInterface checkoutCart: aCartId withCreditCardNumber: '1234567890123456'.
	
	self assert: (aRestInterface listCart: aCartId) isEmpty 
	
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 18:59:33' prior: 50922603!
test09CannotCheckoutACartWithAnInvalidId

	| aRestInterface anInvalidCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	anInvalidCartId := 	0.
	
	self
		should: [aRestInterface checkoutCart: anInvalidCartId withCreditCardNumber: '1234567890123456']
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage ].
! !

!methodRemoval: RestInterface #checkoutCart: stamp: 'gq 11/9/2021 18:59:33'!
checkoutCart: aCartIdToCheckout 
	
	self assertThatCartIdIsValid: aCartIdToCheckout.
	self validateThatIsNotExpired: aCartIdToCheckout.
	self assert: (carts at: aCartIdToCheckout) isEmpty not description: RestInterface emptyCartErrorMessage.!
!StoreTestObjectsFactory methodsFor: 'credit card' stamp: 'gq 11/9/2021 19:04:25'!
currentMonthOfYear
	
	^Month month: today monthIndex year: today yearNumber! !
!RestInterface methodsFor: 'interface operations' stamp: 'gq 11/9/2021 19:05:36'!
checkoutCart: aCartIdToCheckout withCreditCardNumber: aCreditCardNumber expiringOn: aCreditCardExpirationDate   
	
	self assertThatCartIdIsValid: aCartIdToCheckout.
	self validateThatIsNotExpired: aCartIdToCheckout.
	self assert: (carts at: aCartIdToCheckout) isEmpty not description: RestInterface emptyCartErrorMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:05:36' prior: 50923045!
test09CannotCheckoutACartWithAnInvalidId

	| aRestInterface anInvalidCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	anInvalidCartId := 	0.
	
	self
		should: [aRestInterface checkoutCart: anInvalidCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage ].
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:05:36' prior: 50923022!
test12CanCheckoutACart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	
	aRestInterface checkoutCart: aCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear.
	
	self assert: (aRestInterface listCart: aCartId) isEmpty 
	
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:05:36' prior: 50922998!
test11CannotCheckoutAnEmptyCart

	| aRestInterface anEmptyCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	anEmptyCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	self
		should: [aRestInterface checkoutCart: anEmptyCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface emptyCartErrorMessage ].
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:05:36' prior: 50922972!
test10CannotCheckoutAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	
	self
		should: [aRestInterface checkoutCart: aCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage ].
! !

!methodRemoval: RestInterface #checkoutCart:withCreditCardNumber: stamp: 'gq 11/9/2021 19:05:36'!
checkoutCart: aCartIdToCheckout withCreditCardNumber: aCreditCardNumber  
	
	self assertThatCartIdIsValid: aCartIdToCheckout.
	self validateThatIsNotExpired: aCartIdToCheckout.
	self assert: (carts at: aCartIdToCheckout) isEmpty not description: RestInterface emptyCartErrorMessage.!
!RestInterface methodsFor: 'interface operations' stamp: 'gq 11/9/2021 19:07:04'!
checkoutCart: aCartIdToCheckout withCreditCardNumber: aCreditCardNumber expiringOn: aCreditCardExpirationDate ownedBy: aCreditCardOwner    
	
	self assertThatCartIdIsValid: aCartIdToCheckout.
	self validateThatIsNotExpired: aCartIdToCheckout.
	self assert: (carts at: aCartIdToCheckout) isEmpty not description: RestInterface emptyCartErrorMessage.! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:07:04' prior: 50923121!
test12CanCheckoutACart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	
	aRestInterface checkoutCart: aCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay'.
	
	self assert: (aRestInterface listCart: aCartId) isEmpty 
	
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:07:04' prior: 50923171!
test10CannotCheckoutAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	
	self
		should: [aRestInterface checkoutCart: aCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay']
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage ].
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:07:04' prior: 50923145!
test11CannotCheckoutAnEmptyCart

	| aRestInterface anEmptyCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	anEmptyCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	self
		should: [aRestInterface checkoutCart: anEmptyCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay']
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface emptyCartErrorMessage ].
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:07:04' prior: 50923097!
test09CannotCheckoutACartWithAnInvalidId

	| aRestInterface anInvalidCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock.
	anInvalidCartId := 	0.
	
	self
		should: [aRestInterface checkoutCart: anInvalidCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay']
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage ].
! !

!methodRemoval: RestInterface #checkoutCart:withCreditCardNumber:expiringOn: stamp: 'gq 11/9/2021 19:07:04'!
checkoutCart: aCartIdToCheckout withCreditCardNumber: aCreditCardNumber expiringOn: aCreditCardExpirationDate   
	
	self assertThatCartIdIsValid: aCartIdToCheckout.
	self validateThatIsNotExpired: aCartIdToCheckout.
	self assert: (carts at: aCartIdToCheckout) isEmpty not description: RestInterface emptyCartErrorMessage.!

!testRun: #RestInterfaceTest #test12CanCheckoutACart stamp: 'gq 11/9/2021 19:07:38'!
FAILURE!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'gq 11/9/2021 19:21:31'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticationSystem carts catalog clock cartsLastUsage merchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #RestInterface category: 'TusLibros' stamp: 'gq 11/9/2021 19:21:44'!
Object subclass: #RestInterface
	instanceVariableNames: 'authenticationSystem carts catalog clock cartsLastUsage merchantProcessor salesBook'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!RestInterface methodsFor: 'interface operations' stamp: 'gq 11/9/2021 19:21:42' prior: 50923210!
checkoutCart: aCartIdToCheckout withCreditCardNumber: aCreditCardNumber expiringOn: aCreditCardExpirationDate ownedBy: aCreditCardOwner    
	
	| aCashier aCreditCard |
	
	self assertThatCartIdIsValid: aCartIdToCheckout.
	self validateThatIsNotExpired: aCartIdToCheckout.
	self assert: (carts at: aCartIdToCheckout) isEmpty not description: RestInterface emptyCartErrorMessage.
	
	aCreditCard := CreditCard expiringOn: aCreditCardExpirationDate.
	
	aCashier := Cashier toCheckout: (carts at: aCartIdToCheckout)  charging: aCreditCard throught: merchantProcessor on: clock now registeringOn: salesBook.
	
	aCashier checkOut.
	
	cartsLastUsage removeKey: aCartIdToCheckout.
	carts removeKey: aCartIdToCheckout.! !

!testRun: #RestInterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 19:21:48'!
PASSED!

!testRun: #RestInterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 19:21:48'!
PASSED!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 19:21:48'!
PASSED!

!testRun: #RestInterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 19:21:48'!
PASSED!

!testRun: #RestInterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 19:21:48'!
PASSED!

!testRun: #RestInterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 19:21:48'!
PASSED!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 19:21:48'!
PASSED!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 19:21:48'!
PASSED!

!testRun: #RestInterfaceTest #test09CannotCheckoutACartWithAnInvalidId stamp: 'gq 11/9/2021 19:21:48'!
PASSED!

!testRun: #RestInterfaceTest #test10CannotCheckoutAnExpiredCart stamp: 'gq 11/9/2021 19:21:48'!
PASSED!

!testRun: #RestInterfaceTest #test11CannotCheckoutAnEmptyCart stamp: 'gq 11/9/2021 19:21:48'!
PASSED!

!testRun: #RestInterfaceTest #test12CanCheckoutACart stamp: 'gq 11/9/2021 19:21:48'!
ERROR!

!testRun: #RestInterfaceTest #test12CanCheckoutACart stamp: 'gq 11/9/2021 19:21:48'!
ERROR!
!RestInterface class methodsFor: 'instance creation' stamp: 'gq 11/9/2021 19:24:35'!
authenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock debitedBy: aMerchantProcessor   

	^ self new initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:24:35' prior: 50921983!
test05CannotAddAnItemWithAnInvalidCartId

	| aRestInterface anInvalidCartId |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitedBy: self.
	
	anInvalidCartId := 0.
	self
		should: [aRestInterface addToCart: anInvalidCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:24:35' prior: 50922476!
test04CanCreateManyCarts

	| aRestInterface aCartId cartContents anotherCartContents anotherCartId anExpectedCartList |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitedBy: self.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	anotherCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.

	cartContents := aRestInterface listCart: aCartId.
	anotherCartContents := aRestInterface listCart: anotherCartId.
	anExpectedCartList := Dictionary new.
	anExpectedCartList at: storeTestObjectsFactory itemSellByTheStore put: 1.
	self assert: anExpectedCartList equals: cartContents.
	self assert: anotherCartContents isEmpty! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:24:35' prior: 50923304!
test09CannotCheckoutACartWithAnInvalidId

	| aRestInterface anInvalidCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitedBy: self.
	anInvalidCartId := 	0.
	
	self
		should: [aRestInterface checkoutCart: anInvalidCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay']
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage ].
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:24:35' prior: 50922055!
test08CannotAddAnItemToAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitedBy: self.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage].
		
	self
		should: [aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:24:35' prior: 50923278!
test11CannotCheckoutAnEmptyCart

	| aRestInterface anEmptyCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitedBy: self.
	anEmptyCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	self
		should: [aRestInterface checkoutCart: anEmptyCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay']
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface emptyCartErrorMessage ].
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:24:35' prior: 50922025!
test07CannotListAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitedBy: self.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [aRestInterface listCart: aCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage].
		
	self
		should: [aRestInterface listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:24:35' prior: 50922005!
test06CannotListAnItemWithAnInvalidCartId

	| aRestInterface anInvalidCartId |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitedBy: self.
	
	anInvalidCartId := 0.
	self
		should: [aRestInterface listCart: anInvalidCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:24:35' prior: 50922451!
test03CanAddAnItemToCart

	| aRestInterface aCartId cartContents anExpectedCartList |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitedBy: self.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.

	cartContents := aRestInterface listCart: aCartId.
	anExpectedCartList := Dictionary new.
	anExpectedCartList at: storeTestObjectsFactory itemSellByTheStore put: 1.
	self assert: anExpectedCartList equals: cartContents! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:24:35' prior: 50921891!
test01CannotCreateACartWithAnInvalidUser

	| aRestInterface |
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForInvalidUserOrPasswordFailure withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitedBy: self.
	
	self
		should: [aRestInterface createCartFor: self invalidUser with: self validPassword]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidUserOrPasswordErrorMessage]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:24:35' prior: 50923225!
test12CanCheckoutACart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitedBy: self.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	
	aRestInterface checkoutCart: aCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay'.
	
	self assert: (aRestInterface listCart: aCartId) isEmpty 
	
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:24:35' prior: 50922586!
test02CanCreateACart

	| aRestInterface aCartId cartContents |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitedBy: self.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	cartContents := aRestInterface listCart: aCartId.
	self assert: cartContents isEmpty ! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:24:36' prior: 50923250!
test10CannotCheckoutAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitedBy: self.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	
	self
		should: [aRestInterface checkoutCart: aCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay']
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage ].
! !

!methodRemoval: RestInterface class #authenticatingWith:withCatalog:withClock: stamp: 'gq 11/9/2021 19:24:36'!
authenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock  

	^ self new initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock!
!RestInterface class methodsFor: 'instance creation' stamp: 'gq 11/9/2021 19:25:00'!
authenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock debitingBy: aMerchantProcessor   

	^ self new initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:25:00' prior: 50923663!
test01CannotCreateACartWithAnInvalidUser

	| aRestInterface |
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForInvalidUserOrPasswordFailure withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitingBy: self.
	
	self
		should: [aRestInterface createCartFor: self invalidUser with: self validPassword]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidUserOrPasswordErrorMessage]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:25:00' prior: 50923684!
test12CanCheckoutACart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitingBy: self.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	
	aRestInterface checkoutCart: aCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay'.
	
	self assert: (aRestInterface listCart: aCartId) isEmpty 
	
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:25:00' prior: 50923728!
test10CannotCheckoutAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitingBy: self.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	
	self
		should: [aRestInterface checkoutCart: aCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay']
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage ].
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:25:00' prior: 50923442!
test05CannotAddAnItemWithAnInvalidCartId

	| aRestInterface anInvalidCartId |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitingBy: self.
	
	anInvalidCartId := 0.
	self
		should: [aRestInterface addToCart: anInvalidCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:25:00' prior: 50923523!
test08CannotAddAnItemToAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitingBy: self.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage].
		
	self
		should: [aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:25:00' prior: 50923558!
test11CannotCheckoutAnEmptyCart

	| aRestInterface anEmptyCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitingBy: self.
	anEmptyCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	self
		should: [aRestInterface checkoutCart: anEmptyCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay']
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface emptyCartErrorMessage ].
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:25:00' prior: 50923465!
test04CanCreateManyCarts

	| aRestInterface aCartId cartContents anotherCartContents anotherCartId anExpectedCartList |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitingBy: self.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	anotherCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.

	cartContents := aRestInterface listCart: aCartId.
	anotherCartContents := aRestInterface listCart: anotherCartId.
	anExpectedCartList := Dictionary new.
	anExpectedCartList at: storeTestObjectsFactory itemSellByTheStore put: 1.
	self assert: anExpectedCartList equals: cartContents.
	self assert: anotherCartContents isEmpty! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:25:00' prior: 50923585!
test07CannotListAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitingBy: self.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [aRestInterface listCart: aCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage].
		
	self
		should: [aRestInterface listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:25:01' prior: 50923637!
test03CanAddAnItemToCart

	| aRestInterface aCartId cartContents anExpectedCartList |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitingBy: self.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.

	cartContents := aRestInterface listCart: aCartId.
	anExpectedCartList := Dictionary new.
	anExpectedCartList at: storeTestObjectsFactory itemSellByTheStore put: 1.
	self assert: anExpectedCartList equals: cartContents! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:25:01' prior: 50923710!
test02CanCreateACart

	| aRestInterface aCartId cartContents |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitingBy: self.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	cartContents := aRestInterface listCart: aCartId.
	self assert: cartContents isEmpty ! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:25:01' prior: 50923498!
test09CannotCheckoutACartWithAnInvalidId

	| aRestInterface anInvalidCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitingBy: self.
	anInvalidCartId := 	0.
	
	self
		should: [aRestInterface checkoutCart: anInvalidCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay']
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage ].
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:25:01' prior: 50923616!
test06CannotListAnItemWithAnInvalidCartId

	| aRestInterface anInvalidCartId |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitingBy: self.
	
	anInvalidCartId := 0.
	self
		should: [aRestInterface listCart: anInvalidCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !

!methodRemoval: RestInterface class #authenticatingWith:withCatalog:withClock:debitedBy: stamp: 'gq 11/9/2021 19:25:01'!
authenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock debitedBy: aMerchantProcessor   

	^ self new initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock!
!RestInterface class methodsFor: 'instance creation' stamp: 'gq 11/9/2021 19:30:06'!
authenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock debitingBy: aMerchantProcessor registeringSalesOn: aSalesBook    

	^ self new initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:30:06' prior: 50923969!
test07CannotListAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitingBy: self registeringSalesOn: OrderedCollection new.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [aRestInterface listCart: aCartId]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage].
		
	self
		should: [aRestInterface listCart: aCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:30:06' prior: 50923851!
test05CannotAddAnItemWithAnInvalidCartId

	| aRestInterface anInvalidCartId |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitingBy: self registeringSalesOn: OrderedCollection new.
	
	anInvalidCartId := 0.
	self
		should: [aRestInterface addToCart: anInvalidCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:30:06' prior: 50923909!
test11CannotCheckoutAnEmptyCart

	| aRestInterface anEmptyCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitingBy: self registeringSalesOn: OrderedCollection new.
	anEmptyCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	self
		should: [aRestInterface checkoutCart: anEmptyCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay']
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface emptyCartErrorMessage ].
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:30:06' prior: 50923797!
test12CanCheckoutACart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitingBy: self registeringSalesOn: OrderedCollection new.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	
	aRestInterface checkoutCart: aCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay'.
	
	self assert: (aRestInterface listCart: aCartId) isEmpty 
	
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:30:06' prior: 50923823!
test10CannotCheckoutAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitingBy: self registeringSalesOn: OrderedCollection new.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	
	self
		should: [aRestInterface checkoutCart: aCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay']
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage ].
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:30:06' prior: 50923776!
test01CannotCreateACartWithAnInvalidUser

	| aRestInterface |
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForInvalidUserOrPasswordFailure withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitingBy: self registeringSalesOn: OrderedCollection new.
	
	self
		should: [aRestInterface createCartFor: self invalidUser with: self validPassword]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidUserOrPasswordErrorMessage]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:30:06' prior: 50924026!
test02CanCreateACart

	| aRestInterface aCartId cartContents |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitingBy: self registeringSalesOn: OrderedCollection new.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	cartContents := aRestInterface listCart: aCartId.
	self assert: cartContents isEmpty ! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:30:06' prior: 50924044!
test09CannotCheckoutACartWithAnInvalidId

	| aRestInterface anInvalidCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitingBy: self registeringSalesOn: OrderedCollection new.
	anInvalidCartId := 	0.
	
	self
		should: [aRestInterface checkoutCart: anInvalidCartId withCreditCardNumber: '1234567890123456' expiringOn: storeTestObjectsFactory currentMonthOfYear ownedBy: 'Alan Kay']
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage ].
! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:30:06' prior: 50924069!
test06CannotListAnItemWithAnInvalidCartId

	| aRestInterface anInvalidCartId |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitingBy: self registeringSalesOn: OrderedCollection new.
	
	anInvalidCartId := 0.
	self
		should: [aRestInterface listCart: anInvalidCartId]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:30:06' prior: 50923874!
test08CannotAddAnItemToAnExpiredCart

	| aRestInterface aCartId aClock |
	
	aClock := storeTestObjectsFactory clock.
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: aClock debitingBy: self registeringSalesOn: OrderedCollection new.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	
	aClock now: (storeTestObjectsFactory today + (Duration minutes: 31)).
	self
		should: [aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [:anError | self assert: anError messageText = RestInterface expiredCartErrorMessage].
		
	self
		should: [aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore ]
		raise: AssertionFailure - MessageNotUnderstood
		withExceptionDo: [:anError | 
			self assert: anError messageText = RestInterface invalidCartIdErrorMessage]! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:30:06' prior: 50923936!
test04CanCreateManyCarts

	| aRestInterface aCartId cartContents anotherCartContents anotherCartId anExpectedCartList |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitingBy: self registeringSalesOn: OrderedCollection new.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.
	anotherCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.

	cartContents := aRestInterface listCart: aCartId.
	anotherCartContents := aRestInterface listCart: anotherCartId.
	anExpectedCartList := Dictionary new.
	anExpectedCartList at: storeTestObjectsFactory itemSellByTheStore put: 1.
	self assert: anExpectedCartList equals: cartContents.
	self assert: anotherCartContents isEmpty! !
!RestInterfaceTest methodsFor: 'as yet unclassified' stamp: 'gq 11/9/2021 19:30:06' prior: 50924000!
test03CanAddAnItemToCart

	| aRestInterface aCartId cartContents anExpectedCartList |
	
	aRestInterface := RestInterface authenticatingWith: self authenticationSystemPreparedForAuthenticationSuccess withCatalog: storeTestObjectsFactory defaultCatalog withClock: storeTestObjectsFactory clock debitingBy: self registeringSalesOn: OrderedCollection new.
	aCartId := 	aRestInterface createCartFor: self validUser with: self validPassword.
	aRestInterface addToCart: aCartId quantity: 1 of: storeTestObjectsFactory itemSellByTheStore.

	cartContents := aRestInterface listCart: aCartId.
	anExpectedCartList := Dictionary new.
	anExpectedCartList at: storeTestObjectsFactory itemSellByTheStore put: 1.
	self assert: anExpectedCartList equals: cartContents! !

!methodRemoval: RestInterface class #authenticatingWith:withCatalog:withClock:debitingBy: stamp: 'gq 11/9/2021 19:30:06'!
authenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock debitingBy: aMerchantProcessor   

	^ self new initializeAuthenticatingWith: anAuthenticationSystem withCatalog: aCatalog withClock: aClock!

!testRun: #RestInterfaceTest #test01CannotCreateACartWithAnInvalidUser stamp: 'gq 11/9/2021 19:30:26'!
PASSED!

!testRun: #RestInterfaceTest #test02CanCreateACart stamp: 'gq 11/9/2021 19:30:26'!
PASSED!

!testRun: #RestInterfaceTest #test03CanAddAnItemToCart stamp: 'gq 11/9/2021 19:30:26'!
PASSED!

!testRun: #RestInterfaceTest #test04CanCreateManyCarts stamp: 'gq 11/9/2021 19:30:26'!
PASSED!

!testRun: #RestInterfaceTest #test05CannotAddAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 19:30:26'!
PASSED!

!testRun: #RestInterfaceTest #test06CannotListAnItemWithAnInvalidCartId stamp: 'gq 11/9/2021 19:30:26'!
PASSED!

!testRun: #RestInterfaceTest #test07CannotListAnExpiredCart stamp: 'gq 11/9/2021 19:30:26'!
PASSED!

!testRun: #RestInterfaceTest #test08CannotAddAnItemToAnExpiredCart stamp: 'gq 11/9/2021 19:30:26'!
PASSED!

!testRun: #RestInterfaceTest #test09CannotCheckoutACartWithAnInvalidId stamp: 'gq 11/9/2021 19:30:26'!
PASSED!

!testRun: #RestInterfaceTest #test10CannotCheckoutAnExpiredCart stamp: 'gq 11/9/2021 19:30:27'!
PASSED!

!testRun: #RestInterfaceTest #test11CannotCheckoutAnEmptyCart stamp: 'gq 11/9/2021 19:30:27'!
PASSED!

!testRun: #RestInterfaceTest #test12CanCheckoutACart stamp: 'gq 11/9/2021 19:30:27'!
ERROR!

!testRun: #RestInterfaceTest #test12CanCheckoutACart stamp: 'gq 11/9/2021 19:30:27'!
ERROR!

!testRun: #RestInterfaceTest #test12CanCheckoutACart stamp: 'gq 11/9/2021 19:30:29'!
ERROR!

----SNAPSHOT----(9 November 2021 19:31:52) CuisUniversity-4913.image priorSource: 18920985!