

----QUIT----(13 October 2021 15:20:10) CuisUniversity-4913.image priorSource: 14638157!

----STARTUP---- (13 October 2021 15:20:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4913.image!


----QUIT----(13 October 2021 15:20:10) CuisUniversity-4913.image priorSource: 18661767!

----STARTUP---- (13 October 2021 15:21:02) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4913.image!


----QUIT----(13 October 2021 15:21:02) CuisUniversity-4913.image priorSource: 18661997!

----QUIT----(13 October 2021 15:26:07) CuisUniversity-4913.image priorSource: 14638157!

----STARTUP---- (13 October 2021 15:26:08) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4913.image!


----QUIT----(13 October 2021 15:26:08) CuisUniversity-4913.image priorSource: 18661767!

----STARTUP---- (2 November 2021 18:00:44) as /home/juli/Documentos/Facu/Inge1/cuis-university/CuisUniversity-4913.image!


----End fileIn of /home/juli/Documentos/Facu/Inge1/cuis-university/TusLibros-18.st----!

Object subclass: #TusLibrosTestObjectsFactory
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #TusLibrosTestObjectsFactory category: 'TusLibros' stamp: 'JD 11/2/2021 18:21:59'!
Object subclass: #TusLibrosTestObjectsFactory
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CartTest category: 'TusLibros' stamp: 'JD 11/2/2021 18:23:40'!
TestCase subclass: #CartTest
	instanceVariableNames: 'aTusLibrosTestObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CartTest methodsFor: 'support' stamp: 'JD 11/2/2021 18:23:38' overrides: 16927572!
setUp
	
	aTusLibrosTestObjectsFactory := TusLibrosTestObjectsFactory new! !
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:24:49' prior: 50914968!
test01NewCartsAreCreatedEmpty

	self assert: aTusLibrosTestObjectsFactory createCart isEmpty! !
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:24:55' prior: 50914946!
test02CanNotAddItemsThatDoNotBelongToStore

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	self 
		should: [ cart add: self itemNotSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidItemErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:24:58' prior: 50914973!
test03AfterAddingAnItemTheCartIsNotEmptyAnymore

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	cart add: self itemSellByTheStore.
	self deny: cart isEmpty ! !
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:25:01' prior: 50914933!
test04CanNotAddNonPositiveNumberOfItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	self 
		should: [cart add: 0 of: self itemSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidQuantityErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:25:45' prior: 50914988!
test05CanNotAddMoreThanOneItemNotSellByTheStore

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	self 
		should: [cart add: 2 of: self itemNotSellByTheStore  ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidItemErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:25:48' prior: 50915001!
test06CartRemembersAddedItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	cart add: self itemSellByTheStore.
	self assert: (cart includes: self itemSellByTheStore)! !
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:25:50' prior: 50914981!
test07CartDoesNotHoldNotAddedItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	self deny: (cart includes: self itemSellByTheStore)! !
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:25:55' prior: 50914959!
test08CartRemembersTheNumberOfAddedItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	cart add: 2 of: self itemSellByTheStore.
	self assert: (cart occurrencesOf: self itemSellByTheStore) = 2! !
!TusLibrosTestObjectsFactory methodsFor: 'no messages' stamp: 'JD 11/2/2021 18:26:13'!
createCart
	
	^Cart acceptingItemsOf: self defaultCatalog! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 18:26:37'!
defaultCatalog
	
	^ Array with: self itemSellByTheStore! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 18:26:44'!
itemNotSellByTheStore
	
	^'invalidBook'! !

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 18:26:54'!
ERROR!
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 18:27:07'!
itemSellByTheStore
	
	^ 'validBook'! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 18:27:30'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 18:27:30'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 18:27:30'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 18:27:30'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 18:27:30'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 18:27:30'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 18:27:30'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 18:27:30'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 18:27:30'!
PASSED!
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:27:43' prior: 50915061!
test02CanNotAddItemsThatDoNotBelongToStore

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	self 
		should: [ cart add: aTusLibrosTestObjectsFactory itemNotSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidItemErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:27:47' prior: 50915074!
test03AfterAddingAnItemTheCartIsNotEmptyAnymore

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	cart add: aTusLibrosTestObjectsFactory itemSellByTheStore.
	self deny: cart isEmpty ! !
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:27:52' prior: 50915082!
test04CanNotAddNonPositiveNumberOfItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	self 
		should: [cart add: 0 of: aTusLibrosTestObjectsFactory itemSellByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidQuantityErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:27:56' prior: 50915096!
test05CanNotAddMoreThanOneItemNotSellByTheStore

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	self 
		should: [cart add: 2 of: aTusLibrosTestObjectsFactory itemNotSellByTheStore  ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidItemErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:28:01' prior: 50915110!
test06CartRemembersAddedItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	cart add: aTusLibrosTestObjectsFactory itemSellByTheStore.
	self assert: (cart includes: aTusLibrosTestObjectsFactory itemSellByTheStore)! !
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:28:04' prior: 50915119!
test07CartDoesNotHoldNotAddedItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	self deny: (cart includes: aTusLibrosTestObjectsFactory itemSellByTheStore)! !
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:28:09' prior: 50915127!
test08CartRemembersTheNumberOfAddedItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	cart add: 2 of: aTusLibrosTestObjectsFactory itemSellByTheStore.
	self assert: (cart occurrencesOf: aTusLibrosTestObjectsFactory itemSellByTheStore) = 2! !

!methodRemoval: CartTest #createCart stamp: 'JD 11/2/2021 18:28:25'!
createCart
	
	^Cart acceptingItemsOf: self defaultCatalog!

!methodRemoval: CartTest #defaultCatalog stamp: 'JD 11/2/2021 18:28:25'!
defaultCatalog
	
	^ Array with: self itemSellByTheStore!

!methodRemoval: CartTest #itemNotSellByTheStore stamp: 'JD 11/2/2021 18:28:25'!
itemNotSellByTheStore
	
	^'invalidBook'!

!methodRemoval: CartTest #itemSellByTheStore stamp: 'JD 11/2/2021 18:28:25'!
itemSellByTheStore
	
	^ 'validBook'!

!methodRemoval: CartTest #setUp stamp: 'JD 11/2/2021 18:28:25'!
setUp
	
	aTusLibrosTestObjectsFactory := TusLibrosTestObjectsFactory new!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 18:28:30'!
ERROR!
!CartTest methodsFor: 'tests' stamp: 'JD 11/2/2021 18:29:02' overrides: 16927572!
setUp
	
	aTusLibrosTestObjectsFactory := TusLibrosTestObjectsFactory new! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 18:29:03'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 18:29:03'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 18:29:03'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 18:29:03'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 18:29:03'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 18:29:03'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 18:29:03'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 18:29:03'!
PASSED!

----SNAPSHOT----(2 November 2021 18:30:13) CuisUniversity-4913.image priorSource: 18661997!

TestCase subclass: #CashierTest
	instanceVariableNames: 'aTusLibrosTestObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'JD 11/2/2021 18:30:41'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'aTusLibrosTestObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cashier category: 'TusLibros' stamp: 'JD 11/2/2021 18:43:47'!
Object subclass: #Cashier
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'JD 11/2/2021 18:43:53'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'aTusLibrosTestObjectsFactory aTusLibrosObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'no messages' stamp: 'JD 11/2/2021 18:43:41'!
test01CannotCreateACashierForAnEmptyCart
	
	| aSalesRecord |
	aSalesRecord := OrderedCollection new.
	
	self
		should: [Cashier 
			for: aTusLibrosObjectsFactory createCart
			payingWith: aTusLibrosObjectsFactory validCreditCard
			on: aTusLibrosObjectsFactory today
			recordingOn: aSalesRecord]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cartCannotBeEmptyErrorMessage
			self assert: aSalesRecord isEmpty] ! !
!CashierTest methodsFor: 'nil' stamp: 'JD 11/2/2021 18:44:08' overrides: 16927572!
setUp
	
	aTusLibrosTestObjectsFactory := TusLibrosTestObjectsFactory new! !

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 18:44:44'!
ERROR!

TestCase subclass: #CashierTest
	instanceVariableNames: 'aTusLibrosObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'JD 11/2/2021 18:45:13'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'aTusLibrosObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'JD 11/2/2021 18:45:18'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'aTusLibrosTestObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 18:45:18' prior: 50915353!
test01CannotCreateACashierForAnEmptyCart
	
	| aSalesRecord |
	aSalesRecord := OrderedCollection new.
	
	self
		should: [Cashier 
			for: aTusLibrosTestObjectsFactory createCart
			payingWith: aTusLibrosTestObjectsFactory validCreditCard
			on: aTusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cartCannotBeEmptyErrorMessage
			self assert: aSalesRecord isEmpty] ! !

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 18:45:23'!
ERROR!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'JD 11/2/2021 18:46:10'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'tusLibrosTestObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 18:46:10' prior: 50915400!
test01CannotCreateACashierForAnEmptyCart
	
	| aSalesRecord |
	aSalesRecord := OrderedCollection new.
	
	self
		should: [Cashier 
			for: tusLibrosTestObjectsFactory createCart
			payingWith: tusLibrosTestObjectsFactory validCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cartCannotBeEmptyErrorMessage
			self assert: aSalesRecord isEmpty] ! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 18:46:21' prior: 50915371 overrides: 16927572!
setUp
	
	tusLibrosTestObjectsFactory := TusLibrosTestObjectsFactory new! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 18:46:22'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 18:46:22'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 18:46:22'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 18:46:22'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 18:46:22'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 18:46:22'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 18:46:22'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 18:46:22'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 18:46:22'!
ERROR!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 18:46:22'!
ERROR!
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 18:47:13'!
validCreditCard
	self shouldBeImplemented.! !

(GregorianMonthOfYear year: GregorianYear current month: GregorianMonth current next)!

(GregorianMonthOfYear year: GregorianYear current next month: GregorianMonth current)!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'JD 11/2/2021 19:07:49'!
Object subclass: #CreditCard
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:07:45' prior: 50915488!
validCreditCard
	
	^ CreditCard with: 'aValidCCNumber' expiringOn: (GregorianMonthOfYear year: GregorianYear current next month: GregorianMonth current)! !

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 19:07:54'!
ERROR!
!CreditCard class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 19:08:01'!
with: aString expiringOn: aGregorianMonthOfYear 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWith: aString expiringOn: aGregorianMonthOfYear ! !
!CreditCard class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 19:08:46' prior: 50915516!
with: aCreditCardNumber expiringOn: anExpiringMonthOfYear 

	^self new initializeWith: aCreditCardNumber expiringOn: anExpiringMonthOfYear ! !

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 19:08:50'!
ERROR!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'JD 11/2/2021 19:08:58'!
Object subclass: #CreditCard
	instanceVariableNames: 'creditCardNumber'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'JD 11/2/2021 19:08:58'!
Object subclass: #CreditCard
	instanceVariableNames: 'creditCardNumber expiringMonthOfYear'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'initialization' stamp: 'JD 11/2/2021 19:08:58'!
initializeWith: aCreditCardNumber expiringOn: anExpiringMonthOfYear 
	self shouldBeImplemented.
	creditCardNumber := aCreditCardNumber.
	expiringMonthOfYear := anExpiringMonthOfYear.! !

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'JD 11/2/2021 19:10:11'!
Object subclass: #CreditCard
	instanceVariableNames: 'creditCardNumber expiringMonthOfYear number'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'JD 11/2/2021 19:10:12'!
Object subclass: #CreditCard
	instanceVariableNames: 'creditCardNumber expiringMonthOfYear number expirationMonthOfYear'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'initialization' stamp: 'JD 11/2/2021 19:10:09' prior: 50915551!
initializeWith: aCreditCardNumber expiringOn: anExpirationMonthOfYear 

	number := aCreditCardNumber.
	expirationMonthOfYear := anExpirationMonthOfYear! !

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 19:10:14'!
ERROR!
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:10:29'!
today
	self shouldBeImplemented.! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:12:39' prior: 50915589!
today

	^ FixedGregorianDate today! !

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 19:12:41'!
ERROR!
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 19:12:50'!
for: aCart payingWith: aCreditCard on: aFixedGregorianDate recordingOn: anOrderedCollection 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeFor: aCart payingWith: aCreditCard on: aFixedGregorianDate recordingOn: anOrderedCollection ! !
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 19:14:37' prior: 50915601!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord 

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord ! !

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 19:14:39'!
ERROR!

!classDefinition: #Cashier category: 'TusLibros' stamp: 'JD 11/2/2021 19:14:48'!
Object subclass: #Cashier
	instanceVariableNames: 'cartToCheckout'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cashier category: 'TusLibros' stamp: 'JD 11/2/2021 19:14:49'!
Object subclass: #Cashier
	instanceVariableNames: 'cartToCheckout creditCardToPayWith'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cashier category: 'TusLibros' stamp: 'JD 11/2/2021 19:14:49'!
Object subclass: #Cashier
	instanceVariableNames: 'cartToCheckout creditCardToPayWith cashierCreationDate'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cashier category: 'TusLibros' stamp: 'JD 11/2/2021 19:14:49'!
Object subclass: #Cashier
	instanceVariableNames: 'cartToCheckout creditCardToPayWith cashierCreationDate salesRecord'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cashier methodsFor: 'initialization' stamp: 'JD 11/2/2021 19:14:49'!
initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord 
	self shouldBeImplemented.
	cartToCheckout := aCartToCheckout.
	creditCardToPayWith := aCreditCardToPayWith.
	cashierCreationDate := aCashierCreationDate.
	salesRecord := aSalesRecord.! !

!classDefinition: #Cashier category: 'TusLibros' stamp: 'JD 11/2/2021 19:15:20'!
Object subclass: #Cashier
	instanceVariableNames: 'cartToCheckout creditCardToPayWith cashierCreationDate salesRecord cart'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cashier category: 'TusLibros' stamp: 'JD 11/2/2021 19:15:22'!
Object subclass: #Cashier
	instanceVariableNames: 'cartToCheckout creditCardToPayWith cashierCreationDate salesRecord cart creditCard'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Cashier category: 'TusLibros' stamp: 'JD 11/2/2021 19:15:23'!
Object subclass: #Cashier
	instanceVariableNames: 'cartToCheckout creditCardToPayWith cashierCreationDate salesRecord cart creditCard creationDate'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cashier methodsFor: 'initialization' stamp: 'JD 11/2/2021 19:15:18' prior: 50915658!
initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord 

	cart := aCartToCheckout.
	creditCard := aCreditCardToPayWith.
	creationDate := aCashierCreationDate.
	salesRecord := aSalesRecord! !

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 19:15:33'!
FAILURE!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:15:56' prior: 50915430!
test01CannotCreateACashierForAnEmptyCart
	
	| aSalesRecord |
	aSalesRecord := OrderedCollection new.
	
	self
		should: [Cashier 
			for: tusLibrosTestObjectsFactory createCart
			payingWith: tusLibrosTestObjectsFactory validCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cartCannotBeEmptyErrorMessage.
			self assert: aSalesRecord isEmpty] ! !

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 19:15:57'!
FAILURE!
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 19:20:46' prior: 50915614!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord 
	
	self assert: aCartToCheckout isEmpty not description: [self error: Cashier cartCannotBeEmptyErrorMessage].

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord ! !
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 19:21:05' prior: 50915735!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord 
	
	self error: Cashier cartCannotBeEmptyErrorMessage.

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord ! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 19:21:06'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 19:21:06'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 19:21:06'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 19:21:06'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 19:21:06'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 19:21:06'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 19:21:06'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 19:21:06'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 19:21:06'!
ERROR!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 19:21:06'!
ERROR!
!Cashier class methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:21:13'!
cartCannotBeEmptyErrorMessage
	self shouldBeImplemented.! !
!Cashier class methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:21:31' prior: 50915793!
cartCannotBeEmptyErrorMessage
	
	^ 'Cart cannot be empty'! !

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 19:21:32'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 19:21:35'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 19:21:35'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 19:21:35'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 19:21:35'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 19:21:35'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 19:21:35'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 19:21:35'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 19:21:35'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 19:21:35'!
PASSED!
!CreditCard class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 19:22:15' prior: 50915526!
with: aCreditCardNumber expiringOn: anExpirationMonthOfYear 

	^self new initializeWith: aCreditCardNumber expiringOn: anExpirationMonthOfYear ! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:47:49'!
test02
	
	| aSalesRecord aCashier checkoutTotal |
	
	aSalesRecord := OrderedCollection new.
	aCashier := Cashier 
				for: tusLibrosTestObjectsFactory createCart
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	checkoutTotal := aCashier checkout.
	
	self assert: (tusLibrosTestObjectsFactory defaultCatalog at: tusLibrosTestObjectsFactory itemSellByTheStore) equals: checkoutTotal! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:50:25' prior: 50915843!
test02
	
	| aSalesRecord aCashier checkoutTotal aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSellByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	checkoutTotal := aCashier checkout.
	
	self assert: (tusLibrosTestObjectsFactory defaultCatalog at: tusLibrosTestObjectsFactory itemSellByTheStore) equals: checkoutTotal! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:51:13'!
itemSoldByTheStore
	
	^ 'validBook'! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:51:13' prior: 50915258!
test08CartRemembersTheNumberOfAddedItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	cart add: 2 of: aTusLibrosTestObjectsFactory itemSoldByTheStore.
	self assert: (cart occurrencesOf: aTusLibrosTestObjectsFactory itemSoldByTheStore) = 2! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:51:13' prior: 50915239!
test06CartRemembersAddedItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	cart add: aTusLibrosTestObjectsFactory itemSoldByTheStore.
	self assert: (cart includes: aTusLibrosTestObjectsFactory itemSoldByTheStore)! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:51:13' prior: 50915861!
test02
	
	| aSalesRecord aCashier checkoutTotal aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	checkoutTotal := aCashier checkout.
	
	self assert: (tusLibrosTestObjectsFactory defaultCatalog at: tusLibrosTestObjectsFactory itemSoldByTheStore) equals: checkoutTotal! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:51:13' prior: 50915201!
test03AfterAddingAnItemTheCartIsNotEmptyAnymore

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	cart add: aTusLibrosTestObjectsFactory itemSoldByTheStore.
	self deny: cart isEmpty ! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:51:13' prior: 50915142!
defaultCatalog
	
	^ Array with: self itemSoldByTheStore! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:51:13' prior: 50915210!
test04CanNotAddNonPositiveNumberOfItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	self 
		should: [cart add: 0 of: aTusLibrosTestObjectsFactory itemSoldByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidQuantityErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:51:13' prior: 50915249!
test07CartDoesNotHoldNotAddedItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	self deny: (cart includes: aTusLibrosTestObjectsFactory itemSoldByTheStore)! !

!methodRemoval: TusLibrosTestObjectsFactory #itemSellByTheStore stamp: 'JD 11/2/2021 19:51:13'!
itemSellByTheStore
	
	^ 'validBook'!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 19:51:15'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 19:51:15'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 19:51:15'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 19:51:15'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 19:51:15'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 19:51:15'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 19:51:15'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 19:51:15'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 19:51:15'!
PASSED!

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 19:51:15'!
ERROR!

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 19:51:15'!
ERROR!
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:51:25'!
itemNotSoldByTheStore
	
	^'invalidBook'! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:51:25' prior: 50915187!
test02CanNotAddItemsThatDoNotBelongToStore

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	self 
		should: [ cart add: aTusLibrosTestObjectsFactory itemNotSoldByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidItemErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:51:25' prior: 50915224!
test05CanNotAddMoreThanOneItemNotSellByTheStore

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCart.
	
	self 
		should: [cart add: 2 of: aTusLibrosTestObjectsFactory itemNotSoldByTheStore  ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidItemErrorMessage.
			self assert: cart isEmpty ]! !

!methodRemoval: TusLibrosTestObjectsFactory #itemNotSellByTheStore stamp: 'JD 11/2/2021 19:51:25'!
itemNotSellByTheStore
	
	^'invalidBook'!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 19:51:27'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 19:51:27'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 19:51:27'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 19:51:27'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 19:51:27'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 19:51:27'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 19:51:27'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 19:51:27'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 19:51:27'!
PASSED!

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 19:51:27'!
ERROR!

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 19:51:27'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 19:53:27' prior: 50915910!
test02
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: (tusLibrosTestObjectsFactory defaultCatalog at: tusLibrosTestObjectsFactory itemSoldByTheStore) equals: totalCheckout! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:00:59' prior: 50916080!
test02
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: aCartWithAnItem total equals: totalCheckout! !

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 20:01:56'!
ERROR!
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 19:20:46' prior: 50915749!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord 
	
	self assert: aCartToCheckout isEmpty not description: [self error: Cashier cartCannotBeEmptyErrorMessage].

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord ! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 20:02:30'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 20:02:30'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 20:02:30'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 20:02:30'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 20:02:30'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 20:02:30'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 20:02:30'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 20:02:30'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 20:02:30'!
PASSED!

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 20:02:30'!
ERROR!

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 20:02:30'!
ERROR!
!Cashier methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:02:43'!
checkout
	self shouldBeImplemented.! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:03:30' prior: 50916169!
checkout
	
	^ cart total! !

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 20:03:31'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:03:37'!
total
	self shouldBeImplemented.! !
!Cart methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:05:02' prior: 50916180!
total
	
	catalog at: 'validBook'! !

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 20:05:03'!
ERROR!
!Cart methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:05:11' prior: 50916184!
total
	
	^ catalog at: 'validBook'! !

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 20:05:12'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:05:39' prior: 50916101!
test02
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: 20 equals: totalCheckout! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:06:30' prior: 50916198!
test02
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: 20*dollar equals: totalCheckout! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:08:51' prior: 50915941!
defaultCatalog
	
	^ Dictionary new at: self itemSoldByTheStore put: 20*dollar! !

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 20:09:56'!
ERROR!
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:12:17' prior: 50916236!
defaultCatalog
	 
	| catalog |
	catalog := Dictionary new.
	catalog at: self itemSoldByTheStore put: 20*dollar.
	
	^ catalog! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:12:22' prior: 50916245!
defaultCatalog
	 
	| catalog |
	
	catalog := Dictionary new.
	catalog at: self itemSoldByTheStore put: 20*dollar.
	
	^ catalog! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:12:30' prior: 50916253!
defaultCatalog
	 
	| aCatalog |
	
	aCatalog := Dictionary new.
	aCatalog at: self itemSoldByTheStore put: 20*dollar.
	
	^ aCatalog! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 20:12:35'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 20:12:35'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 20:12:35'!
ERROR!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 20:12:35'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 20:12:35'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 20:12:35'!
ERROR!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 20:12:35'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 20:12:35'!
ERROR!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 20:12:35'!
PASSED!

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 20:12:35'!
ERROR!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 20:12:46'!
ERROR!
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:18:22' prior: 50915505!
validCreditCard
	
	^ CreditCard with: 'aValidCCNumber' expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 20:19:39'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:20:25' prior: 50916217!
test02
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: (tusLibrosTestObjectsFactory itemSoldByTheStore).
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: 20*dollar equals: totalCheckout! !

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 20:20:26'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:20:42' prior: 50916313!
test02
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := (tusLibrosTestObjectsFactory createCart) add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: 20*dollar equals: totalCheckout! !

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 20:20:43'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:20:50' prior: 50916334!
test02
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := (tusLibrosTestObjectsFactory createCart) add: (tusLibrosTestObjectsFactory itemSoldByTheStore).
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: 20*dollar equals: totalCheckout! !

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 20:20:51'!
ERROR!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:21:04' prior: 50916355!
test02
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: 20*dollar equals: totalCheckout! !

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 20:21:08'!
ERROR!
!Cart methodsFor: 'assertions' stamp: 'JD 11/2/2021 20:22:29' prior: 50914866!
assertIsValidItem: anItem

	(catalog includesKey: anItem) ifFalse: [ self error: self invalidItemErrorMessage ]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 20:22:30'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 20:22:30'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 20:22:30'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 20:22:30'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 20:22:30'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 20:22:30'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 20:22:30'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 20:22:30'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 20:22:30'!
PASSED!

!testRun: #CashierTest #test02 stamp: 'JD 11/2/2021 20:22:30'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:23:47'!
test02CanCheckoutACartWithAnItem
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: 20*dollar equals: totalCheckout! !

!methodRemoval: CashierTest #test02 stamp: 'JD 11/2/2021 20:23:47'!
test02
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: 20*dollar equals: totalCheckout!

----SNAPSHOT----(2 November 2021 20:23:57) CuisUniversity-4913.image priorSource: 18677494!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:25:21'!
test03
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: 2 of: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: 40*dollar equals: totalCheckout! !

!testRun: #CashierTest #test03 stamp: 'JD 11/2/2021 20:26:49'!
FAILURE!
!Cart methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:28:08' prior: 50916191!
total
	
	^ items sum: [:anItem | catalog at: anItem]! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithAnItem stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CashierTest #test03 stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 20:28:10'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 20:28:10'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:28:49'!
test03CanCheckoutACartWithManyItems
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: 2 of: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: 40*dollar equals: totalCheckout! !

!methodRemoval: CashierTest #test03 stamp: 'JD 11/2/2021 20:28:49'!
test03
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: 2 of: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: 40*dollar equals: totalCheckout!

!methodRemoval: CashierTest #test02CanCheckoutACartWithAnItem stamp: 'JD 11/2/2021 20:29:11'!
test02CanCheckoutACartWithAnItem
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: 20*dollar equals: totalCheckout!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:29:16'!
test02CanCheckoutACartWithManyItems
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: 2 of: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: 40*dollar equals: totalCheckout! !

!methodRemoval: CashierTest #test03CanCheckoutACartWithManyItems stamp: 'JD 11/2/2021 20:29:16'!
test03CanCheckoutACartWithManyItems
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: 2 of: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	totalCheckout := aCashier checkout.
	
	self assert: 40*dollar equals: totalCheckout!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:38:16'!
test03
	
	| aSalesRecord aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: tusLibrosTestObjectsFactory createCart
			payingWith: tusLibrosTestObjectsFactory expiredCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardIsExpiredErrorMessage.
			self assert: aSalesRecord isEmpty]! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:39:00' prior: 50916652!
test03
	
	| aSalesRecord aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory expiredCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardIsExpiredErrorMessage.
			self assert: aSalesRecord isEmpty]! !

!testRun: #CashierTest #test03 stamp: 'JD 11/2/2021 20:39:05'!
ERROR!
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:39:27'!
expiredCreditCard
	self shouldBeImplemented.! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 20:40:01' prior: 50916697!
expiredCreditCard
	
	^ CreditCard with: 'aValidCCNumber' expiringOn: (GregorianMonthOfYear year: (self today year previous) month: (self today month))! !

!testRun: #CashierTest #test03 stamp: 'JD 11/2/2021 20:40:02'!
FAILURE!
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 20:41:05' prior: 50916122!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord 
	
	self assert: aCartToCheckout isEmpty not description: [self error: Cashier cartCannotBeEmptyErrorMessage].
	self assert: aCreditCardToPayWith isNotExpired description: [self error: Cashier creditCardIsExpiredErrorMessage].

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord ! !
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 20:52:53' prior: 50916713!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord 
	
	| aCreditCardToPayWithIsNotExpired |
	self assert: aCartToCheckout isEmpty not description: [self error: Cashier cartCannotBeEmptyErrorMessage].
	aCreditCardToPayWithIsNotExpired := ((aCreditCardToPayWith expiration year = aCashierCreationDate year) and: [(aCreditCardToPayWith expiration month > aCashierCreationDate month)]) 
		or: [aCreditCardToPayWith expiration year > aCashierCreationDate year].
	self assert: aCreditCardToPayWithIsNotExpired description: [self error: Cashier creditCardIsExpiredErrorMessage].

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord ! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 20:53:03'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 20:53:03'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 20:53:03'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 20:53:03'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 20:53:03'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 20:53:03'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 20:53:03'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 20:53:03'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 20:53:03'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/2/2021 20:53:03'!
ERROR!

!testRun: #CashierTest #test03 stamp: 'JD 11/2/2021 20:53:03'!
ERROR!
!CreditCard methodsFor: 'initialization' stamp: 'JD 11/2/2021 20:53:39'!
expiration
	
	^ expirationMonthOfYear! !
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 20:54:06'!
creditCardIsExpiredErrorMessage

	^ 'Credit card is expired'! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 20:54:15'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 20:54:15'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 20:54:15'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 20:54:15'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 20:54:15'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 20:54:15'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 20:54:15'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 20:54:15'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 20:54:15'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/2/2021 20:54:15'!
PASSED!

!testRun: #CashierTest #test03 stamp: 'JD 11/2/2021 20:54:15'!
PASSED!
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 20:55:54'!
assertThatIsNotExpired: aCreditCardToPayWith on: aCashierCreationDate
	
	| aCreditCardToPayWithIsNotExpired |

	aCreditCardToPayWithIsNotExpired := ((aCreditCardToPayWith expiration year = aCashierCreationDate year) and: [(aCreditCardToPayWith expiration month > aCashierCreationDate month)]) 
		or: [aCreditCardToPayWith expiration year > aCashierCreationDate year].
	
	self assert: aCreditCardToPayWithIsNotExpired description: [self error: Cashier creditCardIsExpiredErrorMessage].! !
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 20:56:13' prior: 50916834!
assertThatIsNotExpired: aCreditCardToPayWith on: aCashierCreationDate
	
	| aCreditCardToPayWithIsNotExpired xx |

	xx _ (aCreditCardToPayWith expiration year = aCashierCreationDate year) and: [(aCreditCardToPayWith expiration month > aCashierCreationDate month)].
	aCreditCardToPayWithIsNotExpired := (xx) 
		or: [aCreditCardToPayWith expiration year > aCashierCreationDate year].
	
	self assert: aCreditCardToPayWithIsNotExpired description: [self error: Cashier creditCardIsExpiredErrorMessage].! !
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 20:56:31' prior: 50916853!
assertThatIsNotExpired: aCreditCardToPayWith on: aCashierCreationDate
	
	| aCreditCardToPayWithIsNotExpired xx |

	xx _ (aCreditCardToPayWith expiration year = aCashierCreationDate year) and: [(aCreditCardToPayWith expiration month > aCashierCreationDate month)].
	aCreditCardToPayWithIsNotExpired := (xx) 
		or: [| yy |
	yy _ aCreditCardToPayWith expiration year > aCashierCreationDate year].
	
	self assert: aCreditCardToPayWithIsNotExpired description: [self error: Cashier creditCardIsExpiredErrorMessage].! !
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 21:00:37' prior: 50916872!
assertThatIsNotExpired: aCreditCardToPayWith on: aCashierCreationDate
	
	| expireOnNextMonths expireOnNextYears |

	expireOnNextMonths := (aCreditCardToPayWith expiration year = aCashierCreationDate year) and: [(aCreditCardToPayWith expiration month > aCashierCreationDate month)].
	expireOnNextYears := aCreditCardToPayWith expiration year > aCashierCreationDate year.
	
	self assert: (expireOnNextMonths or: [expireOnNextYears]) description: [self error: Cashier creditCardIsExpiredErrorMessage].! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 21:00:38'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 21:00:38'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 21:00:38'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 21:00:38'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 21:00:38'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 21:00:38'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 21:00:38'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 21:00:38'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 21:00:38'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/2/2021 21:00:38'!
PASSED!

!testRun: #CashierTest #test03 stamp: 'JD 11/2/2021 21:00:38'!
PASSED!
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 21:01:05' prior: 50916731!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord 
	
	self assert: aCartToCheckout isEmpty not description: [self error: Cashier cartCannotBeEmptyErrorMessage].
	self assertThatIsNotExpired: aCreditCardToPayWith on: aCashierCreationDate.

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord ! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 21:01:06'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 21:01:06'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 21:01:06'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 21:01:06'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 21:01:06'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 21:01:06'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 21:01:06'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 21:01:06'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 21:01:06'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/2/2021 21:01:06'!
PASSED!

!testRun: #CashierTest #test03 stamp: 'JD 11/2/2021 21:01:06'!
PASSED!
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 21:01:29'!
assertThatIsNotEmpty: aCartToCheckout

	^ self assert: aCartToCheckout isEmpty not description: [self error: Cashier cartCannotBeEmptyErrorMessage]! !
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/2/2021 21:01:29' prior: 50916945!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord 
	
	self assertThatIsNotEmpty: aCartToCheckout.
	self assertThatIsNotExpired: aCreditCardToPayWith on: aCashierCreationDate.

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord ! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 21:01:34'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 21:01:34'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 21:01:34'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 21:01:34'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 21:01:34'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 21:01:34'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 21:01:34'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 21:01:34'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 21:01:34'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/2/2021 21:01:34'!
PASSED!

!testRun: #CashierTest #test03 stamp: 'JD 11/2/2021 21:01:34'!
PASSED!

----SNAPSHOT----(2 November 2021 21:01:47) CuisUniversity-4913.image priorSource: 18714192!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 21:03:42'!
test03CannotCreateACashierWithAnExpiredCard
	
	| aSalesRecord aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory expiredCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardIsExpiredErrorMessage.
			self assert: aSalesRecord isEmpty]! !

!methodRemoval: CashierTest #test03 stamp: 'JD 11/2/2021 21:03:42'!
test03
	
	| aSalesRecord aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory expiredCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardIsExpiredErrorMessage.
			self assert: aSalesRecord isEmpty]!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 21:33:50'!
test04CanRegisterASale
	
	| aSalesRecord aCartWithAnItem aCashier |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	aCashier checkout.
	
	self assert: (OrderedCollection with: aCartWithAnItem total) equals: aSalesRecord! !

!testRun: #CashierTest #test04CanRegisterASale stamp: 'JD 11/2/2021 21:33:56'!
FAILURE!
!Cashier methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 21:34:34' prior: 50916174!
checkout
	
	| total |
	total := cart total.
	salesRecord add: total.
	
	^ total! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'JD 11/2/2021 21:34:38' prior: 50917118!
checkout
	
	| total |

	total := cart total.
	salesRecord add: total.
	
	^ total! !

!testRun: #CashierTest #test04CanRegisterASale stamp: 'JD 11/2/2021 21:37:43'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/2/2021 21:37:43'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/2/2021 21:37:43'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/2/2021 21:37:43'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/2/2021 21:37:43'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/2/2021 21:37:43'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/2/2021 21:37:43'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/2/2021 21:37:43'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/2/2021 21:37:43'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/2/2021 21:37:43'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/2/2021 21:37:43'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/2/2021 21:37:43'!
PASSED!

!testRun: #CashierTest #test04CanRegisterASale stamp: 'JD 11/2/2021 21:37:43'!
PASSED!

----SNAPSHOT----(2 November 2021 21:45:23) CuisUniversity-4913.image priorSource: 18732811!

----SNAPSHOT----(2 November 2021 21:45:25) CuisUniversity-4913.image priorSource: 18736618!

----SNAPSHOT----(2 November 2021 21:46:52) CuisUniversity-4913.image priorSource: 18736711!

----STARTUP---- (3 November 2021 15:54:27) as /home/juli/Documentos/Facu/Inge1/cuis-university/CuisUniversity-4913.image!

!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 17:23:01'!
test05CanRegisterASale
	
	| aSalesRecord aCartWithAnItem aCashier |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	aCashier checkout.
	
	self assert: (OrderedCollection with: aCartWithAnItem total) equals: aSalesRecord! !

!methodRemoval: CashierTest #test04CanRegisterASale stamp: 'JD 11/3/2021 17:23:01'!
test04CanRegisterASale
	
	| aSalesRecord aCartWithAnItem aCashier |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord.
	
	aCashier checkout.
	
	self assert: (OrderedCollection with: aCartWithAnItem total) equals: aSalesRecord!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 17:27:34'!
test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber
	
	| aSalesRecord aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithInvalidNumber
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardNumberMustHaveMoreThanTwelveDigits.
			self assert: aSalesRecord isEmpty]! !

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 17:27:40'!
ERROR!
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 17:27:47'!
creditCardWithInvalidNumber
	self shouldBeImplemented.! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 17:30:20' prior: 50917249!
creditCardWithInvalidNumber

	^ CreditCard with: 'invalidNum' expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 17:30:29' prior: 50917255!
creditCardWithInvalidNumber

	^ CreditCard with: '0' expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 17:30:30'!
FAILURE!
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/3/2021 17:32:16' prior: 50917003!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord 
	
	self assertThatIsNotEmpty: aCartToCheckout.
	self assertThatIsNotExpired: aCreditCardToPayWith on: aCashierCreationDate.
	self assert: (aCreditCardToPayWith number size >= 12) description: [self error: Cashier creditCardNumberMustHaveMoreThanTwelveDigits].

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord ! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 17:32:18'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 17:32:18'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 17:32:18'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 17:32:18'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 17:32:18'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 17:32:18'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 17:32:18'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 17:32:18'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 17:32:18'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 17:32:18'!
ERROR!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 17:32:18'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 17:32:18'!
ERROR!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 17:32:18'!
ERROR!
!Cashier class methodsFor: 'error messages' stamp: 'JD 11/3/2021 17:33:07'!
creditCardNumberMustHaveMoreThanElevenDigitsErrorMessage
	
	^ 'Credit card number must have more than eleven digits'! !
!Cashier class methodsFor: 'error messages' stamp: 'JD 11/3/2021 17:33:22'!
creditCardNumberMustHaveAtLeastTwelveDigitsErrorMessage
	
	^ 'Credit card number must have more than eleven digits'! !

!methodRemoval: Cashier class #creditCardNumberMustHaveMoreThanElevenDigitsErrorMessage stamp: 'JD 11/3/2021 17:33:22'!
creditCardNumberMustHaveMoreThanElevenDigitsErrorMessage
	
	^ 'Credit card number must have more than eleven digits'!
!Cashier class methodsFor: 'error messages' stamp: 'JD 11/3/2021 17:33:36' prior: 50917343!
creditCardNumberMustHaveAtLeastTwelveDigitsErrorMessage
	
	^ 'Credit card number must have at least twelve digits'! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 17:33:39' prior: 50917221!
test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber
	
	| aSalesRecord aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithInvalidNumber
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardNumberMustHaveAtLeastTwelveDigitsErrorMessage.
			self assert: aSalesRecord isEmpty]! !
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/3/2021 17:33:50' prior: 50917276!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord 
	
	self assertThatIsNotEmpty: aCartToCheckout.
	self assertThatIsNotExpired: aCreditCardToPayWith on: aCashierCreationDate.
	self assert: (aCreditCardToPayWith number size >= 12) description: [self error: Cashier creditCardNumberMustHaveAtLeastTwelveDigitsErrorMessage].

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord ! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 17:33:52'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 17:33:52'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 17:33:52'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 17:33:52'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 17:33:52'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 17:33:52'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 17:33:52'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 17:33:52'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 17:33:52'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 17:33:52'!
ERROR!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 17:33:52'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 17:33:52'!
ERROR!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 17:33:52'!
ERROR!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 17:33:54'!
ERROR!

Object subclass: #CreditCard
	instanceVariableNames: 'number expirationMonthOfYear'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'JD 11/3/2021 17:34:42'!
Object subclass: #CreditCard
	instanceVariableNames: 'number expirationMonthOfYear'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'initialization' stamp: 'JD 11/3/2021 17:34:51'!
number
	
	^ number! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 17:36:52'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 17:36:52'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 17:36:52'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 17:36:52'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 17:36:52'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 17:36:52'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 17:36:52'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 17:36:52'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 17:36:52'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 17:36:52'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 17:36:52'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 17:36:52'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 17:36:52'!
PASSED!

----SNAPSHOT----(3 November 2021 17:39:40) CuisUniversity-4913.image priorSource: 18736804!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 18:11:06'!
test06
	
	| aSalesRecord aCartWithAnItem aCashier |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithoutFunds
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: tusLibrosTestObjectsFactory posnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardWithoutFundsErrorMessage.
			self assert: aSalesRecord isEmpty]! !

----SNAPSHOT----(3 November 2021 18:11:48) CuisUniversity-4913.image priorSource: 18747510!
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/3/2021 18:12:30'!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord using: aPosnet  
	
	self assertThatIsNotEmpty: aCartToCheckout.
	self assertThatIsNotExpired: aCreditCardToPayWith on: aCashierCreationDate.
	self assert: (aCreditCardToPayWith number size >= 12) description: [self error: Cashier creditCardNumberMustHaveAtLeastTwelveDigitsErrorMessage].

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord ! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 18:12:30' prior: 50917183!
test05CanRegisterASale
	
	| aSalesRecord aCartWithAnItem aCashier |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet.
	
	aCashier checkout.
	
	self assert: (OrderedCollection with: aCartWithAnItem total) equals: aSalesRecord! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 18:12:30' prior: 50916613!
test02CanCheckoutACartWithManyItems
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: 2 of: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet.
	
	totalCheckout := aCashier checkout.
	
	self assert: 40*dollar equals: totalCheckout! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 18:12:30' prior: 50915713!
test01CannotCreateACashierForAnEmptyCart
	
	| aSalesRecord |
	aSalesRecord := OrderedCollection new.
	
	self
		should: [Cashier 
			for: tusLibrosTestObjectsFactory createCart
			payingWith: tusLibrosTestObjectsFactory validCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cartCannotBeEmptyErrorMessage.
			self assert: aSalesRecord isEmpty] ! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 18:12:30' prior: 50917365!
test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber
	
	| aSalesRecord aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithInvalidNumber
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardNumberMustHaveAtLeastTwelveDigitsErrorMessage.
			self assert: aSalesRecord isEmpty]! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 18:12:30' prior: 50917054!
test03CannotCreateACashierWithAnExpiredCard
	
	| aSalesRecord aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory expiredCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardIsExpiredErrorMessage.
			self assert: aSalesRecord isEmpty]! !

!methodRemoval: Cashier class #for:payingWith:on:recordingOn: stamp: 'JD 11/3/2021 18:12:30'!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord 
	
	self assertThatIsNotEmpty: aCartToCheckout.
	self assertThatIsNotExpired: aCreditCardToPayWith on: aCashierCreationDate.
	self assert: (aCreditCardToPayWith number size >= 12) description: [self error: Cashier creditCardNumberMustHaveAtLeastTwelveDigitsErrorMessage].

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord !

!classDefinition: #PosnetSimulator category: 'TusLibros' stamp: 'JD 11/3/2021 18:13:23'!
Object subclass: #PosnetSimulator
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!TusLibrosTestObjectsFactory methodsFor: 'nil' stamp: 'JD 11/3/2021 18:13:19'!
posnet
	
	^ PosnetSimulator new! !

!testRun: #CashierTest #test06 stamp: 'JD 11/3/2021 18:13:40'!
ERROR!
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 18:14:21'!
creditCardWithoutFunds
	
	^ self validCreditCard! !

!testRun: #CashierTest #test06 stamp: 'JD 11/3/2021 18:14:24'!
FAILURE!
!Cashier class methodsFor: 'error messages' stamp: 'JD 11/3/2021 18:14:48'!
creditCardWithoutFundsErrorMessage

	^ 'Credit card without funds'! !
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/3/2021 18:15:20' prior: 50917541!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord using: aPosnet  
	
	self assertThatIsNotEmpty: aCartToCheckout.
	self assertThatIsNotExpired: aCreditCardToPayWith on: aCashierCreationDate.
	self assert: (aCreditCardToPayWith number size >= 12) description: [self error: Cashier creditCardNumberMustHaveAtLeastTwelveDigitsErrorMessage].

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord using: aPosnet! !

!classDefinition: #Cashier category: 'TusLibros' stamp: 'JD 11/3/2021 18:15:47'!
Object subclass: #Cashier
	instanceVariableNames: 'cartToCheckout creditCardToPayWith cashierCreationDate salesRecord cart creditCard creationDate posnet'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!Cashier methodsFor: 'initialization' stamp: 'JD 11/3/2021 18:15:45'!
initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord using: aPosnet

	cart := aCartToCheckout.
	creditCard := aCreditCardToPayWith.
	creationDate := aCashierCreationDate.
	salesRecord := aSalesRecord.
	posnet := aPosnet! !

!methodRemoval: Cashier #initializeFor:payingWith:on:recordingOn: stamp: 'JD 11/3/2021 18:15:50'!
initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord 

	cart := aCartToCheckout.
	creditCard := aCreditCardToPayWith.
	creationDate := aCashierCreationDate.
	salesRecord := aSalesRecord!
!Cashier methodsFor: 'checkout' stamp: 'JD 11/3/2021 18:23:50' prior: 50917124!
checkout
	
	| total aDebitStatusResponse |
	
	total := cart total.
	aDebitStatusResponse := posnet debit: total with: creditCard.
	aDebitStatusResponse = 'Credit without funds' ifTrue: [
		self error:	 Cashier creditCardWithoutFundsErrorMessage
	].
	salesRecord add: total.
	
	^ total! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 18:23:58'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 18:23:58'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 18:23:58'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 18:23:58'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 18:23:58'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 18:23:58'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 18:23:58'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 18:23:58'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 18:23:58'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 18:23:58'!
ERROR!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 18:23:58'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 18:23:58'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 18:23:58'!
ERROR!

!testRun: #CashierTest #test06 stamp: 'JD 11/3/2021 18:23:58'!
ERROR!

!testRun: #CashierTest #test06 stamp: 'JD 11/3/2021 18:24:00'!
ERROR!
!PosnetSimulator methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 18:24:08'!
debit: aSimpleMeasure with: aCreditCard 
	self shouldBeImplemented.! !

!classDefinition: #PosnetSimulator category: 'TusLibros' stamp: 'JD 11/3/2021 18:26:33'!
Object subclass: #PosnetSimulator
	instanceVariableNames: 'description'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!PosnetSimulator methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 18:26:29' prior: 50917827!
debit: aTotalSaleAmount with: aCreditCard
	
	^ description
	! !

!testRun: #CashierTest #test06 stamp: 'JD 11/3/2021 18:26:34'!
FAILURE!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 18:29:34' prior: 50917514!
test06
	
	| aSalesRecord aCartWithAnItem aCashier |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	tusLibrosTestObjectsFactory posnet prepareForNoFundsFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithoutFunds
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: tusLibrosTestObjectsFactory posnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardWithoutFundsErrorMessage.
			self assert: aSalesRecord isEmpty]! !
!PosnetSimulator methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 18:30:19' overrides: 16896425!
initialize
	
	description := 'OK'! !
!PosnetSimulator methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 18:30:25' prior: 50917874 overrides: 16896425!
initialize
	
	description := 'Ok'! !
!PosnetSimulator methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 18:31:05'!
prepareForNoFundsFailure
	
	description := 'Credit without funds'! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 18:31:08'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 18:31:08'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 18:31:08'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 18:31:08'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 18:31:08'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 18:31:08'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 18:31:08'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 18:31:08'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 18:31:08'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 18:31:08'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 18:31:08'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 18:31:08'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 18:31:08'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'JD 11/3/2021 18:31:08'!
FAILURE!

!testRun: #CashierTest #test06 stamp: 'JD 11/3/2021 18:31:08'!
FAILURE!
!PosnetSimulator methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 18:31:37' prior: 50917883!
prepareForNoFundsFailure
	
	description := 'Credit card without funds'! !
!Cashier methodsFor: 'checkout' stamp: 'JD 11/3/2021 18:31:44' prior: 50917769!
checkout
	
	| total aDebitStatusResponse |
	
	total := cart total.
	aDebitStatusResponse := posnet debit: total with: creditCard.
	aDebitStatusResponse = 'Credit card without funds' ifTrue: [
		self error:	 Cashier creditCardWithoutFundsErrorMessage
	].
	salesRecord add: total.
	
	^ total! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 18:32:56' prior: 50917848!
test06
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForNoFundsFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithoutFunds
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardWithoutFundsErrorMessage.
			self assert: aSalesRecord isEmpty]! !

!testRun: #CashierTest #test06 stamp: 'JD 11/3/2021 18:33:12'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 18:33:12'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 18:33:12'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 18:33:12'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 18:33:12'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 18:33:12'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 18:33:12'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 18:33:12'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 18:33:12'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 18:33:12'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 18:33:12'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 18:33:12'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 18:33:12'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 18:33:12'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'JD 11/3/2021 18:33:12'!
PASSED!

----SNAPSHOT----(3 November 2021 18:34:24) CuisUniversity-4913.image priorSource: 18748377!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:07:14'!
test06CannotCheckoutWithACreditCardWithoutFunds
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForNoFundsFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithoutFunds
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardWithoutFundsErrorMessage.
			self assert: aSalesRecord isEmpty]! !

!methodRemoval: CashierTest #test06 stamp: 'JD 11/3/2021 19:07:14'!
test06
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForNoFundsFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithoutFunds
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardWithoutFundsErrorMessage.
			self assert: aSalesRecord isEmpty]!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:19:35'!
test07CannotCheckoutWithAStolenCreditCard
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForStolenCreditCardFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory stolenCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier stolenCreditCardErrorMessage.
			self assert: aSalesRecord isEmpty]! !
!Cashier methodsFor: 'checkout' stamp: 'JD 11/3/2021 19:23:35' prior: 50917940!
checkout
	
	| total aDebitStatusResponse |
	
	total := cart total.
	aDebitStatusResponse := posnet debit: total with: creditCard.
	aDebitStatusResponse = 'Credit card without funds' ifTrue: [
		self error:	 Cashier creditCardWithoutFundsErrorMessage
	].
	aDebitStatusResponse = 'Stolen credit card' ifTrue: [
		self error:	 Cashier stolenCreditCardErrorMessage
	].
	salesRecord add: total.
	
	^ total! !
!Cashier class methodsFor: 'error messages' stamp: 'JD 11/3/2021 19:24:43'!
stolenCreditCardErrorMessage

	^ 'Cannot checkout with a stolen credit card'! !
!Cashier class methodsFor: 'error messages' stamp: 'JD 11/3/2021 19:24:57'!
cannotCheckoutWithAStolenCreditCard

	^ 'Cannot checkout with a stolen credit card'! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:24:57' prior: 50918107!
checkout
	
	| total aDebitStatusResponse |
	
	total := cart total.
	aDebitStatusResponse := posnet debit: total with: creditCard.
	aDebitStatusResponse = 'Credit card without funds' ifTrue: [
		self error:	 Cashier creditCardWithoutFundsErrorMessage
	].
	aDebitStatusResponse = 'Stolen credit card' ifTrue: [
		self error:	 Cashier cannotCheckoutWithAStolenCreditCard
	].
	salesRecord add: total.
	
	^ total! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:24:57' prior: 50918080!
test07CannotCheckoutWithAStolenCreditCard
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForStolenCreditCardFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory stolenCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithAStolenCreditCard.
			self assert: aSalesRecord isEmpty]! !

!methodRemoval: Cashier class #stolenCreditCardErrorMessage stamp: 'JD 11/3/2021 19:24:57'!
stolenCreditCardErrorMessage

	^ 'Cannot checkout with a stolen credit card'!
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 19:26:58'!
stolenCreditCard
	
	^ self validCreditCard! !
!PosnetSimulator methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:27:33'!
prepareForStolenCreditCardFailure
	
	description := 'Stolen credit card'! !

!testRun: #CashierTest #test07CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 19:27:36'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 19:27:36'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 19:27:36'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 19:27:36'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 19:27:36'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 19:27:36'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 19:27:36'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 19:27:36'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 19:27:36'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 19:27:36'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 19:27:36'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 19:27:36'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 19:27:36'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 19:27:36'!
PASSED!

!testRun: #CashierTest #test06CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 19:27:36'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 19:27:36'!
PASSED!
!Cashier class methodsFor: 'error messages' stamp: 'JD 11/3/2021 19:28:39'!
cannotCheckoutWithACreditCardWithoutFundsErrorMessage

	^ 'Credit card without funds'! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:28:39' prior: 50918133!
checkout
	
	| total aDebitStatusResponse |
	
	total := cart total.
	aDebitStatusResponse := posnet debit: total with: creditCard.
	aDebitStatusResponse = 'Credit card without funds' ifTrue: [
		self error:	 Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage
	].
	aDebitStatusResponse = 'Stolen credit card' ifTrue: [
		self error:	 Cashier cannotCheckoutWithAStolenCreditCard
	].
	salesRecord add: total.
	
	^ total! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:28:39' prior: 50918028!
test06CannotCheckoutWithACreditCardWithoutFunds
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForNoFundsFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithoutFunds
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage.
			self assert: aSalesRecord isEmpty]! !

!methodRemoval: Cashier class #creditCardWithoutFundsErrorMessage stamp: 'JD 11/3/2021 19:28:39'!
creditCardWithoutFundsErrorMessage

	^ 'Credit card without funds'!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 19:28:41'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 19:28:41'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 19:28:41'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 19:28:41'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 19:28:41'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 19:28:41'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 19:28:41'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 19:28:41'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 19:28:41'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 19:28:41'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 19:28:41'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 19:28:41'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 19:28:41'!
PASSED!

!testRun: #CashierTest #test06CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 19:28:41'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 19:28:41'!
PASSED!
!Cashier class methodsFor: 'error messages' stamp: 'JD 11/3/2021 19:29:01' prior: 50918244!
cannotCheckoutWithACreditCardWithoutFundsErrorMessage

	^ 'Cannot checkout with a credit card without funds'! !
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/3/2021 19:30:09'!
assertThatCreditCardNumberHaveAtLeastTwelveDigits: aCreditCardToPayWith

	^ self assert: (aCreditCardToPayWith number size >= 12) description: [self error: Cashier creditCardNumberMustHaveAtLeastTwelveDigitsErrorMessage]! !
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/3/2021 19:30:09' prior: 50917717!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord using: aPosnet  
	
	self assertThatIsNotEmpty: aCartToCheckout.
	self assertThatIsNotExpired: aCreditCardToPayWith on: aCashierCreationDate.
	self assertThatCreditCardNumberHaveAtLeastTwelveDigits: aCreditCardToPayWith.

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord using: aPosnet! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 19:30:12'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 19:30:12'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 19:30:12'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 19:30:12'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 19:30:12'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 19:30:12'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 19:30:12'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 19:30:12'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 19:30:12'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 19:30:12'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 19:30:12'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 19:30:12'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 19:30:12'!
PASSED!

!testRun: #CashierTest #test06CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 19:30:12'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 19:30:12'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 19:30:16'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 19:30:16'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 19:30:16'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 19:30:16'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 19:30:16'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 19:30:16'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 19:30:16'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 19:30:16'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 19:30:16'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 19:30:16'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 19:30:16'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 19:30:16'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 19:30:16'!
PASSED!

!testRun: #CashierTest #test06CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 19:30:16'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 19:30:16'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:44:13'!
test05
	
	| aSalesRecord aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCart add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithAnInvalidOwnerName
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardOwnerNameMustHaveAtMostThirtyDigitsErrorMessage.
			self assert: aSalesRecord isEmpty]! !
!CreditCard class methodsFor: 'instance creation' stamp: 'JD 11/3/2021 19:47:01'!
withOwner: aCreditCardOwner with: aCreditCardNumber expiringOn: anExpirationMonthOfYear 

	^self new initializeWith: aCreditCardNumber expiringOn: anExpirationMonthOfYear ! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:47:01' prior: 50916303!
validCreditCard
	
	^ CreditCard withOwner: tusLibrosTestObjectsFactory creditCardWithAnInvalidOwnerName with: 'aValidCCNumber' expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:47:01' prior: 50916702!
expiredCreditCard
	
	^ CreditCard withOwner: tusLibrosTestObjectsFactory creditCardWithAnInvalidOwnerName with: 'aValidCCNumber' expiringOn: (GregorianMonthOfYear year: (self today year previous) month: (self today month))! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:47:01' prior: 50917264!
creditCardWithInvalidNumber

	^ CreditCard withOwner: tusLibrosTestObjectsFactory creditCardWithAnInvalidOwnerName with: '0' expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !

!methodRemoval: CreditCard class #with:expiringOn: stamp: 'JD 11/3/2021 19:47:01'!
with: aCreditCardNumber expiringOn: anExpirationMonthOfYear 

	^self new initializeWith: aCreditCardNumber expiringOn: anExpirationMonthOfYear !
!CreditCard class methodsFor: 'instance creation' stamp: 'JD 11/3/2021 19:47:14'!
withOwner: aCreditCardOwner withNumber: aCreditCardNumber expiringOn: anExpirationMonthOfYear 

	^self new initializeWith: aCreditCardNumber expiringOn: anExpirationMonthOfYear ! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:47:14' prior: 50918523!
expiredCreditCard
	
	^ CreditCard withOwner: tusLibrosTestObjectsFactory creditCardWithAnInvalidOwnerName withNumber: 'aValidCCNumber' expiringOn: (GregorianMonthOfYear year: (self today year previous) month: (self today month))! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:47:14' prior: 50918512!
validCreditCard
	
	^ CreditCard withOwner: tusLibrosTestObjectsFactory creditCardWithAnInvalidOwnerName withNumber: 'aValidCCNumber' expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:47:14' prior: 50918534!
creditCardWithInvalidNumber

	^ CreditCard withOwner: tusLibrosTestObjectsFactory creditCardWithAnInvalidOwnerName withNumber: '0' expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !

!methodRemoval: CreditCard class #withOwner:with:expiringOn: stamp: 'JD 11/3/2021 19:47:14'!
withOwner: aCreditCardOwner with: aCreditCardNumber expiringOn: anExpirationMonthOfYear 

	^self new initializeWith: aCreditCardNumber expiringOn: anExpirationMonthOfYear !
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 19:48:11' prior: 50918561!
expiredCreditCard
	
	^ CreditCard withOwner: self creditCardOwnerName withNumber: 'aValidCCNumber' expiringOn: (GregorianMonthOfYear year: (self today year previous) month: (self today month))! !
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 19:48:21' prior: 50918572!
validCreditCard
	
	^ CreditCard withOwner: self creditCardOwnerName withNumber: 'aValidCCNumber' expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 19:48:28' prior: 50918583!
creditCardWithInvalidNumber

	^ CreditCard withOwner: self creditCardOwnerName withNumber: '0' expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 19:49:18' prior: 50918622!
creditCardWithInvalidNumber

	^ CreditCard withOwner: self validCreditCardOwnerName withNumber: '0' expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 19:49:34' prior: 50918612!
validCreditCard
	
	^ CreditCard withOwner: self validCreditCardOwnerName withNumber: 'aValidCCNumber' expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 19:50:34'!
creditCardWithAnInvalidOwnerName

	^ CreditCard withOwner: 'an Invalid Credit Card Owner Name' withNumber: '0' expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 19:50:59' prior: 50918651!
creditCardWithAnInvalidOwnerName

	^ CreditCard withOwner: 'An invalid credit card owner name' withNumber: '0' expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 19:51:18' prior: 50918661!
creditCardWithAnInvalidOwnerName

	^ CreditCard withOwner: 'An invalid credit card owner name' withNumber: 'aValidCCNumber' expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !
!Cashier class methodsFor: 'error messages' stamp: 'JD 11/3/2021 19:52:15'!
creditCardOwnerNameMustHaveAtMostThirtyDigitsErrorMessage
	
	^ 'Credit card owner name must have at most thirty digits'! !
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/3/2021 19:53:35' prior: 50918365!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord using: aPosnet  
	
	self assertThatIsNotEmpty: aCartToCheckout.
	self assertThatIsNotExpired: aCreditCardToPayWith on: aCashierCreationDate.
	self assertThatCreditCardNumberHaveAtLeastTwelveDigits: aCreditCardToPayWith.
	self assert: (aCreditCardToPayWith ownerName size <= 30) description: [self error: Cashier creditCardOwnerNameMustHaveAtMostThirtyDigitsErrorMessage].

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord using: aPosnet! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 19:53:40'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 19:53:40'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 19:53:40'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 19:53:40'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 19:53:40'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 19:53:40'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 19:53:40'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 19:53:40'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 19:53:40'!
ERROR!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 19:53:40'!
ERROR!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 19:53:40'!
ERROR!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 19:53:40'!
ERROR!

!testRun: #CashierTest #test05 stamp: 'JD 11/3/2021 19:53:40'!
ERROR!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 19:53:40'!
ERROR!

!testRun: #CashierTest #test06CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 19:53:40'!
ERROR!

!testRun: #CashierTest #test07CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 19:53:40'!
ERROR!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'JD 11/3/2021 19:54:02'!
Object subclass: #CreditCard
	instanceVariableNames: 'number expirationMonthOfYear ownerName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'information' stamp: 'JD 11/3/2021 19:54:01'!
ownerName
	
	^ ownerName! !
!CreditCard class methodsFor: 'instance creation' stamp: 'JD 11/3/2021 19:54:30' prior: 50918551!
withOwner: aCreditCardOwner withNumber: aCreditCardNumber expiringOn: anExpirationMonthOfYear 

	^self new initializeOn: aCreditCardOwner moving: aCreditCardNumber startingCircleAtIndex: anExpirationMonthOfYear ! !
!CreditCard class methodsFor: 'instance creation' stamp: 'JD 11/3/2021 19:54:37' prior: 50918773!
withOwner: aCreditCardOwner withNumber: aCreditCardNumber expiringOn: anExpirationMonthOfYear 

	^self new initializeWithOwner: aCreditCardOwner withNumber: aCreditCardNumber expiringOn: anExpirationMonthOfYear ! !
!CreditCard methodsFor: 'initialization' stamp: 'JD 11/3/2021 19:55:01'!
initializeWithOwner: aCreditCardOwner withNumber: aCreditCardNumber expiringOn: anExpirationMonthOfYear

	number := aCreditCardNumber.
	expirationMonthOfYear := anExpirationMonthOfYear.
	ownerName := aCreditCardOwner ! !

!methodRemoval: CreditCard #initializeWith:expiringOn: stamp: 'JD 11/3/2021 19:55:05'!
initializeWith: aCreditCardNumber expiringOn: anExpirationMonthOfYear 

	number := aCreditCardNumber.
	expirationMonthOfYear := anExpirationMonthOfYear!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 19:55:09'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 19:55:09'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 19:55:09'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 19:55:09'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 19:55:09'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 19:55:09'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 19:55:09'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 19:55:09'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 19:55:09'!
ERROR!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 19:55:09'!
ERROR!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 19:55:09'!
ERROR!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 19:55:09'!
ERROR!

!testRun: #CashierTest #test05 stamp: 'JD 11/3/2021 19:55:09'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 19:55:09'!
ERROR!

!testRun: #CashierTest #test06CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 19:55:09'!
ERROR!

!testRun: #CashierTest #test07CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 19:55:09'!
ERROR!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 19:55:12'!
ERROR!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 19:55:18'!
ERROR!
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:55:26'!
validCreditCardOwnerName
	self shouldBeImplemented.! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:55:42' prior: 50918867!
validCreditCardOwnerName
	
	^ 'A Valid CC Name'! !

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 19:55:47'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 19:55:48'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 19:55:49'!
ERROR!
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 19:56:03' prior: 50918602!
expiredCreditCard
	
	^ CreditCard withOwner: self validCreditCardOwnerName withNumber: 'aValidCCNumber' expiringOn: (GregorianMonthOfYear year: (self today year previous) month: (self today month))! !

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 19:56:04'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 19:56:05'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 19:56:06'!
PASSED!

!testRun: #CashierTest #test06CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 19:56:06'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 19:56:07'!
PASSED!

!testRun: #CashierTest #test05 stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CashierTest #test05 stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CashierTest #test06CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 19:56:11'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 19:56:11'!
PASSED!
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/3/2021 19:57:02'!
assertThatOwnerNameHasAtMostThirtyDigits: aCreditCardToPayWith

	^ self assert: (aCreditCardToPayWith ownerName size <= 30) description: [self error: Cashier creditCardOwnerNameMustHaveAtMostThirtyDigitsErrorMessage]! !
!Cashier class methodsFor: 'instance creation' stamp: 'JD 11/3/2021 19:57:02' prior: 50918688!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord using: aPosnet  
	
	self assertThatIsNotEmpty: aCartToCheckout.
	self assertThatIsNotExpired: aCreditCardToPayWith on: aCashierCreationDate.
	self assertThatCreditCardNumberHaveAtLeastTwelveDigits: aCreditCardToPayWith.
	self assertThatOwnerNameHasAtMostThirtyDigits: aCreditCardToPayWith.

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord using: aPosnet! !
!Cashier class methodsFor: 'assertions' stamp: 'JD 11/3/2021 19:57:14'!
assertThatCreditCardNumberHasAtLeastTwelveDigits: aCreditCardToPayWith

	^ self assert: (aCreditCardToPayWith number size >= 12) description: [self error: Cashier creditCardNumberMustHaveAtLeastTwelveDigitsErrorMessage]! !
!Cashier class methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 19:57:14' prior: 50918978!
for: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord using: aPosnet  
	
	self assertThatIsNotEmpty: aCartToCheckout.
	self assertThatIsNotExpired: aCreditCardToPayWith on: aCashierCreationDate.
	self assertThatCreditCardNumberHasAtLeastTwelveDigits: aCreditCardToPayWith.
	self assertThatOwnerNameHasAtMostThirtyDigits: aCreditCardToPayWith.

	^ self new initializeFor: aCartToCheckout payingWith: aCreditCardToPayWith on: aCashierCreationDate recordingOn: aSalesRecord using: aPosnet! !

!methodRemoval: Cashier class #assertThatCreditCardNumberHaveAtLeastTwelveDigits: stamp: 'JD 11/3/2021 19:57:14'!
assertThatCreditCardNumberHaveAtLeastTwelveDigits: aCreditCardToPayWith

	^ self assert: (aCreditCardToPayWith number size >= 12) description: [self error: Cashier creditCardNumberMustHaveAtLeastTwelveDigitsErrorMessage]!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

!testRun: #CashierTest #test05 stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

!testRun: #CashierTest #test06CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 19:57:15'!
PASSED!

----SNAPSHOT----(3 November 2021 19:59:42) CuisUniversity-4913.image priorSource: 18763978!
!TusLibrosTestObjectsFactory methodsFor: 'catalogs' stamp: 'JD 11/3/2021 20:08:38' prior: 50916261!
defaultCatalog
	 
	| aCatalog |
	
	aCatalog := Dictionary new.
	aCatalog at: self itemSoldByTheStore put: 20.00*dollar.
	
	^ aCatalog! !
!TusLibrosTestObjectsFactory methodsFor: 'catalogs' stamp: 'JD 11/3/2021 20:11:17'!
catalogWithInvalidItemsPriceFormat
	 
	| aCatalog |
	
	aCatalog := Dictionary new.
	aCatalog at: self itemSoldByTheStore put: 20*dollar.
	
	^ aCatalog! !
!TusLibrosTestObjectsFactory methodsFor: 'carts' stamp: 'JD 11/3/2021 20:12:07'!
createCartWithAnInvalidCatalog
	
	^Cart acceptingItemsOf: self catalogWithInvalidItemsPriceFormat! !
!TusLibrosTestObjectsFactory methodsFor: 'carts' stamp: 'JD 11/3/2021 20:12:40'!
createCartWithDefaultCatalog
	
	^Cart acceptingItemsOf: self defaultCatalog! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50915946!
test04CanNotAddNonPositiveNumberOfItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCartWithDefaultCatalog.
	
	self 
		should: [cart add: 0 of: aTusLibrosTestObjectsFactory itemSoldByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidQuantityErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50915961!
test07CartDoesNotHoldNotAddedItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCartWithDefaultCatalog.
	
	self deny: (cart includes: aTusLibrosTestObjectsFactory itemSoldByTheStore)! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50917623!
test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber
	
	| aSalesRecord aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithInvalidNumber
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardNumberMustHaveAtLeastTwelveDigitsErrorMessage.
			self assert: aSalesRecord isEmpty]! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50917648!
test03CannotCreateACashierWithAnExpiredCard
	
	| aSalesRecord aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory expiredCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardIsExpiredErrorMessage.
			self assert: aSalesRecord isEmpty]! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50916027!
test05CanNotAddMoreThanOneItemNotSellByTheStore

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCartWithDefaultCatalog.
	
	self 
		should: [cart add: 2 of: aTusLibrosTestObjectsFactory itemNotSoldByTheStore  ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidItemErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50915055!
test01NewCartsAreCreatedEmpty

	self assert: aTusLibrosTestObjectsFactory createCartWithDefaultCatalog isEmpty! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50915931!
test03AfterAddingAnItemTheCartIsNotEmptyAnymore

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCartWithDefaultCatalog.
	
	cart add: aTusLibrosTestObjectsFactory itemSoldByTheStore.
	self deny: cart isEmpty ! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50918480!
test05
	
	| aSalesRecord aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithAnInvalidOwnerName
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardOwnerNameMustHaveAtMostThirtyDigitsErrorMessage.
			self assert: aSalesRecord isEmpty]! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50917561!
test05CanRegisterASale
	
	| aSalesRecord aCartWithAnItem aCashier |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet.
	
	aCashier checkout.
	
	self assert: (OrderedCollection with: aCartWithAnItem total) equals: aSalesRecord! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50916012!
test02CanNotAddItemsThatDoNotBelongToStore

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCartWithDefaultCatalog.
	
	self 
		should: [ cart add: aTusLibrosTestObjectsFactory itemNotSoldByTheStore ]
		raise: Error - MessageNotUnderstood
		withExceptionDo: [ :anError |
			self assert: anError messageText = cart invalidItemErrorMessage.
			self assert: cart isEmpty ]! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50915887!
test08CartRemembersTheNumberOfAddedItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCartWithDefaultCatalog.
	
	cart add: 2 of: aTusLibrosTestObjectsFactory itemSoldByTheStore.
	self assert: (cart occurrencesOf: aTusLibrosTestObjectsFactory itemSoldByTheStore) = 2! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50918267!
test06CannotCheckoutWithACreditCardWithoutFunds
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForNoFundsFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithoutFunds
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage.
			self assert: aSalesRecord isEmpty]! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50917582!
test02CanCheckoutACartWithManyItems
	
	| aSalesRecord aCashier totalCheckout aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: 2 of: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet.
	
	totalCheckout := aCashier checkout.
	
	self assert: 40*dollar equals: totalCheckout! !
!CartTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50915899!
test06CartRemembersAddedItems

	| cart |
	
	cart := aTusLibrosTestObjectsFactory createCartWithDefaultCatalog.
	
	cart add: aTusLibrosTestObjectsFactory itemSoldByTheStore.
	self assert: (cart includes: aTusLibrosTestObjectsFactory itemSoldByTheStore)! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50918149!
test07CannotCheckoutWithAStolenCreditCard
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForStolenCreditCardFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory stolenCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithAStolenCreditCard.
			self assert: aSalesRecord isEmpty]! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:12:40' prior: 50917603!
test01CannotCreateACashierForAnEmptyCart
	
	| aSalesRecord |
	aSalesRecord := OrderedCollection new.
	
	self
		should: [Cashier 
			for: tusLibrosTestObjectsFactory createCartWithDefaultCatalog
			payingWith: tusLibrosTestObjectsFactory validCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cartCannotBeEmptyErrorMessage.
			self assert: aSalesRecord isEmpty] ! !

!methodRemoval: TusLibrosTestObjectsFactory #createCart stamp: 'JD 11/3/2021 20:12:40'!
createCart
	
	^Cart acceptingItemsOf: self defaultCatalog!
!TusLibrosTestObjectsFactory methodsFor: 'catalogs' stamp: 'JD 11/3/2021 20:30:49' prior: 50919100!
catalogWithInvalidItemsPriceFormat
	 
	| aCatalog |
	
	aCatalog := Dictionary new.
	aCatalog at: self itemSoldByTheStore put: 20.001*dollar.
	
	^ aCatalog! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:33:08'!
test06
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithAnInvalidCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForInvalidTransactionAmountFormatFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory validCreditCard 
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier invalidTransactionAmountFormatErrorMessage.
			self assert: aSalesRecord isEmpty]! !

!testRun: #CashierTest #test06 stamp: 'JD 11/3/2021 20:33:14'!
ERROR!
!PosnetSimulator methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:33:20'!
prepareForInvalidTransactionAmountFormatFailure
	self shouldBeImplemented.! !
!PosnetSimulator methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:33:34' prior: 50919454!
prepareForInvalidTransactionAmountFormatFailure
	
	description := 'Invalid transaction amount format'! !
!PosnetSimulator methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:33:36' prior: 50919460!
prepareForInvalidTransactionAmountFormatFailure
	
	description := 'Invalid transaction amount format'! !

!testRun: #CashierTest #test06 stamp: 'JD 11/3/2021 20:33:36'!
FAILURE!
!Cashier class methodsFor: 'error messages' stamp: 'JD 11/3/2021 20:35:00'!
invalidTransactionAmountFormatErrorMessage
	
	^ 'Transaction amount format is not valid'! !
!Cashier methodsFor: 'checkout' stamp: 'JD 11/3/2021 20:35:32' prior: 50918250!
checkout
	
	| total aDebitStatusResponse |
	
	total := cart total.
	aDebitStatusResponse := posnet debit: total with: creditCard.
	aDebitStatusResponse = 'Credit card without funds' ifTrue: [
		self error:	 Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage
	].
	aDebitStatusResponse = 'Stolen credit card' ifTrue: [
		self error:	 Cashier cannotCheckoutWithAStolenCreditCard
	].
	aDebitStatusResponse = 'Invalid transaction amount format' ifTrue: [
		self error:	 Cashier invalidTransactionAmountFormatErrorMessage
	].
	salesRecord add: total.
	
	^ total! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CashierTest #test05 stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CashierTest #test06CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 20:35:34'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 20:35:34'!
PASSED!
!Cashier methodsFor: 'checkout' stamp: 'JD 11/3/2021 20:40:47' prior: 50919481!
checkout
	
	| total aDebitStatusResponse |
	
	total := cart total.
	aDebitStatusResponse := posnet debit: total with: creditCard.
	self assert: aDebitStatusResponse ~= 'Credit card without funds' description: [
		self error:	 Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage
	].
	self assert: aDebitStatusResponse ~= 'Stolen credit card' description: [
		self error:	 Cashier cannotCheckoutWithAStolenCreditCard
	].
	self assert: aDebitStatusResponse ~= 'Invalid transaction amount format' description: [
		self error:	 Cashier invalidTransactionAmountFormatErrorMessage
	].
	salesRecord add: total.
	
	^ total! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CashierTest #test05 stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CashierTest #test06CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 20:40:52'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 20:40:52'!
PASSED!
!Cashier methodsFor: 'checkout' stamp: 'JD 11/3/2021 20:41:47'!
assertThatCreditCardHasFunds: aDebitStatusResponse

	^ self assert: aDebitStatusResponse ~= 'Credit card without funds' description: [
		self error:	 Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage
	]! !
!Cashier methodsFor: 'checkout' stamp: 'JD 11/3/2021 20:41:47' prior: 50919555!
checkout
	
	| total aDebitStatusResponse |
	
	total := cart total.
	aDebitStatusResponse := posnet debit: total with: creditCard.
	self assertThatCreditCardHasFunds: aDebitStatusResponse.
	self assert: aDebitStatusResponse ~= 'Stolen credit card' description: [
		self error:	 Cashier cannotCheckoutWithAStolenCreditCard
	].
	self assert: aDebitStatusResponse ~= 'Invalid transaction amount format' description: [
		self error:	 Cashier invalidTransactionAmountFormatErrorMessage
	].
	salesRecord add: total.
	
	^ total! !
!Cashier methodsFor: 'checkout' stamp: 'JD 11/3/2021 20:42:21'!
assertThatIsNotAStolenCreditCard: aDebitStatusResponse

	^ self assert: aDebitStatusResponse ~= 'Stolen credit card' description: [
		self error:	 Cashier cannotCheckoutWithAStolenCreditCard
	]! !
!Cashier methodsFor: 'checkout' stamp: 'JD 11/3/2021 20:42:21' prior: 50919640!
checkout
	
	| total aDebitStatusResponse |
	
	total := cart total.
	aDebitStatusResponse := posnet debit: total with: creditCard.
	self assertThatCreditCardHasFunds: aDebitStatusResponse.
	self assertThatIsNotAStolenCreditCard: aDebitStatusResponse.
	self assert: aDebitStatusResponse ~= 'Invalid transaction amount format' description: [
		self error:	 Cashier invalidTransactionAmountFormatErrorMessage
	].
	salesRecord add: total.
	
	^ total! !
!Cashier methodsFor: 'checkout' stamp: 'JD 11/3/2021 20:42:39'!
assertThatTransactionAmountFormatIsValid: aDebitStatusResponse

	^ self assert: aDebitStatusResponse ~= 'Invalid transaction amount format' description: [
		self error:	 Cashier invalidTransactionAmountFormatErrorMessage
	]! !
!Cashier methodsFor: 'checkout' stamp: 'JD 11/3/2021 20:42:39' prior: 50919668!
checkout
	
	| total aDebitStatusResponse |
	
	total := cart total.
	aDebitStatusResponse := posnet debit: total with: creditCard.
	self assertThatCreditCardHasFunds: aDebitStatusResponse.
	self assertThatIsNotAStolenCreditCard: aDebitStatusResponse.
	self assertThatTransactionAmountFormatIsValid: aDebitStatusResponse.
	salesRecord add: total.
	
	^ total! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CashierTest #test05 stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CashierTest #test06CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 20:42:46'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 20:42:46'!
PASSED!
!Cashier methodsFor: 'checkout' stamp: 'JD 11/3/2021 20:45:50'!
assertThatThePaymentWasSuccessful: aDebitStatusResponse

	self assertThatCreditCardHasFunds: aDebitStatusResponse.
	self assertThatIsNotAStolenCreditCard: aDebitStatusResponse.
	self assertThatTransactionAmountFormatIsValid: aDebitStatusResponse! !
!Cashier methodsFor: 'checkout' stamp: 'JD 11/3/2021 20:45:50' prior: 50919694!
checkout
	
	| total aDebitStatusResponse |
	
	total := cart total.
	aDebitStatusResponse := posnet debit: total with: creditCard.
	self assertThatThePaymentWasSuccessful: aDebitStatusResponse.
	salesRecord add: total.
	
	^ total! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CashierTest #test05 stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CashierTest #test06 stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CashierTest #test06CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 20:45:58'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 20:45:58'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:48:38'!
test05CannotCreateACashierWithACardWithAnInvalidOwnerName
	
	| aSalesRecord aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithAnInvalidOwnerName
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardOwnerNameMustHaveAtMostThirtyDigitsErrorMessage.
			self assert: aSalesRecord isEmpty]! !

!methodRemoval: CashierTest #test05 stamp: 'JD 11/3/2021 20:48:38'!
test05
	
	| aSalesRecord aCartWithAnItem |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithAnInvalidOwnerName
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardOwnerNameMustHaveAtMostThirtyDigitsErrorMessage.
			self assert: aSalesRecord isEmpty]!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:48:54'!
test07CanRegisterASale
	
	| aSalesRecord aCartWithAnItem aCashier |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet.
	
	aCashier checkout.
	
	self assert: (OrderedCollection with: aCartWithAnItem total) equals: aSalesRecord! !

!methodRemoval: CashierTest #test05CanRegisterASale stamp: 'JD 11/3/2021 20:48:54'!
test05CanRegisterASale
	
	| aSalesRecord aCartWithAnItem aCashier |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet.
	
	aCashier checkout.
	
	self assert: (OrderedCollection with: aCartWithAnItem total) equals: aSalesRecord!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:49:15'!
test08CannotCheckoutWithACreditCardWithoutFunds
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForNoFundsFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithoutFunds
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage.
			self assert: aSalesRecord isEmpty]! !

!methodRemoval: CashierTest #test06CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 20:49:15'!
test06CannotCheckoutWithACreditCardWithoutFunds
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForNoFundsFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithoutFunds
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage.
			self assert: aSalesRecord isEmpty]!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:49:19'!
test09CannotCheckoutWithAStolenCreditCard
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForStolenCreditCardFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory stolenCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithAStolenCreditCard.
			self assert: aSalesRecord isEmpty]! !

!methodRemoval: CashierTest #test07CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 20:49:19'!
test07CannotCheckoutWithAStolenCreditCard
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForStolenCreditCardFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory stolenCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithAStolenCreditCard.
			self assert: aSalesRecord isEmpty]!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:50:06'!
test10
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithAnInvalidCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForInvalidTransactionAmountFormatFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory validCreditCard 
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier invalidTransactionAmountFormatErrorMessage.
			self assert: aSalesRecord isEmpty]! !

!methodRemoval: CashierTest #test06 stamp: 'JD 11/3/2021 20:50:06'!
test06
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithAnInvalidCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForInvalidTransactionAmountFormatFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory validCreditCard 
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier invalidTransactionAmountFormatErrorMessage.
			self assert: aSalesRecord isEmpty]!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:50:13'!
test9
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithAnInvalidCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForInvalidTransactionAmountFormatFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory validCreditCard 
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier invalidTransactionAmountFormatErrorMessage.
			self assert: aSalesRecord isEmpty]! !

!methodRemoval: CashierTest #test10 stamp: 'JD 11/3/2021 20:50:13'!
test10
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithAnInvalidCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForInvalidTransactionAmountFormatFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory validCreditCard 
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier invalidTransactionAmountFormatErrorMessage.
			self assert: aSalesRecord isEmpty]!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:50:20'!
test08CannotCheckoutWithAStolenCreditCard
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForStolenCreditCardFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory stolenCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithAStolenCreditCard.
			self assert: aSalesRecord isEmpty]! !

!methodRemoval: CashierTest #test09CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 20:50:20'!
test09CannotCheckoutWithAStolenCreditCard
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForStolenCreditCardFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory stolenCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithAStolenCreditCard.
			self assert: aSalesRecord isEmpty]!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:50:24'!
test07CannotCheckoutWithACreditCardWithoutFunds
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForNoFundsFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithoutFunds
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage.
			self assert: aSalesRecord isEmpty]! !

!methodRemoval: CashierTest #test08CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 20:50:24'!
test08CannotCheckoutWithACreditCardWithoutFunds
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForNoFundsFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithoutFunds
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage.
			self assert: aSalesRecord isEmpty]!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:50:29'!
test06CanRegisterASale
	
	| aSalesRecord aCartWithAnItem aCashier |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet.
	
	aCashier checkout.
	
	self assert: (OrderedCollection with: aCartWithAnItem total) equals: aSalesRecord! !

!methodRemoval: CashierTest #test07CanRegisterASale stamp: 'JD 11/3/2021 20:50:29'!
test07CanRegisterASale
	
	| aSalesRecord aCartWithAnItem aCashier |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: aSalesRecord using: tusLibrosTestObjectsFactory posnet.
	
	aCashier checkout.
	
	self assert: (OrderedCollection with: aCartWithAnItem total) equals: aSalesRecord!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:50:53'!
test09CannotCheckoutWithAnInvalidTransactionAmountFormat
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithAnInvalidCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForInvalidTransactionAmountFormatFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory validCreditCard 
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier invalidTransactionAmountFormatErrorMessage.
			self assert: aSalesRecord isEmpty]! !

!methodRemoval: CashierTest #test9 stamp: 'JD 11/3/2021 20:50:53'!
test9
	
	| aSalesRecord aCartWithAnItem aCashier aPosnet |
	
	aSalesRecord := OrderedCollection new.
	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithAnInvalidCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForInvalidTransactionAmountFormatFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory validCreditCard 
			on: tusLibrosTestObjectsFactory today
			recordingOn: aSalesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier invalidTransactionAmountFormatErrorMessage.
			self assert: aSalesRecord isEmpty]!

----SNAPSHOT----(3 November 2021 20:51:02) CuisUniversity-4913.image priorSource: 18798033!

!classDefinition: #CreditCard category: 'TusLibros' stamp: 'JD 11/3/2021 20:54:21'!
Object subclass: #CreditCard
	instanceVariableNames: 'number expiration ownerName'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CreditCard methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:54:21' prior: 50918792!
initializeWithOwner: aCreditCardOwner withNumber: aCreditCardNumber expiringOn: anExpirationMonthOfYear

	number := aCreditCardNumber.
	expiration := anExpirationMonthOfYear.
	ownerName := aCreditCardOwner ! !
!CreditCard methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 20:54:21' prior: 50916791!
expiration
	
	^ expiration! !
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 20:59:04'!
validCreditCardNumber

	^ 'aValidCCNumber'! !
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 20:59:04' prior: 50918642!
validCreditCard
	
	^ CreditCard withOwner: self validCreditCardOwnerName withNumber: self validCreditCardNumber expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 20:59:04' prior: 50918671!
creditCardWithAnInvalidOwnerName

	^ CreditCard withOwner: 'An invalid credit card owner name' withNumber: self validCreditCardNumber expiringOn: (GregorianMonthOfYear year: (self today year next) month: (self today month))! !
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 20:59:04' prior: 50918888!
expiredCreditCard
	
	^ CreditCard withOwner: self validCreditCardOwnerName withNumber: self validCreditCardNumber expiringOn: (GregorianMonthOfYear year: (self today year previous) month: (self today month))! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 20:59:08'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 20:59:08'!
PASSED!
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 21:00:01'!
validCreditCardExpirationMonthOfYear

	^ GregorianMonthOfYear year: (self today year next) month: (self today month)! !
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 21:00:01' prior: 50920382!
validCreditCard
	
	^ CreditCard withOwner: self validCreditCardOwnerName withNumber: self validCreditCardNumber expiringOn: (self validCreditCardExpirationMonthOfYear)! !
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 21:00:01' prior: 50920392!
creditCardWithAnInvalidOwnerName

	^ CreditCard withOwner: 'An invalid credit card owner name' withNumber: self validCreditCardNumber expiringOn: (self validCreditCardExpirationMonthOfYear)! !
!TusLibrosTestObjectsFactory methodsFor: 'credit cards' stamp: 'JD 11/3/2021 21:00:01' prior: 50918632!
creditCardWithInvalidNumber

	^ CreditCard withOwner: self validCreditCardOwnerName withNumber: '0' expiringOn: (self validCreditCardExpirationMonthOfYear)! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:00:04'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:00:04'!
PASSED!
!TusLibrosTestObjectsFactory methodsFor: 'dates' stamp: 'JD 11/3/2021 21:02:07'!
futureMonthOfYear

	^ GregorianMonthOfYear year: (self today year next) month: (self today month)! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:02:07' prior: 50920476!
validCreditCard
	
	^ CreditCard withOwner: self validCreditCardOwnerName withNumber: self validCreditCardNumber expiringOn: (self futureMonthOfYear)! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:02:07' prior: 50920485!
creditCardWithAnInvalidOwnerName

	^ CreditCard withOwner: 'An invalid credit card owner name' withNumber: self validCreditCardNumber expiringOn: (self futureMonthOfYear)! !
!TusLibrosTestObjectsFactory methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:02:07' prior: 50920495!
creditCardWithInvalidNumber

	^ CreditCard withOwner: self validCreditCardOwnerName withNumber: '0' expiringOn: (self futureMonthOfYear)! !

!methodRemoval: TusLibrosTestObjectsFactory #validCreditCardExpirationMonthOfYear stamp: 'JD 11/3/2021 21:02:07'!
validCreditCardExpirationMonthOfYear

	^ GregorianMonthOfYear year: (self today year next) month: (self today month)!
!TusLibrosTestObjectsFactory methodsFor: 'catalogs' stamp: 'JD 11/3/2021 21:03:59'!
catalogWithAnItemSoldByTheStoreWithValue: anItemValue
	 
	| aCatalog |
	
	aCatalog := Dictionary new.
	aCatalog at: self itemSoldByTheStore put: anItemValue.
	
	^ aCatalog! !
!TusLibrosTestObjectsFactory methodsFor: 'catalogs' stamp: 'JD 11/3/2021 21:04:24' prior: 50919093!
defaultCatalog

	^ self catalogWithAnItemSoldByTheStoreWithValue: 20.00*dollar
! !
!TusLibrosTestObjectsFactory methodsFor: 'catalogs' stamp: 'JD 11/3/2021 21:04:40' prior: 50919416!
catalogWithInvalidItemsPriceFormat
	
	^ self catalogWithAnItemSoldByTheStoreWithValue: 20.001*dollar! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:04:40'!
PASSED!

----SNAPSHOT----(3 November 2021 21:04:52) CuisUniversity-4913.image priorSource: 18838432!

!classDefinition: #CashierTest category: 'TusLibros' stamp: 'JD 11/3/2021 21:06:47'!
TestCase subclass: #CashierTest
	instanceVariableNames: 'tusLibrosTestObjectsFactory salesRecord'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:06:45' prior: 50915450 overrides: 16927572!
setUp
	
	tusLibrosTestObjectsFactory := TusLibrosTestObjectsFactory new.
	salesRecord := OrderedCollection new.! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:07:05' prior: 50919390!
test01CannotCreateACashierForAnEmptyCart

	self
		should: [Cashier 
			for: tusLibrosTestObjectsFactory createCartWithDefaultCatalog
			payingWith: tusLibrosTestObjectsFactory validCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: salesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cartCannotBeEmptyErrorMessage.
			self assert: salesRecord isEmpty] ! !

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:07:06'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:07:06'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:07:17' prior: 50919329!
test02CanCheckoutACartWithManyItems
	
	| aCashier totalCheckout aCartWithAnItem |

	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: 2 of: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: salesRecord using: tusLibrosTestObjectsFactory posnet.
	
	totalCheckout := aCashier checkout.
	
	self assert: 40*dollar equals: totalCheckout! !

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:07:19'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:07:19'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:07:28' prior: 50919171!
test03CannotCreateACashierWithAnExpiredCard
	
	| aCartWithAnItem |

	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory expiredCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: salesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardIsExpiredErrorMessage.
			self assert: salesRecord isEmpty]! !

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:07:29'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:07:29'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:07:58' prior: 50919145!
test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber
	
	| aCartWithAnItem |

	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithInvalidNumber
			on: tusLibrosTestObjectsFactory today
			recordingOn: salesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardNumberMustHaveAtLeastTwelveDigitsErrorMessage.
			self assert: salesRecord isEmpty]! !

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:08:05'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:08:05'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:08:18' prior: 50919836!
test05CannotCreateACashierWithACardWithAnInvalidOwnerName
	
	| aCartWithAnItem |

	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.

	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithAnInvalidOwnerName
			on: tusLibrosTestObjectsFactory today
			recordingOn: salesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardOwnerNameMustHaveAtMostThirtyDigitsErrorMessage.
			self assert: salesRecord isEmpty]! !

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:08:19'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:08:19'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:08:28' prior: 50920256!
test06CanRegisterASale
	
	| aCartWithAnItem aCashier |

	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: salesRecord using: tusLibrosTestObjectsFactory posnet.
	
	aCashier checkout.
	
	self assert: (OrderedCollection with: aCartWithAnItem total) equals: salesRecord! !

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:08:29'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:08:29'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:08:38' prior: 50920199!
test07CannotCheckoutWithACreditCardWithoutFunds
	
	| aCartWithAnItem aCashier aPosnet |

	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForNoFundsFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithoutFunds
			on: tusLibrosTestObjectsFactory today
			recordingOn: salesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage.
			self assert: salesRecord isEmpty]! !

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:08:39'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:08:39'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:09:02' prior: 50920144!
test08CannotCheckoutWithAStolenCreditCard
	
	| aCartWithAnItem aCashier aPosnet |

	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForStolenCreditCardFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory stolenCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: salesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithAStolenCreditCard.
			self assert: salesRecord isEmpty]! !

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:09:03'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:09:03'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:09:12' prior: 50920297!
test09CannotCheckoutWithAnInvalidTransactionAmountFormat
	
	| aCartWithAnItem aCashier aPosnet |

	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithAnInvalidCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForInvalidTransactionAmountFormatFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory validCreditCard 
			on: tusLibrosTestObjectsFactory today
			recordingOn: salesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier invalidTransactionAmountFormatErrorMessage.
			self assert: salesRecord isEmpty]! !

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:09:13'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:09:13'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:11:29'!
createACartWithDefaultCatalogAndAnItemSoldByTheStore

	^ tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:11:29' prior: 50920856!
test03CannotCreateACashierWithAnExpiredCard
	
	| aCartWithAnItem |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory expiredCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: salesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardIsExpiredErrorMessage.
			self assert: salesRecord isEmpty]! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:11:29' prior: 50921188!
test07CannotCheckoutWithACreditCardWithoutFunds
	
	| aCartWithAnItem aCashier aPosnet |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForNoFundsFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithoutFunds
			on: tusLibrosTestObjectsFactory today
			recordingOn: salesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage.
			self assert: salesRecord isEmpty]! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:11:29' prior: 50921109!
test06CanRegisterASale
	
	| aCartWithAnItem aCashier |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.
	aCashier := Cashier 
				for: aCartWithAnItem
				payingWith: tusLibrosTestObjectsFactory validCreditCard
				on: tusLibrosTestObjectsFactory today
				recordingOn: salesRecord using: tusLibrosTestObjectsFactory posnet.
	
	aCashier checkout.
	
	self assert: (OrderedCollection with: aCartWithAnItem total) equals: salesRecord! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:11:29' prior: 50921024!
test05CannotCreateACashierWithACardWithAnInvalidOwnerName
	
	| aCartWithAnItem |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.

	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithAnInvalidOwnerName
			on: tusLibrosTestObjectsFactory today
			recordingOn: salesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardOwnerNameMustHaveAtMostThirtyDigitsErrorMessage.
			self assert: salesRecord isEmpty]! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:11:29' prior: 50921275!
test08CannotCheckoutWithAStolenCreditCard
	
	| aCartWithAnItem aCashier aPosnet |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForStolenCreditCardFailure.
	aCashier := Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory stolenCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: salesRecord
			using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithAStolenCreditCard.
			self assert: salesRecord isEmpty]! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:11:29' prior: 50920939!
test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber
	
	| aCartWithAnItem |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.
	self
		should: [Cashier 
			for: aCartWithAnItem
			payingWith: tusLibrosTestObjectsFactory creditCardWithInvalidNumber
			on: tusLibrosTestObjectsFactory today
			recordingOn: salesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier creditCardNumberMustHaveAtLeastTwelveDigitsErrorMessage.
			self assert: salesRecord isEmpty]! !

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:11:31'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:11:31'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:15:58'!
assertThatCreatACashierFor: aCatalog payingWith: aCreditCard shouldRaiseErrorWithDescription: anErrorDescription

	self
		should: [Cashier 
			for: aCatalog
			payingWith: aCreditCard
			on: tusLibrosTestObjectsFactory today
			recordingOn: salesRecord using: tusLibrosTestObjectsFactory posnet]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = anErrorDescription.
			self assert: salesRecord isEmpty]! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:16:56' prior: 50920697!
test01CannotCreateACashierForAnEmptyCart

	self assertThatCreatACashierFor: (tusLibrosTestObjectsFactory createCartWithDefaultCatalog) payingWith: (tusLibrosTestObjectsFactory validCreditCard) shouldRaiseErrorWithDescription: (Cashier cartCannotBeEmptyErrorMessage).! !

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:16:57'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:16:57'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:17:52' prior: 50921457!
test03CannotCreateACashierWithAnExpiredCard
	
	| aCartWithAnItem |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.

	self assertThatCreatACashierFor: aCartWithAnItem payingWith: (tusLibrosTestObjectsFactory expiredCreditCard) shouldRaiseErrorWithDescription: (Cashier creditCardIsExpiredErrorMessage).! !

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:17:53'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:17:53'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:18:19' prior: 50921569!
test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber
	
	| aCartWithAnItem |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.

	self assertThatCreatACashierFor: aCartWithAnItem payingWith: (tusLibrosTestObjectsFactory creditCardWithInvalidNumber) shouldRaiseErrorWithDescription: (Cashier creditCardNumberMustHaveAtLeastTwelveDigitsErrorMessage).! !

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:18:21'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:18:21'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:18:52' prior: 50921521!
test05CannotCreateACashierWithACardWithAnInvalidOwnerName
	
	| aCartWithAnItem |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.
	
	self assertThatCreatACashierFor: aCartWithAnItem payingWith: (tusLibrosTestObjectsFactory creditCardWithAnInvalidOwnerName) shouldRaiseErrorWithDescription: (Cashier creditCardOwnerNameMustHaveAtMostThirtyDigitsErrorMessage).! !

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:18:54'!
PASSED!

----SNAPSHOT----(3 November 2021 21:19:19) CuisUniversity-4913.image priorSource: 18848857!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:22:29'!
createACashierOnTodayFor: aCart payingWith: aCreditCard using: aPosnet

	^ Cashier 
		for: aCart
		payingWith: aCreditCard
		on: tusLibrosTestObjectsFactory today
		recordingOn: salesRecord using: aPosnet
! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:23:20' prior: 50920776!
test02CanCheckoutACartWithManyItems
	
	| aCashier totalCheckout aCartWithAnItem |

	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithDefaultCatalog add: 2 of: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aCashier := self createACashierOnTodayFor: aCartWithAnItem payingWith: tusLibrosTestObjectsFactory validCreditCard using: tusLibrosTestObjectsFactory posnet.

	totalCheckout := aCashier checkout.
	
	self assert: 40*dollar equals: totalCheckout! !

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:23:21'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:23:21'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:23:47' prior: 50921503!
test06CanRegisterASale
	
	| aCartWithAnItem aCashier |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.
	aCashier := self createACashierOnTodayFor: aCartWithAnItem payingWith: tusLibrosTestObjectsFactory validCreditCard using: tusLibrosTestObjectsFactory posnet.
	
	aCashier checkout.
	
	self assert: (OrderedCollection with: aCartWithAnItem total) equals: salesRecord! !

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:23:48'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:23:48'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:24:10' prior: 50921478!
test07CannotCheckoutWithACreditCardWithoutFunds
	
	| aCartWithAnItem aCashier aPosnet |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForNoFundsFailure.
	aCashier := self createACashierOnTodayFor: aCartWithAnItem payingWith: tusLibrosTestObjectsFactory creditCardWithoutFunds using: aPosnet.
	
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage.
			self assert: salesRecord isEmpty]! !

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:24:11'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:24:11'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:24:31' prior: 50921544!
test08CannotCheckoutWithAStolenCreditCard
	
	| aCartWithAnItem aCashier aPosnet |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForStolenCreditCardFailure.
	aCashier := self createACashierOnTodayFor: aCartWithAnItem payingWith: tusLibrosTestObjectsFactory stolenCreditCard using: aPosnet.

	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier cannotCheckoutWithAStolenCreditCard.
			self assert: salesRecord isEmpty]! !

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:24:32'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:24:32'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:24:56' prior: 50921361!
test09CannotCheckoutWithAnInvalidTransactionAmountFormat
	
	| aCartWithAnItem aCashier aPosnet |

	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithAnInvalidCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForInvalidTransactionAmountFormatFailure.
	aCashier := self createACashierOnTodayFor: aCartWithAnItem payingWith: tusLibrosTestObjectsFactory validCreditCard using: aPosnet.
		
	self
		should: [aCashier checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = Cashier invalidTransactionAmountFormatErrorMessage.
			self assert: salesRecord isEmpty]! !

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:24:57'!
PASSED!

----SNAPSHOT----(3 November 2021 21:25:04) CuisUniversity-4913.image priorSource: 18891221!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:32:40'!
assertThatCheckout: aCashierToCheckout raiseErrorWithDescription: anErrorDescription

	self
		should: [aCashierToCheckout checkout]
		raise: Error - MessageNotUnderstood 
		withExceptionDo: [:anError | 
			self assert: anError messageText = anErrorDescription.
			self assert: salesRecord isEmpty]! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:33:09' prior: 50922168!
test07CannotCheckoutWithACreditCardWithoutFunds
	
	| aCartWithAnItem aCashier aPosnet |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForNoFundsFailure.
	aCashier := self createACashierOnTodayFor: aCartWithAnItem payingWith: tusLibrosTestObjectsFactory creditCardWithoutFunds using: aPosnet.

	self assertThatCheckout: aCashier raiseErrorWithDescription: Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage! !

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:33:10'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:33:10'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:33:27' prior: 50922252!
test08CannotCheckoutWithAStolenCreditCard
	
	| aCartWithAnItem aCashier aPosnet |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForStolenCreditCardFailure.
	aCashier := self createACashierOnTodayFor: aCartWithAnItem payingWith: tusLibrosTestObjectsFactory stolenCreditCard using: aPosnet.

	self assertThatCheckout: aCashier raiseErrorWithDescription: Cashier cannotCheckoutWithAStolenCreditCard! !

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:33:28'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:33:28'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:33:51' prior: 50922335!
test09CannotCheckoutWithAnInvalidTransactionAmountFormat
	
	| aCartWithAnItem aCashier aPosnet |

	aCartWithAnItem := tusLibrosTestObjectsFactory createCartWithAnInvalidCatalog add: tusLibrosTestObjectsFactory itemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForInvalidTransactionAmountFormatFailure.
	aCashier := self createACashierOnTodayFor: aCartWithAnItem payingWith: tusLibrosTestObjectsFactory validCreditCard using: aPosnet.

	self assertThatCheckout: aCashier raiseErrorWithDescription: Cashier invalidTransactionAmountFormatErrorMessage! !

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:33:52'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:33:52'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:37:15'!
assertThatCheckoutACashierWith: aCreditCard using: aPosnet raiseErrorWithDescription: anErrorDescription
	
	| aCartWithAnItem aCashier |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.
	aCashier := self createACashierOnTodayFor: aCartWithAnItem payingWith: aCreditCard using: aPosnet.

	self assertThatCheckout: aCashier raiseErrorWithDescription: anErrorDescription! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:38:00' prior: 50922516!
test08CannotCheckoutWithAStolenCreditCard
	
	| aCartWithAnItem aPosnet |

	aCartWithAnItem := self createACartWithDefaultCatalogAndAnItemSoldByTheStore.
	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForStolenCreditCardFailure.
	
	self assertThatCheckoutACashierWith: tusLibrosTestObjectsFactory stolenCreditCard using: aPosnet raiseErrorWithDescription: Cashier cannotCheckoutWithAStolenCreditCard! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:38:18' prior: 50922693!
test08CannotCheckoutWithAStolenCreditCard
	
	| aPosnet |

	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForStolenCreditCardFailure.
	
	self assertThatCheckoutACashierWith: tusLibrosTestObjectsFactory stolenCreditCard using: aPosnet raiseErrorWithDescription: Cashier cannotCheckoutWithAStolenCreditCard! !

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:38:22'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:38:22'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:39:03' prior: 50922595!
test09CannotCheckoutWithAnInvalidTransactionAmountFormat

	| aPosnet |

	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForInvalidTransactionAmountFormatFailure.
	
	self assertThatCheckoutACashierWith: tusLibrosTestObjectsFactory validCreditCard using: aPosnet raiseErrorWithDescription: Cashier invalidTransactionAmountFormatErrorMessage! !

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:39:04'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:39:04'!
PASSED!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:40:46' prior: 50922436!
test07CannotCheckoutWithACreditCardWithoutFunds

	| aPosnet |

	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForStolenCreditCardFailure.
	
	self assertThatCheckoutACashierWith: tusLibrosTestObjectsFactory creditCardWithoutFunds using: aPosnet raiseErrorWithDescription: Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage! !

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:40:47'!
FAILURE!
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:41:00' prior: 50922858!
test07CannotCheckoutWithACreditCardWithoutFunds

	| aPosnet |

	aPosnet := tusLibrosTestObjectsFactory posnet.
	aPosnet prepareForNoFundsFailure.
	
	self assertThatCheckoutACashierWith: tusLibrosTestObjectsFactory creditCardWithoutFunds using: aPosnet raiseErrorWithDescription: Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage! !

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:41:01'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:41:01'!
PASSED!
!TusLibrosTestObjectsFactory methodsFor: 'posnets' stamp: 'JD 11/3/2021 21:43:01'!
posnetPreparedForNoFundsFailure
	
	| aPosnet |

	aPosnet := self posnet.
	aPosnet prepareForNoFundsFailure.
	
	^ aPosnet! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:43:09' prior: 50922876!
test07CannotCheckoutWithACreditCardWithoutFunds

	| aPosnet |

	aPosnet := tusLibrosTestObjectsFactory posnetPreparedForNoFundsFailure.
	
	self assertThatCheckoutACashierWith: tusLibrosTestObjectsFactory creditCardWithoutFunds using: aPosnet raiseErrorWithDescription: Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage! !

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:43:10'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:43:10'!
PASSED!
!TusLibrosTestObjectsFactory methodsFor: 'posnets' stamp: 'JD 11/3/2021 21:43:29'!
posnetPreparedForStolenCreditCardFailure
	
	| aPosnet |

	aPosnet := self posnet.
	aPosnet prepareForStolenCreditCardFailure.
	
	^ aPosnet! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:43:34' prior: 50922710!
test08CannotCheckoutWithAStolenCreditCard
	
	| aPosnet |

	aPosnet := tusLibrosTestObjectsFactory posnetPreparedForStolenCreditCardFailure.
	
	self assertThatCheckoutACashierWith: tusLibrosTestObjectsFactory stolenCreditCard using: aPosnet raiseErrorWithDescription: Cashier cannotCheckoutWithAStolenCreditCard! !

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:43:35'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:43:35'!
PASSED!
!TusLibrosTestObjectsFactory methodsFor: 'posnets' stamp: 'JD 11/3/2021 21:43:56'!
posnetPreparedForInvalidTransactionAmountFormatFailure
	
	| aPosnet |

	aPosnet := self posnet.
	aPosnet prepareForInvalidTransactionAmountFormatFailure.
	
	^ aPosnet! !
!CashierTest methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:44:00' prior: 50922783!
test09CannotCheckoutWithAnInvalidTransactionAmountFormat

	| aPosnet |

	aPosnet := tusLibrosTestObjectsFactory posnetPreparedForInvalidTransactionAmountFormatFailure.
	
	self assertThatCheckoutACashierWith: tusLibrosTestObjectsFactory validCreditCard using: aPosnet raiseErrorWithDescription: Cashier invalidTransactionAmountFormatErrorMessage! !

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:44:01'!
PASSED!

----SNAPSHOT----(3 November 2021 21:44:16) CuisUniversity-4913.image priorSource: 18904623!
!Cashier methodsFor: 'assertions' stamp: 'JD 11/3/2021 21:50:28' prior: 50919659!
assertThatIsNotAStolenCreditCard: aDebitStatusResponse

	^ self assert: aDebitStatusResponse ~= posnet messageForStolenCreditCard description: [
		self error:	 Cashier cannotCheckoutWithAStolenCreditCard
	]! !
!PosnetSimulator methodsFor: 'context configuration' stamp: 'JD 11/3/2021 21:50:43'!
messageForStolenCreditCard

	^ 'Stolen credit card'! !
!PosnetSimulator methodsFor: 'context configuration' stamp: 'JD 11/3/2021 21:50:43' prior: 50918187!
prepareForStolenCreditCardFailure
	
	description := self messageForStolenCreditCard! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:50:46'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:50:46'!
PASSED!
!Cashier methodsFor: 'assertions' stamp: 'JD 11/3/2021 21:51:16' prior: 50919630!
assertThatCreditCardHasFunds: aDebitStatusResponse

	^ self assert: aDebitStatusResponse ~= posnet messageForCreditCardWithoutFunds description: [
		self error:	 Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage
	]! !
!PosnetSimulator methodsFor: 'context configuration' stamp: 'JD 11/3/2021 21:51:21'!
messageForCreditCardWithoutFunds

	^ 'Credit card without funds'! !
!PosnetSimulator methodsFor: 'context configuration' stamp: 'JD 11/3/2021 21:51:21' prior: 50917935!
prepareForNoFundsFailure
	
	description := self messageForCreditCardWithoutFunds! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:51:26'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:51:26'!
PASSED!
!Cashier methodsFor: 'assertions' stamp: 'JD 11/3/2021 21:51:56' prior: 50919684!
assertThatTransactionAmountFormatIsValid: aDebitStatusResponse

	^ self assert: aDebitStatusResponse ~= posnet messageForInvalidTransactionAmountFormat description: [
		self error:	 Cashier invalidTransactionAmountFormatErrorMessage
	]! !
!PosnetSimulator methodsFor: 'context configuration' stamp: 'JD 11/3/2021 21:52:02'!
messageForInvalidTransactionAmountFormat

	^ 'Invalid transaction amount format'! !
!PosnetSimulator methodsFor: 'context configuration' stamp: 'JD 11/3/2021 21:52:02' prior: 50919467!
prepareForInvalidTransactionAmountFormatFailure
	
	description := self messageForInvalidTransactionAmountFormat! !

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:52:05'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:52:05'!
PASSED!
!PosnetSimulator methodsFor: 'context configuration' stamp: 'JD 11/3/2021 21:52:16'!
descriptionForCreditCardWithoutFunds

	^ 'Credit card without funds'! !
!PosnetSimulator methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:52:16' prior: 50923291!
prepareForNoFundsFailure
	
	description := self descriptionForCreditCardWithoutFunds! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:52:16' prior: 50923275!
assertThatCreditCardHasFunds: aDebitStatusResponse

	^ self assert: aDebitStatusResponse ~= posnet descriptionForCreditCardWithoutFunds description: [
		self error:	 Cashier cannotCheckoutWithACreditCardWithoutFundsErrorMessage
	]! !

!methodRemoval: PosnetSimulator #messageForCreditCardWithoutFunds stamp: 'JD 11/3/2021 21:52:16'!
messageForCreditCardWithoutFunds

	^ 'Credit card without funds'!
!PosnetSimulator methodsFor: 'context configuration' stamp: 'JD 11/3/2021 21:52:23'!
descriptionForInvalidTransactionAmountFormat

	^ 'Invalid transaction amount format'! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:52:23' prior: 50923353!
assertThatTransactionAmountFormatIsValid: aDebitStatusResponse

	^ self assert: aDebitStatusResponse ~= posnet descriptionForInvalidTransactionAmountFormat description: [
		self error:	 Cashier invalidTransactionAmountFormatErrorMessage
	]! !
!PosnetSimulator methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:52:23' prior: 50923370!
prepareForInvalidTransactionAmountFormatFailure
	
	description := self descriptionForInvalidTransactionAmountFormat! !

!methodRemoval: PosnetSimulator #messageForInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:52:23'!
messageForInvalidTransactionAmountFormat

	^ 'Invalid transaction amount format'!
!PosnetSimulator methodsFor: 'context configuration' stamp: 'JD 11/3/2021 21:52:29'!
descriptionForStolenCreditCard

	^ 'Stolen credit card'! !
!Cashier methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:52:29' prior: 50923198!
assertThatIsNotAStolenCreditCard: aDebitStatusResponse

	^ self assert: aDebitStatusResponse ~= posnet descriptionForStolenCreditCard description: [
		self error:	 Cashier cannotCheckoutWithAStolenCreditCard
	]! !
!PosnetSimulator methodsFor: 'as yet unclassified' stamp: 'JD 11/3/2021 21:52:29' prior: 50923213!
prepareForStolenCreditCardFailure
	
	description := self descriptionForStolenCreditCard! !

!methodRemoval: PosnetSimulator #messageForStolenCreditCard stamp: 'JD 11/3/2021 21:52:29'!
messageForStolenCreditCard

	^ 'Stolen credit card'!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CashierTest #test01CannotCreateACashierForAnEmptyCart stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CashierTest #test02CanCheckoutACartWithManyItems stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CashierTest #test03CannotCreateACashierWithAnExpiredCard stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CashierTest #test04CannotCreateACashierWithACardWithAnInvalidCreditCardNumber stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CashierTest #test05CannotCreateACashierWithACardWithAnInvalidOwnerName stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CashierTest #test06CanRegisterASale stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CashierTest #test07CannotCheckoutWithACreditCardWithoutFunds stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CashierTest #test08CannotCheckoutWithAStolenCreditCard stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

!testRun: #CashierTest #test09CannotCheckoutWithAnInvalidTransactionAmountFormat stamp: 'JD 11/3/2021 21:52:31'!
PASSED!

----SNAPSHOT----(3 November 2021 21:54:41) CuisUniversity-4913.image priorSource: 18929415!